/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/myPOS360/Campaigns/{campaign_id}": {
    /** Gets campaign by id */
    get: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id": number;
        };
        path: {
          /** @description Id of campaign to be retrieved */
          campaign_id: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["PromocodeCampaignDto"];
            "application/json": components["schemas"]["PromocodeCampaignDto"];
            "text/json": components["schemas"]["PromocodeCampaignDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Campaigns": {
    /** Gets list of campaigns */
    get: {
      parameters: {
        query: {
          /** @description Page to be retrieved */
          page_number: number;
          /** @description Size of the page */
          page_size: number;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          /** @description Filter campaigns by wallet */
          "Wallet-Id": number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["PromocodeCampaignDtoPaginatedList"];
            "application/json": components["schemas"]["PromocodeCampaignDtoPaginatedList"];
            "text/json": components["schemas"]["PromocodeCampaignDtoPaginatedList"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Updates campaign */
    put: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id": number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdateCampaignCommand"];
          "text/json": components["schemas"]["UpdateCampaignCommand"];
          "application/*+json": components["schemas"]["UpdateCampaignCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Creates a new campaign */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id": number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AddCampaignCommand"];
          "text/json": components["schemas"]["AddCampaignCommand"];
          "application/*+json": components["schemas"]["AddCampaignCommand"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["IdResponseModel"];
            "application/json": components["schemas"]["IdResponseModel"];
            "text/json": components["schemas"]["IdResponseModel"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Campaigns/{id}": {
    /** Deletes campaign by id */
    delete: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id": number;
        };
        path: {
          /** @description Campaign id to be deleted */
          id: number;
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Carts": {
    /** Updates cart */
    put: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id": number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdateCartCommand"];
          "text/json": components["schemas"]["UpdateCartCommand"];
          "application/*+json": components["schemas"]["UpdateCartCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: {
            "text/plain": components["schemas"]["CartDto"];
            "application/json": components["schemas"]["CartDto"];
            "text/json": components["schemas"]["CartDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Creates a new cart */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id": number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CreateCartCommand"];
          "text/json": components["schemas"]["CreateCartCommand"];
          "application/*+json": components["schemas"]["CreateCartCommand"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "text/plain": components["schemas"]["CartDto"];
            "application/json": components["schemas"]["CartDto"];
            "text/json": components["schemas"]["CartDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Carts/{cart_id}/sync": {
    /** Syncs cart information with DB */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id": number;
        };
        path: {
          cart_id: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["SyncCartCommand"];
          "text/json": components["schemas"]["SyncCartCommand"];
          "application/*+json": components["schemas"]["SyncCartCommand"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["CartDto"];
            "application/json": components["schemas"]["CartDto"];
            "text/json": components["schemas"]["CartDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Carts/status": {
    /** Updates cart status */
    patch: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id": number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdateCartStatusCommand"];
          "text/json": components["schemas"]["UpdateCartStatusCommand"];
          "application/*+json": components["schemas"]["UpdateCartStatusCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: {
            "text/plain": components["schemas"]["CartDto"];
            "application/json": components["schemas"]["CartDto"];
            "text/json": components["schemas"]["CartDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Carts/url": {
    /** Updates cart url */
    patch: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id": number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdateCartUrlCommand"];
          "text/json": components["schemas"]["UpdateCartUrlCommand"];
          "application/*+json": components["schemas"]["UpdateCartUrlCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: {
            "text/plain": components["schemas"]["CartDto"];
            "application/json": components["schemas"]["CartDto"];
            "text/json": components["schemas"]["CartDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Carts/{cart_id}": {
    /** Gets cart by id */
    get: {
      parameters: {
        query: {
          store_id?: number;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id": number;
        };
        path: {
          cart_id: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["CartDto"];
            "application/json": components["schemas"]["CartDto"];
            "text/json": components["schemas"]["CartDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Carts/abandoned": {
    /** Gets list of abandoned carts */
    get: {
      parameters: {
        query: {
          page_number: number;
          page_size: number;
          /** @description Represents online store or physical outlet */
          platform_id?: number;
          cart_id?: number;
          /** @description Unix timestamp in seconds */
          created_from?: number;
          /** @description Unix timestamp in seconds */
          created_to?: number;
          /** @description Unix timestamp in seconds */
          modified_from?: number;
          /** @description Unix timestamp in seconds */
          modified_to?: number;
          /**
           * @description LIST, separate elements with comma
           * @example 1 = Abandoned, 2 = AwaitingPayment, 3 = Finished
           */
          statuses?: string;
          /** @description Filter is CONTAINS (true = uncategorized, false = categorized) */
          uncategorized_products?: boolean;
          customer_has_email?: boolean;
          customer_has_phone_number?: boolean;
          customer_has_delivery_address?: boolean;
          customer_has_no_details?: boolean;
          /** @description LIST, separate elements with comma */
          category_ids?: string;
          /** @description LIST, separate elements with comma */
          product_ids?: string;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id": number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["GetAbandonedCartsQueryResponseDtoPaginatedList"];
            "application/json": components["schemas"]["GetAbandonedCartsQueryResponseDtoPaginatedList"];
            "text/json": components["schemas"]["GetAbandonedCartsQueryResponseDtoPaginatedList"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Carts/abandoned/export": {
    /** Gets list of abandoned carts for export */
    get: {
      parameters: {
        query: {
          page_number: number;
          page_size: number;
          platform_id?: number;
          cart_id?: number;
          /** @description Unix timestamp in seconds */
          created_from?: number;
          /** @description Unix timestamp in seconds */
          created_to?: number;
          /** @description Unix timestamp in seconds */
          modified_from?: number;
          /** @description Unix timestamp in seconds */
          modified_to?: number;
          /** @description Filter is CONTAINS (true = uncategorized, false = categorized) */
          uncategorized_products?: boolean;
          customer_has_email?: boolean;
          customer_has_phone_number?: boolean;
          customer_has_delivery_address?: boolean;
          customer_has_no_details?: boolean;
          /**
           * @description LIST, separate elements with comma
           * @example 1 = Abandoned, 2 = AwaitingPayment, 3 = Finished
           */
          statuses?: string;
          /** @description LIST, separate elements with comma */
          category_ids?: string;
          /** @description LIST, separate elements with comma */
          product_ids?: string;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id": number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["GetAbandonedCartsDetailedReportQueryResponseDtoPaginatedList"];
            "application/json": components["schemas"]["GetAbandonedCartsDetailedReportQueryResponseDtoPaginatedList"];
            "text/json": components["schemas"]["GetAbandonedCartsDetailedReportQueryResponseDtoPaginatedList"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Carts/{cart_id}/sale_articles/{sale_article_id}": {
    /** Removes sale article from cart by id */
    delete: {
      parameters: {
        query: {
          store_id: number;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
        };
        path: {
          cart_id: number;
          sale_article_id: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Carts/sale_articles": {
    /** Updates sale article in cart */
    put: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdateSaleArticleInCartCommand"];
          "text/json": components["schemas"]["UpdateSaleArticleInCartCommand"];
          "application/*+json": components["schemas"]["UpdateSaleArticleInCartCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: {
            "text/plain": components["schemas"]["CartDto"];
            "application/json": components["schemas"]["CartDto"];
            "text/json": components["schemas"]["CartDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Adds sale article to cart */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AddSaleArticleInCartCommand"];
          "text/json": components["schemas"]["AddSaleArticleInCartCommand"];
          "application/*+json": components["schemas"]["AddSaleArticleInCartCommand"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "text/plain": components["schemas"]["CartDto"];
            "application/json": components["schemas"]["CartDto"];
            "text/json": components["schemas"]["CartDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Carts/apply_promocode": {
    /** Applies promocode to cart */
    put: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ApplyPromocodeToCartCommand"];
          "text/json": components["schemas"]["ApplyPromocodeToCartCommand"];
          "application/*+json": components["schemas"]["ApplyPromocodeToCartCommand"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "text/plain": components["schemas"]["CartDto"];
            "application/json": components["schemas"]["CartDto"];
            "text/json": components["schemas"]["CartDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Carts/remove_promocode": {
    /** Removes promocode from cart */
    put: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["RemovePromocodeFromCartCommand"];
          "text/json": components["schemas"]["RemovePromocodeFromCartCommand"];
          "application/*+json": components["schemas"]["RemovePromocodeFromCartCommand"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "text/plain": components["schemas"]["CartDto"];
            "application/json": components["schemas"]["CartDto"];
            "text/json": components["schemas"]["CartDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Carts/sale_articles/free": {
    /** Adds free sale article to cart */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AddFreeSaleArticleCommand"];
          "text/json": components["schemas"]["AddFreeSaleArticleCommand"];
          "application/*+json": components["schemas"]["AddFreeSaleArticleCommand"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "text/plain": components["schemas"]["CartDto"];
            "application/json": components["schemas"]["CartDto"];
            "text/json": components["schemas"]["CartDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Catalog/by-parrent-category": {
    /** Gets catalog products from elasticsearch filtered by parent category */
    get: {
      parameters: {
        query: {
          order_by: components["schemas"]["OrderBy"];
          page_number: number;
          page_size: number;
          category_id?: number;
          discount_id?: number;
          currency?: string;
          platform_id?: number;
          /** @example 1 = Physical, 2 = OnlineShop, 3 = Viber, 4 = Unassigned */
          platform_type?: number;
          language?: string;
          outlet_id?: number;
          keywords?: string;
          is_in_stock?: boolean;
          risk_status?: number;
          item_ids?: string;
          type?: number;
          /** @description Relevant only when tag keywords is not empty */
          keywords_language?: string;
          /** @description List, separate with ',' ,when set it indicates from wich categories to return products */
          max_from_category_ids?: string;
          /** @description Indicates how much products per category to return (Relevant only if max_from_category_ids is set) */
          max_number_from_category?: number;
          /** @description Relevant when order by = NameAsc/NameDesc */
          order_by_language?: string;
          /** @description Regular calls work as expected (Exception when max_from_category_ids is not empty and uncategorized = true, uncategorized products are added to result otherwise uncategorized products are skipped */
          uncategorized?: boolean;
          is_visible?: boolean;
          /** @description List, separate with ',' ,when set it indicates from wich categories to not return products */
          excluded_categories?: string;
          /** @description Filters only by main category (NOT parent) */
          main_category_id?: number;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["ProductDTOPaginatedList"];
            "application/json": components["schemas"]["ProductDTOPaginatedList"];
            "text/json": components["schemas"]["ProductDTOPaginatedList"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Gets catalog products from elasticsearch filtered by parent category */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["SearchProductsByParentCategoryPostQuery"];
          "text/json": components["schemas"]["SearchProductsByParentCategoryPostQuery"];
          "application/*+json": components["schemas"]["SearchProductsByParentCategoryPostQuery"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["ProductDTOPaginatedList"];
            "application/json": components["schemas"]["ProductDTOPaginatedList"];
            "text/json": components["schemas"]["ProductDTOPaginatedList"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Catalog/recalculated/by-parrent-category": {
    /** Gets and recalculates catalog products from elasticsearch filtered by parent category */
    get: {
      parameters: {
        query: {
          order_by: components["schemas"]["OrderBy"];
          page_number: number;
          page_size: number;
          category_id?: number;
          discount_id?: number;
          currency?: string;
          platform_id?: number;
          /** @example 1 = Physical, 2 = OnlineShop, 3 = Viber, 4 = Unassigned */
          platform_type?: number;
          language?: string;
          outlet_id?: number;
          keywords?: string;
          is_in_stock?: boolean;
          risk_status?: number;
          item_ids?: string;
          type?: number;
          /** @description Relevant only when tag keywords is not empty */
          keywords_language?: string;
          /** @description List, separate with ',' ,when set it indicates from wich categories to return products */
          max_from_category_ids?: string;
          /** @description Indicates how much products per category to return (Relevant only if max_from_category_ids is set) */
          max_number_from_category?: number;
          /** @description Relevant when order by = NameAsc/NameDesc */
          order_by_language?: string;
          /** @description Regular calls work as expected (Exception when max_from_category_ids is not empty and uncategorized = true, uncategorized products are added to result otherwise uncategorized products are skipped */
          uncategorized?: boolean;
          is_visible?: boolean;
          buyer_country_iso2_code: string;
          seller_country_iso2_code: string;
          client_has_valid_vat_number: boolean;
          excluded_categories?: string;
          /** @description Filters only by main category (NOT parent) */
          main_category_id?: number;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id": number;
          Tid?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["ProductDTOPaginatedList"];
            "application/json": components["schemas"]["ProductDTOPaginatedList"];
            "text/json": components["schemas"]["ProductDTOPaginatedList"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Gets and recalculates catalog products from elasticsearch filtered by parent category */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id": number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["GetRecalculatedProductsByParentCategoryPostQuery"];
          "text/json": components["schemas"]["GetRecalculatedProductsByParentCategoryPostQuery"];
          "application/*+json": components["schemas"]["GetRecalculatedProductsByParentCategoryPostQuery"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["ProductDTOPaginatedList"];
            "application/json": components["schemas"]["ProductDTOPaginatedList"];
            "text/json": components["schemas"]["ProductDTOPaginatedList"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Catalog/product-types-linked-to-platform": {
    /** Gets product types linked to specific platform */
    get: {
      parameters: {
        query: {
          platform_id: number;
          /** @example 1 = Draft, 2 = Pending, 3 = Active, 4 = Deleted, 5 = Rejected, 6 = ForRiskCheck, 7 = RequestInfrormation, 8 = ForAdittionalRiskCheck, 9 = ForCorrection */
          risk_status?: number;
          is_in_stock?: boolean;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          Wallet?: number;
          "Login-Id"?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["ProductTypesLinkedToPlatformQueryResponseDto"];
            "application/json": components["schemas"]["ProductTypesLinkedToPlatformQueryResponseDto"];
            "text/json": components["schemas"]["ProductTypesLinkedToPlatformQueryResponseDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Categories": {
    /** Gets categories list */
    get: {
      parameters: {
        query: {
          page_number: number;
          page_size: number;
          /** @description Indicates if empty categories should be excluded from the list */
          remove_empty_categories?: boolean;
          platform_id?: number;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key"?: string;
          "Api-Secret"?: string;
          "Login-Id"?: string;
          "Wallet-Id"?: string;
          Tid?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["GetCategoriesListCategoryDtoPaginatedList"];
            "application/json": components["schemas"]["GetCategoriesListCategoryDtoPaginatedList"];
            "text/json": components["schemas"]["GetCategoriesListCategoryDtoPaginatedList"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Creates a new category */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key"?: string;
          "Api-Secret"?: string;
          "Login-Id"?: string;
          "Wallet-Id"?: string;
          Tid?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CreateCategoryCommand"];
          "text/json": components["schemas"]["CreateCategoryCommand"];
          "application/*+json": components["schemas"]["CreateCategoryCommand"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "text/plain": components["schemas"]["CategoryDto"];
            "application/json": components["schemas"]["CategoryDto"];
            "text/json": components["schemas"]["CategoryDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Categories/web": {
    /** Gets list of categories (WEB only) */
    get: {
      parameters: {
        query: {
          outlet_id?: number;
          platform_id?: number;
          /** @example 1 = Physical, 2 = OnlineShop, 3 = Viber, 4 = Unassigned */
          platform_type?: number;
          risk_status?: number;
          items_in_stock?: boolean;
          has_visible_items?: boolean;
          /**
           * @description LIST, separate elements with comma
           * @example 1 = Physical, 2 = Service, 3 = Bundle
           */
          item_types?: string;
          /**
           * @description LIST, separate elements with comma
           * @example 0 = Products, 1 = Services, 2 = Mixed
           */
          bundle_item_types?: string;
          /** @description Indicates if empty categories should be excluded from the list */
          with_empty_categories?: boolean;
          max_products_per_category: number;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key"?: string;
          "Api-Secret"?: string;
          "Wallet-Id"?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["CategoryWebDto"][];
            "application/json": components["schemas"]["CategoryWebDto"][];
            "text/json": components["schemas"]["CategoryWebDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Categories/{id}": {
    /** Gets details of specific category by id */
    get: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["CategoryDto"];
            "application/json": components["schemas"]["CategoryDto"];
            "text/json": components["schemas"]["CategoryDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Updates a category by id */
    put: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
        path: {
          id: number;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["UpdateCategoryCommand"];
          "text/json": components["schemas"]["UpdateCategoryCommand"];
          "application/*+json": components["schemas"]["UpdateCategoryCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Deletes a category by id */
    delete: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
        path: {
          id: number;
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Categories/guid/{guid}": {
    /** Gets details of specific category by guid */
    get: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
        path: {
          guid: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["CategoryDto"];
            "application/json": components["schemas"]["CategoryDto"];
            "text/json": components["schemas"]["CategoryDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/categories/{categoryId}/languages": {
    /** Creates a new category language */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
        path: {
          categoryId: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CreateCategoryLanguageCommand"];
          "text/json": components["schemas"]["CreateCategoryLanguageCommand"];
          "application/*+json": components["schemas"]["CreateCategoryLanguageCommand"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "text/plain": components["schemas"]["CategoryLanguageDto"];
            "application/json": components["schemas"]["CategoryLanguageDto"];
            "text/json": components["schemas"]["CategoryLanguageDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/categories/{categoryId}/languages/{id}": {
    /** Updates a category language by id */
    put: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
        path: {
          categoryId: number;
          id: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdateCategoryLanguageCommand"];
          "text/json": components["schemas"]["UpdateCategoryLanguageCommand"];
          "application/*+json": components["schemas"]["UpdateCategoryLanguageCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Deletes a category language */
    delete: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
        path: {
          categoryId: number;
          id: number;
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/ClientLocations/locations_list": {
    /** Gets client addresses, authorized by JWT token */
    get: {
      parameters: {
        query: {
          page_number: number;
          page_size: number;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Store-Id": number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["ClientDeliveryAddressDtoPaginatedList"];
            "application/json": components["schemas"]["ClientDeliveryAddressDtoPaginatedList"];
            "text/json": components["schemas"]["ClientDeliveryAddressDtoPaginatedList"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/ClientLocations": {
    /** Updates client address, authorized JWT token */
    put: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Store-Id": number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdateClientLocationCommand"];
          "text/json": components["schemas"]["UpdateClientLocationCommand"];
          "application/*+json": components["schemas"]["UpdateClientLocationCommand"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "text/plain": components["schemas"]["ClientDeliveryAddressDto"];
            "application/json": components["schemas"]["ClientDeliveryAddressDto"];
            "text/json": components["schemas"]["ClientDeliveryAddressDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Adds client address, authorized JWT token */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Store-Id": number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CreateClientLocationCommand"];
          "text/json": components["schemas"]["CreateClientLocationCommand"];
          "application/*+json": components["schemas"]["CreateClientLocationCommand"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "text/plain": components["schemas"]["IdResponseModel"];
            "application/json": components["schemas"]["IdResponseModel"];
            "text/json": components["schemas"]["IdResponseModel"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Deletes client address, authorized JWT token */
    delete: {
      parameters: {
        query: {
          delivery_address_id: number;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Store-Id": number;
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/ClientLocations/invoice_addresses_list": {
    /** Gets client addresses, authorized JWT token */
    get: {
      parameters: {
        query: {
          page_number: number;
          page_size: number;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Store-Id": number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["ClientInvoiceAddressDtoPaginatedList"];
            "application/json": components["schemas"]["ClientInvoiceAddressDtoPaginatedList"];
            "text/json": components["schemas"]["ClientInvoiceAddressDtoPaginatedList"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/ClientLocations/invoice_address": {
    /** Updates client invoice address, authorized JWT token */
    put: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Store-Id": number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdateClientInvoiceLocationCommand"];
          "text/json": components["schemas"]["UpdateClientInvoiceLocationCommand"];
          "application/*+json": components["schemas"]["UpdateClientInvoiceLocationCommand"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "text/plain": components["schemas"]["ClientInvoiceAddressDto"];
            "application/json": components["schemas"]["ClientInvoiceAddressDto"];
            "text/json": components["schemas"]["ClientInvoiceAddressDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Adds client invoice address, authorized JWT token */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Store-Id": number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CreateClientInvoiceLocationCommand"];
          "text/json": components["schemas"]["CreateClientInvoiceLocationCommand"];
          "application/*+json": components["schemas"]["CreateClientInvoiceLocationCommand"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "text/plain": components["schemas"]["IdResponseModel"];
            "application/json": components["schemas"]["IdResponseModel"];
            "text/json": components["schemas"]["IdResponseModel"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Deletes client invoice address, authorized JWT token */
    delete: {
      parameters: {
        query: {
          invoice_address_id: number;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Store-Id": number;
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Clients/client": {
    /** Gets client details */
    get: {
      parameters: {
        query: {
          store_id?: number;
          email?: string;
          client_id?: number;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["ClientDto"];
            "application/json": components["schemas"]["ClientDto"];
            "text/json": components["schemas"]["ClientDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Clients/{email}": {
    /** Gets client details by email */
    get: {
      parameters: {
        query: {
          store_id?: number;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
        };
        path: {
          email: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["GetClientDetailsByMailQueryResponse"];
            "application/json": components["schemas"]["GetClientDetailsByMailQueryResponse"];
            "text/json": components["schemas"]["GetClientDetailsByMailQueryResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Clients/list": {
    /** Gets clients list */
    get: {
      parameters: {
        query: {
          page_number: number;
          page_size: number;
          store_id?: number;
          email?: string;
          first_name?: string;
          last_name?: string;
          client_id?: number;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          /** @description Will filter clients to stores linked to wallet */
          "Wallet-Id"?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["ClientListDtoPaginatedList"];
            "application/json": components["schemas"]["ClientListDtoPaginatedList"];
            "text/json": components["schemas"]["ClientListDtoPaginatedList"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Clients": {
    /** Updates a client */
    put: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdateClientCommand"];
          "text/json": components["schemas"]["UpdateClientCommand"];
          "application/*+json": components["schemas"]["UpdateClientCommand"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["ClientDto"];
            "application/json": components["schemas"]["ClientDto"];
            "text/json": components["schemas"]["ClientDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Creates a new client */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CreateClientCommand"];
          "text/json": components["schemas"]["CreateClientCommand"];
          "application/*+json": components["schemas"]["CreateClientCommand"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "text/plain": components["schemas"]["ClientDtoAuthenticationResult"];
            "application/json": components["schemas"]["ClientDtoAuthenticationResult"];
            "text/json": components["schemas"]["ClientDtoAuthenticationResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Currencies": {
    /** Gets currencies from iServer */
    get: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["IsoCurrencyDto"][];
            "application/json": components["schemas"]["IsoCurrencyDto"][];
            "text/json": components["schemas"]["IsoCurrencyDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Currencies/exchange-rates": {
    /** Gets exchange rates from iServer */
    get: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["ExchangeRateDto"][];
            "application/json": components["schemas"]["ExchangeRateDto"][];
            "text/json": components["schemas"]["ExchangeRateDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/DeliveryLocations/wallet/delivery_areas": {
    /** Gets a list of delivery areas by wallet id */
    get: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id": number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["GetDeliveryAreasByWalletIdQueryPlatformDtoListResponseModel"];
            "application/json": components["schemas"]["GetDeliveryAreasByWalletIdQueryPlatformDtoListResponseModel"];
            "text/json": components["schemas"]["GetDeliveryAreasByWalletIdQueryPlatformDtoListResponseModel"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Discounts": {
    /** Gets discounts list */
    get: {
      parameters: {
        query: {
          page_number?: number;
          page_size?: number;
          /** @description Unix timestamp in seconds */
          valid_to?: number;
          /** @description Unix timestamp in seconds */
          valid_from?: number;
          has_validity_period?: boolean;
          amount_from?: number;
          amount_to?: number;
          /** @description Discounts that are applied to any of these categories, LIST, separate elements with comma */
          applied_to?: string;
          name?: string;
          /** @example 1 = Active, 2 = Disabled, 3 = Expired */
          status?: number;
          /** @description Can be either currency or % */
          currency?: string;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["DiscountDtoPaginatedList"];
            "application/json": components["schemas"]["DiscountDtoPaginatedList"];
            "text/json": components["schemas"]["DiscountDtoPaginatedList"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Creates a new discount */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CreateDiscountCommand"];
          "text/json": components["schemas"]["CreateDiscountCommand"];
          "application/*+json": components["schemas"]["CreateDiscountCommand"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "text/plain": components["schemas"]["DiscountDto"];
            "application/json": components["schemas"]["DiscountDto"];
            "text/json": components["schemas"]["DiscountDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Discounts/{id}": {
    /** Gets discount by id */
    get: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["DiscountDto"];
            "application/json": components["schemas"]["DiscountDto"];
            "text/json": components["schemas"]["DiscountDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Updates a discount by id */
    put: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
        path: {
          id: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdateDiscountCommand"];
          "text/json": components["schemas"]["UpdateDiscountCommand"];
          "application/*+json": components["schemas"]["UpdateDiscountCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Deletes a discount by id */
    delete: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
        path: {
          id: number;
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/EmailAutomations/Trigger": {
    /** Creates a new email automation trigger */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id": number;
          Tid?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CreateEmailAutomationTriggerCommand"];
          "text/json": components["schemas"]["CreateEmailAutomationTriggerCommand"];
          "application/*+json": components["schemas"]["CreateEmailAutomationTriggerCommand"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["EmailAutomationTriggerDto"];
            "application/json": components["schemas"]["EmailAutomationTriggerDto"];
            "text/json": components["schemas"]["EmailAutomationTriggerDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/EmailAutomations/Trigger/{id}/status": {
    /** Updates email automation trigger status */
    patch: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id": number;
        };
        path: {
          id: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdateEmailAutomationTriggerStatusCommand"];
          "text/json": components["schemas"]["UpdateEmailAutomationTriggerStatusCommand"];
          "application/*+json": components["schemas"]["UpdateEmailAutomationTriggerStatusCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/EmailAutomations/Trigger/{id}": {
    /** Updates email automation trigger */
    put: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id": number;
        };
        path: {
          id: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdateEmailAutomationTriggerCommand"];
          "text/json": components["schemas"]["UpdateEmailAutomationTriggerCommand"];
          "application/*+json": components["schemas"]["UpdateEmailAutomationTriggerCommand"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["EmailAutomationTriggerDto"];
            "application/json": components["schemas"]["EmailAutomationTriggerDto"];
            "text/json": components["schemas"]["EmailAutomationTriggerDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Deletes email automation trigger */
    delete: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          Tid?: string;
          "Wallet-Id": number;
        };
        path: {
          id: number;
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/EmailAutomations/{id}": {
    /** Gets email automation trigger by id */
    get: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id": number;
        };
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["EmailAutomationTriggerDto"];
            "application/json": components["schemas"]["EmailAutomationTriggerDto"];
            "text/json": components["schemas"]["EmailAutomationTriggerDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/EmailAutomations": {
    /** Gets email automation triggers list */
    get: {
      parameters: {
        query: {
          page_number: number;
          page_size: number;
          /** @example 1 = Active, 2 = Disabled */
          status?: number;
          is_draft?: boolean;
          platform_id?: number;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id": number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["EmailAutomationTriggerDtoPaginatedList"];
            "application/json": components["schemas"]["EmailAutomationTriggerDtoPaginatedList"];
            "text/json": components["schemas"]["EmailAutomationTriggerDtoPaginatedList"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/EmailAutomations/internal": {
    /** Gets email automation triggers internal list (used from BOT) */
    get: {
      parameters: {
        query: {
          page_number: number;
          page_size: number;
          /**
           * @description ENUM
           * @example 1 = Active, 2 = Disabled
           */
          status?: number;
          platform_id?: number;
          /** @description Unix timestamp in seconds */
          created_from?: number;
          /** @description Unix timestamp in seconds */
          created_to?: number;
          /** @description Unix timestamp in seconds */
          modified_from?: number;
          /** @description Unix timestamp in seconds */
          modified_to?: number;
          /**
           * @description LIST, separate elements with comma
           * @example 1 = AbandonedCart, 2 = CompletedOrder
           */
          types?: string;
          /**
           * @description LIST, separate elements with comma
           * @example 1 = ItemsLeftBehind, 2 = VisitAgain, 3 = FreeProduct, 4 = Discount, 5 = LeaveFeedback, 6 = SameAsPrimary
           */
          primary_email_settings_types?: string;
          is_draft?: boolean;
          /** @description LIST, separate elements with comma */
          follow_up_count?: string;
          store_name?: string;
          /** @description LIST, separate elements with comma */
          store_pickup_countries?: string;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id"?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["InternalEmailAutomationTriggerDtoPaginatedList"];
            "application/json": components["schemas"]["InternalEmailAutomationTriggerDtoPaginatedList"];
            "text/json": components["schemas"]["InternalEmailAutomationTriggerDtoPaginatedList"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Emails/promotions/subscribe": {
    /** Resubscribes email to promotions */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["SubscribeEmailCommand"];
          "text/json": components["schemas"]["SubscribeEmailCommand"];
          "application/*+json": components["schemas"]["SubscribeEmailCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Emails/promotions/unsubscribe": {
    /** Unsubscribes email to promotions */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id": number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UnsubscribeEmailCommand"];
          "text/json": components["schemas"]["UnsubscribeEmailCommand"];
          "application/*+json": components["schemas"]["UnsubscribeEmailCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/heartbeat/simple": {
    /** Gets simple health check */
    get: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["GetHealthSimpleQueryResponseDto"];
            "application/json": components["schemas"]["GetHealthSimpleQueryResponseDto"];
            "text/json": components["schemas"]["GetHealthSimpleQueryResponseDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Identity/login": {
    /** Logs in client (Generates JWT token) */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["LoginCommand"];
          "text/json": components["schemas"]["LoginCommand"];
          "application/*+json": components["schemas"]["LoginCommand"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["AuthenticationResult"];
            "application/json": components["schemas"]["AuthenticationResult"];
            "text/json": components["schemas"]["AuthenticationResult"];
          };
        };
      };
    };
  };
  "/myPOS360/Identity/login_social_media": {
    /** Logs in client by social media (Generates JWT token) */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["LoginSocialMediaCommand"];
          "text/json": components["schemas"]["LoginSocialMediaCommand"];
          "application/*+json": components["schemas"]["LoginSocialMediaCommand"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["AuthenticationResult"];
            "application/json": components["schemas"]["AuthenticationResult"];
            "text/json": components["schemas"]["AuthenticationResult"];
          };
        };
      };
    };
  };
  "/myPOS360/Identity/login_mypos_session": {
    /** Logs in client with myPOS session (Generates JWT token) */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["LoginMyPosSessionCommand"];
          "text/json": components["schemas"]["LoginMyPosSessionCommand"];
          "application/*+json": components["schemas"]["LoginMyPosSessionCommand"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["AuthenticationResult"];
            "application/json": components["schemas"]["AuthenticationResult"];
            "text/json": components["schemas"]["AuthenticationResult"];
          };
        };
      };
    };
  };
  "/myPOS360/Identity/refresh": {
    /** Refreshes JWT token */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["RefreshCommand"];
          "text/json": components["schemas"]["RefreshCommand"];
          "application/*+json": components["schemas"]["RefreshCommand"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["AuthenticationResult"];
            "application/json": components["schemas"]["AuthenticationResult"];
            "text/json": components["schemas"]["AuthenticationResult"];
          };
        };
      };
    };
  };
  "/myPOS360/Identity/logout": {
    /** Logs out client */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["LogoutCommand"];
          "text/json": components["schemas"]["LogoutCommand"];
          "application/*+json": components["schemas"]["LogoutCommand"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["AuthenticationResult"];
            "application/json": components["schemas"]["AuthenticationResult"];
            "text/json": components["schemas"]["AuthenticationResult"];
          };
        };
      };
    };
  };
  "/myPOS360/Identity/forgotten_password": {
    /** Sends a forgotten password request */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["GenerateCodeCommand"];
          "text/json": components["schemas"]["GenerateCodeCommand"];
          "application/*+json": components["schemas"]["GenerateCodeCommand"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["AuthenticationResult"];
            "application/json": components["schemas"]["AuthenticationResult"];
            "text/json": components["schemas"]["AuthenticationResult"];
          };
        };
      };
    };
  };
  "/myPOS360/Identity/check_reset_password_result": {
    /** Checks if forgotten password link is clicked */
    get: {
      parameters: {
        query: {
          code: string;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["EmailResponseModelDto"];
            "application/json": components["schemas"]["EmailResponseModelDto"];
            "text/json": components["schemas"]["EmailResponseModelDto"];
          };
        };
      };
    };
  };
  "/api/items/{itemId}/languages": {
    /** Creates a new item language */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key"?: string;
          "Api-Secret"?: string;
          "Login-Id"?: string;
          "Wallet-Id"?: string;
          Tid?: string;
        };
        path: {
          itemId: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CreateItemLanguageCommand"];
          "text/json": components["schemas"]["CreateItemLanguageCommand"];
          "application/*+json": components["schemas"]["CreateItemLanguageCommand"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "text/plain": components["schemas"]["ItemLanguageDto"];
            "application/json": components["schemas"]["ItemLanguageDto"];
            "text/json": components["schemas"]["ItemLanguageDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/items/{itemId}/languages/{id}": {
    /** Updates item language by id */
    put: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
        path: {
          itemId: number;
          id: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdateItemLanguageCommand"];
          "text/json": components["schemas"]["UpdateItemLanguageCommand"];
          "application/*+json": components["schemas"]["UpdateItemLanguageCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Deletes item language by id */
    delete: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
        path: {
          itemId: number;
          id: number;
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/items/{itemId}/overviews": {
    /** Gets item overviews */
    get: {
      parameters: {
        query: {
          page_number: number;
          page_size: number;
          is_default?: boolean;
          language?: string;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
        };
        path: {
          itemId: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["ItemOverviewDtoPaginatedList"];
            "application/json": components["schemas"]["ItemOverviewDtoPaginatedList"];
            "text/json": components["schemas"]["ItemOverviewDtoPaginatedList"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Creates new item overview */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
        };
        path: {
          itemId: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AddItemOverviewCommand"];
          "text/json": components["schemas"]["AddItemOverviewCommand"];
          "application/*+json": components["schemas"]["AddItemOverviewCommand"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "text/plain": components["schemas"]["IdResponseModel"];
            "application/json": components["schemas"]["IdResponseModel"];
            "text/json": components["schemas"]["IdResponseModel"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/items/{itemId}/overviews/{id}": {
    /** Updates item overview by id */
    put: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
        };
        path: {
          itemId: number;
          id: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdateItemOverviewCommand"];
          "text/json": components["schemas"]["UpdateItemOverviewCommand"];
          "application/*+json": components["schemas"]["UpdateItemOverviewCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Deletes item overview by id */
    delete: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
        path: {
          itemId: number;
          id: number;
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/items/{itemId}/overviews/bulk": {
    /** Bulk updates single item overviews */
    put: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
        };
        path: {
          itemId: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["BulkUpdateItemOverviewsCommand"];
          "text/json": components["schemas"]["BulkUpdateItemOverviewsCommand"];
          "application/*+json": components["schemas"]["BulkUpdateItemOverviewsCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/items/{itemId}/prices": {
    /** Creates a new item price */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
        path: {
          itemId: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CreateItemPriceCommand"];
          "text/json": components["schemas"]["CreateItemPriceCommand"];
          "application/*+json": components["schemas"]["CreateItemPriceCommand"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "text/plain": components["schemas"]["ItemPriceDto"];
            "application/json": components["schemas"]["ItemPriceDto"];
            "text/json": components["schemas"]["ItemPriceDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/items/{itemId}/prices/{id}": {
    /** Updates item price by id */
    put: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
        path: {
          itemId: number;
          id: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdateItemPriceCommand"];
          "text/json": components["schemas"]["UpdateItemPriceCommand"];
          "application/*+json": components["schemas"]["UpdateItemPriceCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Deletes item price by id */
    delete: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
        path: {
          itemId: number;
          id: number;
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Items": {
    /** Gets items list */
    get: {
      parameters: {
        query: {
          page_number: number;
          page_size: number;
          outlet_id?: number;
          category_guid?: string;
          category_id?: number;
          discount_id?: number;
          name?: string;
          category_name?: string;
          /** @example 0 = Item, 1 = Liter, 2 = Kg, 3 = Lbs, 4 = Meter, 5 = Inch */
          unit_type?: number;
          /** @description Unix timestamp in seconds */
          date_from?: number;
          /** @description Unix timestamp in seconds */
          date_to?: number;
          platform_id?: number;
          /** @example 1 = Physical, 2 = OnlineShop, 3 = Viber, 4 = Unassigned */
          platform_type?: number;
          language?: string;
          is_in_stock?: boolean;
          /** @example 1 = Draft, 2 = Pending, 3 = Active, 4 = Deleted, 5 = Rejected, 6 = ForRiskCheck, 7 = RequestInfrormation, 8 = ForAdittionalRiskCheck, 9 = ForCorrection */
          risk_status?: number;
          is_checked?: boolean;
          /** @description Unix timestamp in seconds */
          last_edit_from?: number;
          /** @description Unix timestamp in seconds */
          last_edit_to?: number;
          /** @example 1 = Physical, 2 = Service, 3 = Bundle */
          type?: number;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key"?: string;
          "Api-Secret"?: string;
          "Login-Id"?: string;
          "Wallet-Id"?: string;
          Tid?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["ItemDtoPaginatedList"];
            "application/json": components["schemas"]["ItemDtoPaginatedList"];
            "text/json": components["schemas"]["ItemDtoPaginatedList"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Creates a new item */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key"?: string;
          "Api-Secret"?: string;
          "Login-Id"?: string;
          "Wallet-Id"?: string;
          Tid?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CreateItemCommand"];
          "text/json": components["schemas"]["CreateItemCommand"];
          "application/*+json": components["schemas"]["CreateItemCommand"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "text/plain": components["schemas"]["ItemDto"];
            "application/json": components["schemas"]["ItemDto"];
            "text/json": components["schemas"]["ItemDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Items/export": {
    /** Gets items list for export */
    get: {
      parameters: {
        query: {
          page_number?: number;
          page_size?: number;
          category_id?: number;
          discount_id?: number;
          keywords?: string;
          outlet_id?: number;
          /** @example 1 = Physical, 2 = Service, 3 = Bundle */
          type?: number;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key"?: string;
          "Api-Secret"?: string;
          "Login-Id"?: string;
          "Wallet-Id": string;
          Tid?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["ItemDto"][];
            "application/json": components["schemas"]["ItemDto"][];
            "text/json": components["schemas"]["ItemDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Items/{id}/linked-upsells-and-promocodes": {
    /** Gets linked upsells and promocodes to item */
    get: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key"?: string;
          "Api-Secret"?: string;
          "Login-Id"?: string;
          "Wallet-Id"?: string;
          Tid?: string;
        };
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["GetItemLinkedObjectsQueryResponse"];
            "application/json": components["schemas"]["GetItemLinkedObjectsQueryResponse"];
            "text/json": components["schemas"]["GetItemLinkedObjectsQueryResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Items/{id}/linked/objects": {
    /** Gets linked upsells, promocodes and bundles to item */
    get: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key"?: string;
          "Api-Secret"?: string;
          "Login-Id"?: string;
          "Wallet-Id"?: string;
          Tid?: string;
        };
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["GetItemLinkedObjectsQueryResponse"];
            "application/json": components["schemas"]["GetItemLinkedObjectsQueryResponse"];
            "text/json": components["schemas"]["GetItemLinkedObjectsQueryResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Items/by-parrent-category": {
    /** Gets items filtered by parent category */
    get: {
      parameters: {
        query: {
          order_by: components["schemas"]["OrderBy"];
          page_number: number;
          page_size: number;
          category_id?: number;
          discount_id?: number;
          currency?: string;
          platform_id?: number;
          /** @example 1 = Physical, 2 = OnlineShop, 3 = Viber, 4 = Unassigned */
          platform_type?: number;
          outlet_id?: number;
          /** @example 1 = Physical, 2 = Service, 3 = Bundle */
          type?: number;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key"?: string;
          "Api-Secret"?: string;
          "Login-Id"?: string;
          "Wallet-Id"?: string;
          Tid?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["ItemByParentCategoryDtoPaginatedList"];
            "application/json": components["schemas"]["ItemByParentCategoryDtoPaginatedList"];
            "text/json": components["schemas"]["ItemByParentCategoryDtoPaginatedList"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Items/account": {
    /** Gets items for account */
    get: {
      parameters: {
        query: {
          page_number: number;
          page_size: number;
          category_id?: number;
          discount_id?: number;
          platform_id?: number;
          /** @example 1 = Physical, 2 = OnlineShop, 3 = Viber, 4 = Unassigned */
          platform_type?: number;
          /**
           * @description LIST, separate elements with comma
           * @example 1 = Physical, 2 = Service, 3 = Bundle
           */
          types?: string;
          keywords?: string;
          keywords_language?: string;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key"?: string;
          "Api-Secret"?: string;
          "Login-Id"?: string;
          "Wallet-Id"?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["ItemDtoPaginatedList"];
            "application/json": components["schemas"]["ItemDtoPaginatedList"];
            "text/json": components["schemas"]["ItemDtoPaginatedList"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Items/count-by-parrent-category": {
    /** Gets items count by parent category */
    get: {
      parameters: {
        query: {
          page_number: number;
          page_size: number;
          category_id?: number;
          discount_id?: number;
          currency?: string;
          platform_id?: number;
          /** @example 1 = Physical, 2 = OnlineShop, 3 = Viber, 4 = Unassigned */
          platform_type?: number;
          language?: string;
          outlet_id?: number;
          keywords?: string;
          is_in_stock?: boolean;
          /** @example 1 = Draft, 2 = Pending, 3 = Active, 4 = Deleted, 5 = Rejected, 6 = ForRiskCheck, 7 = RequestInfrormation, 8 = ForAdittionalRiskCheck, 9 = ForCorrection */
          risk_status?: number;
          item_ids?: string;
          /** @example 1 = Physical, 2 = Service, 3 = Bundle */
          type?: number;
          keywords_language?: string;
          /** @description No false handling, when TRUE returns only uncategorized products */
          uncategorized?: boolean;
          is_visible?: boolean;
          /**
           * @description LIST, separate elements with comma
           * @example 1 = Physical, 2 = Service, 3 = Bundle
           */
          item_types?: string;
          /**
           * @description LIST, separate elements with comma
           * @example 0 = Products, 1 = Services, 2 = Mixed
           */
          bundle_item_types?: string;
          /** @description When true it will return both normal items and bundles which have atleast one bundle item in them */
          exclude_empty_bundles?: boolean;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key"?: string;
          "Api-Secret"?: string;
          "Wallet-Id"?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["GetItemsCountByParentCategoryQueryResponseDto"];
            "application/json": components["schemas"]["GetItemsCountByParentCategoryQueryResponseDto"];
            "text/json": components["schemas"]["GetItemsCountByParentCategoryQueryResponseDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Items/by-name": {
    /** Gets items list filtered by name */
    get: {
      parameters: {
        query: {
          page_number: number;
          page_size: number;
          platform_id?: number;
          /** @example 1 = Physical, 2 = OnlineShop, 3 = Viber, 4 = Unassigned */
          platform_type?: number;
          language: string;
          keywords?: string;
          /** @example 1 = Draft, 2 = Pending, 3 = Active, 4 = Deleted, 5 = Rejected, 6 = ForRiskCheck, 7 = RequestInfrormation, 8 = ForAdittionalRiskCheck, 9 = ForCorrection */
          risk_status?: number;
          /** @example 1 = Physical, 2 = Service, 3 = Bundle */
          type?: number;
          category_id?: number;
          discount_id?: number;
          is_in_stock?: boolean;
          /** @description When true returns only uncategorized, when false only categorized */
          uncategorized?: boolean;
          /** @description Filters from which categories to not take products */
          excluded_categories?: string;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["GetItemsByNameQueryDtoPaginatedList"];
            "application/json": components["schemas"]["GetItemsByNameQueryDtoPaginatedList"];
            "text/json": components["schemas"]["GetItemsByNameQueryDtoPaginatedList"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Items/product-types-linked-to-platform": {
    /** Gets product types linked to platform */
    get: {
      parameters: {
        query: {
          platform_id: number;
          /** @example 1 = Draft, 2 = Pending, 3 = Active, 4 = Deleted, 5 = Rejected, 6 = ForRiskCheck, 7 = RequestInfrormation, 8 = ForAdittionalRiskCheck, 9 = ForCorrection */
          risk_status?: number;
          is_in_stock?: boolean;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          Wallet?: number;
          "Login-Id"?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["CheckProductTypesLinkedToPlatformQueryResponseDto"];
            "application/json": components["schemas"]["CheckProductTypesLinkedToPlatformQueryResponseDto"];
            "text/json": components["schemas"]["CheckProductTypesLinkedToPlatformQueryResponseDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Items/outlet-counts": {
    /** Gets items count for each outlet id (separate outlet ids with ',') */
    get: {
      parameters: {
        query: {
          outlet_ids: string;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["OutletCountsDto"][];
            "application/json": components["schemas"]["OutletCountsDto"][];
            "text/json": components["schemas"]["OutletCountsDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Items/platform-counts": {
    /** Gets items count for each platform id (separate platform ids with ',') */
    get: {
      parameters: {
        query: {
          platform_ids: string;
          without_weight?: boolean;
          with_variations?: boolean;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["OutletCountsDto"][];
            "application/json": components["schemas"]["OutletCountsDto"][];
            "text/json": components["schemas"]["OutletCountsDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Gets platform count with POST query (used from BOT) */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["GetItemCountByPlatformIdsPostQuery"];
          "text/json": components["schemas"]["GetItemCountByPlatformIdsPostQuery"];
          "application/*+json": components["schemas"]["GetItemCountByPlatformIdsPostQuery"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["OutletCountsDto"][];
            "application/json": components["schemas"]["OutletCountsDto"][];
            "text/json": components["schemas"]["OutletCountsDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Items/{id}": {
    /** Gets item by id */
    get: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["ItemDto"];
            "application/json": components["schemas"]["ItemDto"];
            "text/json": components["schemas"]["ItemDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Updates item by id */
    put: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
        path: {
          id: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdateItemCommand"];
          "text/json": components["schemas"]["UpdateItemCommand"];
          "application/*+json": components["schemas"]["UpdateItemCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Deletes item by id */
    delete: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
        path: {
          id: number;
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Items/{id}/v2": {
    /** Gets item by id */
    get: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id"?: number;
        };
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["GetItemDetailsV2ItemDto"];
            "application/json": components["schemas"]["GetItemDetailsV2ItemDto"];
            "text/json": components["schemas"]["GetItemDetailsV2ItemDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Items/{id}/exists": {
    get: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id": number;
        };
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["BoolResponseModel"];
            "application/json": components["schemas"]["BoolResponseModel"];
            "text/json": components["schemas"]["BoolResponseModel"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Items/{id}/recalculate": {
    /** Gets recalculated item by id */
    get: {
      parameters: {
        query: {
          buyer_country_iso2_code: string;
          seller_country_iso2_code: string;
          client_has_valid_vat_number: boolean;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id": number;
          "Login-Id"?: number;
        };
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["ItemDto"];
            "application/json": components["schemas"]["ItemDto"];
            "text/json": components["schemas"]["ItemDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Items/guid/{guid}": {
    /** Gets item by guid */
    get: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
        path: {
          guid: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["ItemDto"];
            "application/json": components["schemas"]["ItemDto"];
            "text/json": components["schemas"]["ItemDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Items/bulk/weights": {
    /** Bulk updates items weight */
    put: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["BulkEditItemWeightCommand"];
          "text/json": components["schemas"]["BulkEditItemWeightCommand"];
          "application/*+json": components["schemas"]["BulkEditItemWeightCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Items/bulk/stocks": {
    /** Bulk updates items stock */
    put: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["BulkEditItemStockCommand"];
          "text/json": components["schemas"]["BulkEditItemStockCommand"];
          "application/*+json": components["schemas"]["BulkEditItemStockCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Items/items-list": {
    /** Gets items list (used from BOT) */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["GetItemsListPostQuery"];
          "text/json": components["schemas"]["GetItemsListPostQuery"];
          "application/*+json": components["schemas"]["GetItemsListPostQuery"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["GetItemsListPostQueryItemDtoPaginatedList"];
            "application/json": components["schemas"]["GetItemsListPostQueryItemDtoPaginatedList"];
            "text/json": components["schemas"]["GetItemsListPostQueryItemDtoPaginatedList"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Items/bulk/prices": {
    /** Bulk creates items prices */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["BulkCreateItemsPriceCommand"];
          "text/json": components["schemas"]["BulkCreateItemsPriceCommand"];
          "application/*+json": components["schemas"]["BulkCreateItemsPriceCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Bulk deletes items prices */
    delete: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["BulkDeleteItemsPriceCommand"];
          "text/json": components["schemas"]["BulkDeleteItemsPriceCommand"];
          "application/*+json": components["schemas"]["BulkDeleteItemsPriceCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Items/bulk": {
    /** Bulk creation of items */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["BulkCreateItemsCommand"];
          "text/json": components["schemas"]["BulkCreateItemsCommand"];
          "application/*+json": components["schemas"]["BulkCreateItemsCommand"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["BulkCreateItemsResponseDto"];
            "application/json": components["schemas"]["BulkCreateItemsResponseDto"];
            "text/json": components["schemas"]["BulkCreateItemsResponseDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Bulk delete of items */
    delete: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["BulkDeleteItemsCommand"];
          "text/json": components["schemas"]["BulkDeleteItemsCommand"];
          "application/*+json": components["schemas"]["BulkDeleteItemsCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Items/bulk-is-checked": {
    /** Bulk get if items are checked */
    put: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["BulkEditIsCheckedCommand"];
          "text/json": components["schemas"]["BulkEditIsCheckedCommand"];
          "application/*+json": components["schemas"]["BulkEditIsCheckedCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Items/list/by-ids": {
    /** Gets items list by ids */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["GetItemsByIdsPostQuery"];
          "text/json": components["schemas"]["GetItemsByIdsPostQuery"];
          "application/*+json": components["schemas"]["GetItemsByIdsPostQuery"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["BulkCreateItemsResponseDto"];
            "application/json": components["schemas"]["BulkCreateItemsResponseDto"];
            "text/json": components["schemas"]["BulkCreateItemsResponseDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/MessageOuts/{message_id}": {
    /** Gets message out by id */
    get: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id"?: number;
        };
        path: {
          message_id: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["MessageOutDto"];
            "application/json": components["schemas"]["MessageOutDto"];
            "text/json": components["schemas"]["MessageOutDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/MessageOuts": {
    /** Gets message outs list */
    get: {
      parameters: {
        query: {
          page_number: number;
          page_size: number;
          /** @description Unix timestamp in seconds */
          dt_from?: number;
          /** @description Unix timestamp in seconds */
          dt_to?: number;
          /** @example 0 = Pending, 1 = Sent, 2 = Charged, 5 = SentToGate, 7 = FailedAtCharge, 8 = FailedAtGate, 9 = Failed */
          status?: number;
          recipient_email?: string;
          language?: string;
          /**
           * @description LIST, separate elements with comma
           * @example 77 = Mail, 83 = SMS
           */
          medium?: string;
          tpl_name?: string;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id"?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["MessageOutDtoPaginatedList"];
            "application/json": components["schemas"]["MessageOutDtoPaginatedList"];
            "text/json": components["schemas"]["MessageOutDtoPaginatedList"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Orders/cancellation/reason/types": {
    /** Gets cancellation reason types list */
    get: {
      parameters: {
        query: {
          /** @example 1 = Generic, 2 = MyPos */
          store_type?: number;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["GetCancellationReasonTypesResponseDtoListResponseModel"];
            "application/json": components["schemas"]["GetCancellationReasonTypesResponseDtoListResponseModel"];
            "text/json": components["schemas"]["GetCancellationReasonTypesResponseDtoListResponseModel"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Orders/orders_list": {
    /** Gets orders list */
    get: {
      parameters: {
        query: {
          /** @description Unix timestamp in seconds */
          date_from?: number;
          /** @description Unix timestamp in seconds */
          date_to?: number;
          page_number: number;
          page_size: number;
          /**
           * @description LIST, separate elements with comma
           * @example 0 = None, 1 = CashSale, 2 = CardSale, 3 = SplitSale, 4 = Refund
           */
          operation_type?: string;
          amount_from?: number;
          amount_to?: number;
          store_id?: number;
          order_id?: number;
          customer_name?: string;
          customer_phone?: string;
          customer_email?: string;
          /**
           * @description LIST, separate elements with comma
           * @example 1 = Pending, 2 = Confirmed, 3 = Completed, 4 = Cancelled, 5 = Shipped, 6 = ReadyForPickup
           */
          order_status?: string;
          with_refunds?: boolean;
          /** @example 0 = Cash, 1 = Card, 2 = Mixed */
          payment_method_type?: number;
          delivery_tracking_link?: string;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id": number;
          Tid?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["SaleDtoPaginatedList"];
            "application/json": components["schemas"]["SaleDtoPaginatedList"];
            "text/json": components["schemas"]["SaleDtoPaginatedList"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Orders": {
    /** Updates order */
    put: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdateOrderCommand"];
          "text/json": components["schemas"]["UpdateOrderCommand"];
          "application/*+json": components["schemas"]["UpdateOrderCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: {
            "text/plain": components["schemas"]["IdResponseModel"];
            "application/json": components["schemas"]["IdResponseModel"];
            "text/json": components["schemas"]["IdResponseModel"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Creates a new order */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CreateOrderCommand"];
          "text/json": components["schemas"]["CreateOrderCommand"];
          "application/*+json": components["schemas"]["CreateOrderCommand"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "text/plain": components["schemas"]["IdResponseModel"];
            "application/json": components["schemas"]["IdResponseModel"];
            "text/json": components["schemas"]["IdResponseModel"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Orders/validate_items_stock": {
    /** Validates items stock */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ValidateItemsStockCommand"];
          "text/json": components["schemas"]["ValidateItemsStockCommand"];
          "application/*+json": components["schemas"]["ValidateItemsStockCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Orders/{id}/cancellation/reason": {
    /** Adds order cancenllation reason */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
        path: {
          id: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AddOrderCancellationReasonCommand"];
          "text/json": components["schemas"]["AddOrderCancellationReasonCommand"];
          "application/*+json": components["schemas"]["AddOrderCancellationReasonCommand"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "text/plain": components["schemas"]["IdResponseModel"];
            "application/json": components["schemas"]["IdResponseModel"];
            "text/json": components["schemas"]["IdResponseModel"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Orders/delivery/tracking_link": {
    /** Updates order tracking link */
    put: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdateOrderDeliveryTrackingLinkCommand"];
          "text/json": components["schemas"]["UpdateOrderDeliveryTrackingLinkCommand"];
          "application/*+json": components["schemas"]["UpdateOrderDeliveryTrackingLinkCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Orders/{order_id}": {
    /** Gets order by id */
    get: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
        };
        path: {
          order_id: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["GetOrderDetailsQueryOrderDto"];
            "application/json": components["schemas"]["GetOrderDetailsQueryOrderDto"];
            "text/json": components["schemas"]["GetOrderDetailsQueryOrderDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/OSS/countries_settings": {
    /** Gets countries settings */
    get: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id": number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["OssCountrySettingDtoListResponseModel"];
            "application/json": components["schemas"]["OssCountrySettingDtoListResponseModel"];
            "text/json": components["schemas"]["OssCountrySettingDtoListResponseModel"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/PaymentMethods/{sale_id}": {
    /** Gets list of payment methods by sale id */
    get: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
        path: {
          sale_id: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["PaymentMethodDtoListResponseModel"];
            "application/json": components["schemas"]["PaymentMethodDtoListResponseModel"];
            "text/json": components["schemas"]["PaymentMethodDtoListResponseModel"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/PaymentMethods": {
    /** Adds payment method to sale */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AddPaymentMethodCommand"];
          "text/json": components["schemas"]["AddPaymentMethodCommand"];
          "application/*+json": components["schemas"]["AddPaymentMethodCommand"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "text/plain": components["schemas"]["IdResponseModel"];
            "application/json": components["schemas"]["IdResponseModel"];
            "text/json": components["schemas"]["IdResponseModel"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Removes payment method from sale */
    delete: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["RemovePaymentMethodCommand"];
          "text/json": components["schemas"]["RemovePaymentMethodCommand"];
          "application/*+json": components["schemas"]["RemovePaymentMethodCommand"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Pricings/{id}/linked-upsells-and-promocodes": {
    /** Gets promocodes and upsells linked to pricing by id */
    get: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["GetLinkedUpsellAndPromocodesToPricingQueryResponse"];
            "application/json": components["schemas"]["GetLinkedUpsellAndPromocodesToPricingQueryResponse"];
            "text/json": components["schemas"]["GetLinkedUpsellAndPromocodesToPricingQueryResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Promocodes/details": {
    /** Gets promocode details */
    get: {
      parameters: {
        query: {
          promocode_id?: number;
          store_id?: number;
          code?: string;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id"?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["PromocodeDto"];
            "application/json": components["schemas"]["PromocodeDto"];
            "text/json": components["schemas"]["PromocodeDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Promocodes/by_subcode/{subcode}": {
    /** Gets promocode details by subcode (subcodes are generated from email automations) */
    get: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id": number;
        };
        path: {
          subcode: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["PromocodeDto"];
            "application/json": components["schemas"]["PromocodeDto"];
            "text/json": components["schemas"]["PromocodeDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Promocodes": {
    /** Gets promocodes list */
    get: {
      parameters: {
        query: {
          page_number: number;
          page_size: number;
          title?: string;
          code?: string;
          /** @description Unix timestamp in seconds */
          valid_from?: number;
          /** @description Unix timestamp in seconds */
          valid_to?: number;
          /** @example 1 = Active, 2 = Disabled */
          status?: number;
          platform_id?: number;
          times_used_from?: number;
          times_used_to?: number;
          /** @example 1 = DtCreated, 2 = MostUsed */
          order_by?: number;
          /** @description Unix timestamp in seconds */
          created_from?: number;
          /** @description Unix timestamp in seconds */
          created_to?: number;
          /** @example 1 = Generic, 2 = EmailAutomation */
          type?: number;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id"?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["PromocodeDtoPaginatedList"];
            "application/json": components["schemas"]["PromocodeDtoPaginatedList"];
            "text/json": components["schemas"]["PromocodeDtoPaginatedList"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Updates promocode */
    put: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id": number;
          Tid?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdatePromocodeCommand"];
          "text/json": components["schemas"]["UpdatePromocodeCommand"];
          "application/*+json": components["schemas"]["UpdatePromocodeCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Creates a new promocode */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id": number;
          Tid?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AddPromocodeCommand"];
          "text/json": components["schemas"]["AddPromocodeCommand"];
          "application/*+json": components["schemas"]["AddPromocodeCommand"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "text/plain": components["schemas"]["IdResponseModel"];
            "application/json": components["schemas"]["IdResponseModel"];
            "text/json": components["schemas"]["IdResponseModel"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Promocodes/conditions/validate": {
    /** Validates promocode conditions */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id": number;
          Tid?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ValidatePromocodeConditionsCommand"];
          "text/json": components["schemas"]["ValidatePromocodeConditionsCommand"];
          "application/*+json": components["schemas"]["ValidatePromocodeConditionsCommand"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["ValidatePromocodeConditionsCommandResponseDto"];
            "application/json": components["schemas"]["ValidatePromocodeConditionsCommandResponseDto"];
            "text/json": components["schemas"]["ValidatePromocodeConditionsCommandResponseDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Promocodes/check_existance": {
    /** Checks promocode existence */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id": number;
          Tid?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CheckPromocodeExistenceCommand"];
          "text/json": components["schemas"]["CheckPromocodeExistenceCommand"];
          "application/*+json": components["schemas"]["CheckPromocodeExistenceCommand"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["CheckPromocodeExistenceCommandResponseDto"];
            "application/json": components["schemas"]["CheckPromocodeExistenceCommandResponseDto"];
            "text/json": components["schemas"]["CheckPromocodeExistenceCommandResponseDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Promocodes/status": {
    /** Updates promocode status */
    put: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id": number;
          Tid?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdatePromocodeStatusCommand"];
          "text/json": components["schemas"]["UpdatePromocodeStatusCommand"];
          "application/*+json": components["schemas"]["UpdatePromocodeStatusCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Promocodes/{id}": {
    /** Deletes promocode by id */
    delete: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id": number;
        };
        path: {
          id: number;
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Referrals/{client_id}": {
    /** Gets referral by client id */
    get: {
      parameters: {
        query: {
          store_id?: number;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
        };
        path: {
          client_id: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["GetReferralDetailsQueryResponseDto"];
            "application/json": components["schemas"]["GetReferralDetailsQueryResponseDto"];
            "text/json": components["schemas"]["GetReferralDetailsQueryResponseDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Referrals/conditions/validate": {
    /** Validates referral conditions */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id": number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ValidateReferralConditionsCommand"];
          "text/json": components["schemas"]["ValidateReferralConditionsCommand"];
          "application/*+json": components["schemas"]["ValidateReferralConditionsCommand"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["ReferralDiscountDto"];
            "application/json": components["schemas"]["ReferralDiscountDto"];
            "text/json": components["schemas"]["ReferralDiscountDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/SaleArticles/variations": {
    /** Gets variation ids for sale article */
    get: {
      parameters: {
        query: {
          item_id: number;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": number[];
            "application/json": number[];
            "text/json": number[];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/SaleArticles/{sale_article_id}/details": {
    /** Gets sale article details ids */
    get: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
        };
        path: {
          sale_article_id: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["SaleArticleDetailDto"][];
            "application/json": components["schemas"]["SaleArticleDetailDto"][];
            "text/json": components["schemas"]["SaleArticleDetailDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Adds sale article detail */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
        };
        path: {
          sale_article_id: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AddSaleArticleDetailCommand"];
          "text/json": components["schemas"]["AddSaleArticleDetailCommand"];
          "application/*+json": components["schemas"]["AddSaleArticleDetailCommand"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["SaleArticleDetailDto"];
            "application/json": components["schemas"]["SaleArticleDetailDto"];
            "text/json": components["schemas"]["SaleArticleDetailDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/SaleArticles/from_carts": {
    /** Gets sale articles linked to cart */
    get: {
      parameters: {
        query: {
          page_number: number;
          page_size: number;
          /** @description LIST, separate elements with comma */
          store_ids?: string;
          store_name?: string;
          /** @description Unix timestamp in seconds */
          updated_from?: number;
          /** @description Unix timestamp in seconds */
          updated_to?: number;
          /** @description Unix timestamp in seconds */
          created_from?: number;
          /** @description Unix timestamp in seconds */
          created_to?: number;
          /** @example 1 = Abandoned, 2 = AwaitingPayment, 3 = Finished */
          cart_type?: number;
          /** @example 1 = Generic, 2 = Terminal, 3 = Warranty */
          product_type?: number;
          name?: string;
          quantity?: number;
          price_from?: number;
          price_to?: number;
          currency?: string;
          email?: string;
          billing_country?: string;
          client_id?: number;
          client_name?: string;
          merchant_name?: string;
          store_url?: string;
          cart_url?: string;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id"?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["GetSaleArticleFromCartDtoPaginatedList"];
            "application/json": components["schemas"]["GetSaleArticleFromCartDtoPaginatedList"];
            "text/json": components["schemas"]["GetSaleArticleFromCartDtoPaginatedList"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/SaleArticles/sold": {
    /** Gets list of sold sale articles */
    get: {
      parameters: {
        query: {
          page_number: number;
          page_size: number;
          /** @description Unix timestamp in seconds */
          sale_date_from?: number;
          /** @description Unix timestamp in seconds */
          sale_date_to?: number;
          product_name?: string;
          category_id?: number;
          sale_id?: number;
          order_id?: number;
          /** @example 0 = None, 1 = MyPos, 2 = MyPosGlass, 5 = SmartTerminals, 6 = OnlineShop */
          sale_source?: string;
          store_name?: string;
          tid?: string;
          total_price_from?: number;
          total_price_to?: number;
          currency?: string;
          /** @example 0 = None, 1 = CashSale, 2 = CardSale, 3 = SplitSale, 4 = Refund */
          operation_type?: number;
          sale_number?: string;
          /** @example 0 = None, 82 = Refund, 83 = Sale, 86 = Void */
          sale_transaction_type?: number;
          is_ideal_payment?: boolean;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id"?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["GetSoldSaleArticlesListQueryResponseDtoPaginatedList"];
            "application/json": components["schemas"]["GetSoldSaleArticlesListQueryResponseDtoPaginatedList"];
            "text/json": components["schemas"]["GetSoldSaleArticlesListQueryResponseDtoPaginatedList"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/SaleArticles": {
    /** Gets a list of sale articles */
    get: {
      parameters: {
        query: {
          page_number: number;
          page_size: number;
          order_id?: number;
          sale_id?: number;
          /** @description Unix timestamp in seconds */
          order_created_from?: number;
          /** @description Unix timestamp in seconds */
          order_created_to?: number;
          /** @description Unix timestamp in seconds */
          order_modified_from?: number;
          /** @description Unix timestamp in seconds */
          order_modified_to?: number;
          sale_number?: string;
          cart_id?: number;
          store_ids?: string;
          store_name?: string;
          /**
           * @description LIST, separate elements with comma
           * @example 1 = Pending, 2 = Confirmed, 3 = Completed, 4 = Cancelled, 5 = Shipped, 6 = ReadyForPickup
           */
          order_statuses?: string;
          item_id?: number;
          name?: string;
          /** @example 1 = Generic, 2 = Terminal, 3 = Warranty */
          product_type?: number;
          is_promocode_applied?: boolean;
          /** @example 1 = Free, 2 = Discounted */
          promocode_discount_type?: number;
          is_upsell?: boolean;
          sku?: string;
          note?: string;
          client_id?: number;
          client_name?: string;
          is_from_sale?: boolean;
          /** @example 0 = None, 1 = MyPos, 2 = MyPosGlass, 5 = SmartTerminals, 6 = OnlineShop */
          source?: number;
          store_url?: string;
          is_paid?: boolean;
          is_stl?: boolean;
          /** @example 1 = Generic, 2 = MyPos */
          store_type?: number;
          promocode_id?: number;
          promocode_title?: string;
          promocode_campaign?: string;
          is_referral_bonus_used?: boolean;
          promocode_code?: string;
          is_promocode_used?: boolean;
          /** @example 0 = None, 1 = CashSale, 2 = CardSale, 3 = SplitSale, 4 = Refund */
          operation_type?: number;
          is_ideal_payment?: boolean;
          masked_pan?: string;
          delivery_tracking_link?: string;
          /** @example 1 = System, 2 = Buyer, 3 = Store, 4 = Delivery */
          group_type?: number;
          /** @example 1 = Auto, 2 = Manually */
          cancellation_types?: number;
          /**
           * @description LIST, separate elements with comma
           * @example 1 = MyPosSystemCancelled, 2 = NonMyPosSystemCancelled, 3 = MyPosBuyerCancelled, 4 = NonMyPosBuyerCancelled, 5 = MyPosBuyerRequestedByPhoneEmail, 6 = MyPosBuyerReturnedIn60Days, 7 = MyPosBuyerReturnedAfter60Days, 8 = MyPosBuyerNotABusiness, 9 = MyPosBuyerVerificationDeclined, 10 = MyPosBuyerRequestedVerificationTooSlow, 11 = MyPosStoreItemsOutOfStock, 12 = MyPosStoreDuplicateOnlineOrder, 13 = MyPosStoreDuplicateWithOfflineOrder, 14 = MyPosDeliveryUnsuccessfulOrDeclined, 15 = MyPosDeliveryTakinTooLongOrOther, 16 = NonMyPosBuyerRequestedByPhoneEmail, 17 = NonMyPosBuyerReturnedItems, 18 = NonMyPosStoreItemsOutOfStock, 19 = NonMyPosStoreDuplicateOnlineOrder, 20 = NonMyPosDeliveryUnsuccessfulOrDeclined, 21 = NonMyPosDeliveryTakinTooLongOrOther
           */
          cancellation_reason_types?: string;
          is_from_email_automation?: boolean;
          /** @description Unix timestamp in seconds */
          order_cancelled_from?: number;
          /** @description Unix timestamp in seconds */
          order_cancelled_to?: number;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id"?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["GetSaleArticlesListQueryResponseDtoPaginatedList"];
            "application/json": components["schemas"]["GetSaleArticlesListQueryResponseDtoPaginatedList"];
            "text/json": components["schemas"]["GetSaleArticlesListQueryResponseDtoPaginatedList"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/SaleArticles/list": {
    /** Gets a list of sale articles */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id"?: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["GetSaleArticlesListPostQuery"];
          "text/json": components["schemas"]["GetSaleArticlesListPostQuery"];
          "application/*+json": components["schemas"]["GetSaleArticlesListPostQuery"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["GetSaleArticlesListPostQueryResponseDtoPaginatedList"];
            "application/json": components["schemas"]["GetSaleArticlesListPostQueryResponseDtoPaginatedList"];
            "text/json": components["schemas"]["GetSaleArticlesListPostQueryResponseDtoPaginatedList"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/SaleArticles/{sale_article_id}/details/{sale_article_detail_id}": {
    /** Updates sale article detail */
    put: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
        };
        path: {
          sale_article_id: number;
          sale_article_detail_id: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdateSaleArticleDetailCommand"];
          "text/json": components["schemas"]["UpdateSaleArticleDetailCommand"];
          "application/*+json": components["schemas"]["UpdateSaleArticleDetailCommand"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["SaleArticleDetailDto"];
            "application/json": components["schemas"]["SaleArticleDetailDto"];
            "text/json": components["schemas"]["SaleArticleDetailDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Deletes sale article detail */
    delete: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
        };
        path: {
          sale_article_id: number;
          sale_article_detail_id: number;
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Sales/last_stan": {
    /** Gets sales last stan */
    get: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["StanDto"];
            "application/json": components["schemas"]["StanDto"];
            "text/json": components["schemas"]["StanDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Sales/summary": {
    /** Gets sale summary */
    get: {
      parameters: {
        query: {
          /** @description Unix timestamp in seconds */
          date_from?: number;
          /** @description Unix timestamp in seconds */
          date_to?: number;
          currency?: string;
          /** @example 0 = None, 1 = MyPos, 2 = MyPosGlass, 5 = SmartTerminals, 6 = OnlineShop */
          source?: number;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["SaleSummaryDto"];
            "application/json": components["schemas"]["SaleSummaryDto"];
            "text/json": components["schemas"]["SaleSummaryDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Sales/report": {
    /** Gets sales report */
    get: {
      parameters: {
        query: {
          /** @description Unix timestamp in seconds */
          date_from?: number;
          /** @description Unix timestamp in seconds */
          date_to?: number;
          currency?: string;
          /**
           * @description LIST, separate elements with comma
           * @example 0 = None, 1 = MyPos, 2 = MyPosGlass, 5 = SmartTerminals, 6 = OnlineShop
           */
          source?: string;
          store_id?: number;
          operator_code?: string;
          client_id?: number;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["SaleReportDto"];
            "application/json": components["schemas"]["SaleReportDto"];
            "text/json": components["schemas"]["SaleReportDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Sales/{sale_id}": {
    /** Gets sale by id */
    get: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
        path: {
          sale_id: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["SaleDto"];
            "application/json": components["schemas"]["SaleDto"];
            "text/json": components["schemas"]["SaleDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Sales/sales_list/web": {
    /** Gets sales list for WEB */
    get: {
      parameters: {
        query: {
          /** @description Unix timestamp in seconds */
          date_from?: number;
          /** @description Unix timestamp in seconds */
          date_to?: number;
          page_number: number;
          page_size: number;
          /**
           * @description LIST, separate elements with comma
           * @example 0 = None, 1 = Pending, 2 = Declined, 3 = Paid
           */
          sale_status?: string;
          /**
           * @description LIST, separate elements with comma
           * @example 0 = None, 1 = CashSale, 2 = CardSale, 3 = SplitSale, 4 = Refund
           */
          operation_type?: string;
          item_name?: string;
          sale_reference?: string;
          amount_from?: number;
          amount_to?: number;
          currency?: string;
          source?: number;
          store_id?: number;
          order_id?: number;
          customer_name?: string;
          customer_phone?: string;
          customer_email?: string;
          /**
           * @description LIST, separate elements with comma
           * @example 1 = Pending, 2 = Confirmed, 3 = Completed, 4 = Cancelled, 5 = Shipped, 6 = ReadyForPickup
           */
          order_statuses?: string;
          client_id?: number;
          is_ideal_payment?: boolean;
          masked_pan?: string;
          delivery_tracking_link?: string;
          sale_article_detail_note?: string;
          /** @example 1 = System, 2 = Buyer, 3 = Store, 4 = Delivery */
          group_type?: number;
          /** @example 1 = Auto, 2 = Manually */
          cancellation_type?: number;
          /**
           * @description LIST, separate elements with comma
           * @example 1 = MyPosSystemCancelled, 2 = NonMyPosSystemCancelled, 3 = MyPosBuyerCancelled, 4 = NonMyPosBuyerCancelled, 5 = MyPosBuyerRequestedByPhoneEmail, 6 = MyPosBuyerReturnedIn60Days, 7 = MyPosBuyerReturnedAfter60Days, 8 = MyPosBuyerNotABusiness, 9 = MyPosBuyerVerificationDeclined, 10 = MyPosBuyerRequestedVerificationTooSlow, 11 = MyPosStoreItemsOutOfStock, 12 = MyPosStoreDuplicateOnlineOrder, 13 = MyPosStoreDuplicateWithOfflineOrder, 14 = MyPosDeliveryUnsuccessfulOrDeclined, 15 = MyPosDeliveryTakinTooLongOrOther, 16 = NonMyPosBuyerRequestedByPhoneEmail, 17 = NonMyPosBuyerReturnedItems, 18 = NonMyPosStoreItemsOutOfStock, 19 = NonMyPosStoreDuplicateOnlineOrder, 20 = NonMyPosDeliveryUnsuccessfulOrDeclined, 21 = NonMyPosDeliveryTakinTooLongOrOther
           */
          cancellation_reason_types?: string;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["SaleDtoPaginatedList"];
            "application/json": components["schemas"]["SaleDtoPaginatedList"];
            "text/json": components["schemas"]["SaleDtoPaginatedList"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Sales/sales_list/web/export": {
    /** Gets sales list for web and export */
    get: {
      parameters: {
        query: {
          /** @description Unix timestamp in seconds */
          date_from?: number;
          /** @description Unix timestamp in seconds */
          date_to?: number;
          page_number: number;
          page_size: number;
          /**
           * @description LIST, separate elements with comma
           * @example 0 = None, 1 = Pending, 2 = Declined, 3 = Paid
           */
          sale_status?: string;
          /**
           * @description LIST, separate elements with comma
           * @example 0 = None, 1 = CashSale, 2 = CardSale, 3 = SplitSale, 4 = Refund
           */
          operation_type?: string;
          item_name?: string;
          sale_reference?: string;
          amount_from?: number;
          amount_to?: number;
          currency?: string;
          /** @example 0 = None, 1 = MyPos, 2 = MyPosGlass, 5 = SmartTerminals, 6 = OnlineShop */
          source?: number;
          store_id?: number;
          order_id?: number;
          customer_name?: string;
          customer_phone?: string;
          customer_email?: string;
          /**
           * @description LIST, separate elements with comma
           * @example 1 = Pending, 2 = Confirmed, 3 = Completed, 4 = Cancelled, 5 = Shipped, 6 = ReadyForPickup
           */
          order_statuses?: string;
          client_id?: number;
          is_ideal_payment?: boolean;
          masked_pan?: string;
          delivery_tracking_link?: string;
          sale_article_detail_note?: string;
          /** @example 1 = System, 2 = Buyer, 3 = Store, 4 = Delivery */
          group_type?: number;
          /** @example 1 = Auto, 2 = Manually */
          cancellation_type?: number;
          /**
           * @description LIST, separate elements with comma
           * @example 1 = MyPosSystemCancelled, 2 = NonMyPosSystemCancelled, 3 = MyPosBuyerCancelled, 4 = NonMyPosBuyerCancelled, 5 = MyPosBuyerRequestedByPhoneEmail, 6 = MyPosBuyerReturnedIn60Days, 7 = MyPosBuyerReturnedAfter60Days, 8 = MyPosBuyerNotABusiness, 9 = MyPosBuyerVerificationDeclined, 10 = MyPosBuyerRequestedVerificationTooSlow, 11 = MyPosStoreItemsOutOfStock, 12 = MyPosStoreDuplicateOnlineOrder, 13 = MyPosStoreDuplicateWithOfflineOrder, 14 = MyPosDeliveryUnsuccessfulOrDeclined, 15 = MyPosDeliveryTakinTooLongOrOther, 16 = NonMyPosBuyerRequestedByPhoneEmail, 17 = NonMyPosBuyerReturnedItems, 18 = NonMyPosStoreItemsOutOfStock, 19 = NonMyPosStoreDuplicateOnlineOrder, 20 = NonMyPosDeliveryUnsuccessfulOrDeclined, 21 = NonMyPosDeliveryTakinTooLongOrOther
           */
          cancellation_reason_types?: string;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["SaleDtoPaginatedList"];
            "application/json": components["schemas"]["SaleDtoPaginatedList"];
            "text/json": components["schemas"]["SaleDtoPaginatedList"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Sales/sales_list_internal_report": {
    /** Gets sales list for internal report */
    get: {
      parameters: {
        query: {
          page_number: number;
          page_size: number;
          /** @description Unix timestamp in seconds */
          date_from?: number;
          /** @description Unix timestamp in seconds */
          date_to?: number;
          /** @description Unix timestamp in seconds */
          modified_from?: number;
          /** @description Unix timestamp in seconds */
          modified_to?: number;
          wallet_id?: number;
          sale_id?: number;
          Tid?: string;
          amount_from?: number;
          amount_to?: number;
          currency?: string;
          /**
           * @description LIST, separate elements with comma
           * @example 0 = None, 1 = Pending, 2 = Declined, 3 = Paid
           */
          sale_status?: string;
          /**
           * @description LIST, separate elements with comma
           * @example 0 = None, 1 = CashSale, 2 = CardSale, 3 = SplitSale, 4 = Refund
           */
          operation_type?: string;
          /** @example 0 = None, 1 = MyPos, 2 = MyPosGlass, 5 = SmartTerminals, 6 = OnlineShop */
          source?: number;
          store_ids?: string;
          client_id?: number;
          order_id?: number;
          /**
           * @description LIST, separate elements with comma
           * @example 1 = Pending, 2 = Confirmed, 3 = Completed, 4 = Cancelled, 5 = Shipped, 6 = ReadyForPickup
           */
          order_statuses?: string;
          /** @example 1 = Courier, 2 = PickUp, 3 = NoDelivery */
          delivery_method?: number;
          is_promocode_used?: boolean;
          promocode_code?: string;
          with_upsells?: boolean;
          /** @example 0 = None, 1 = Google, 2 = Facebook, 3 = MicrosoftAds, 4 = LinkedIn, 5 = Twitter, 6 = Dv360, 7 = Affiliate, 8 = Distributor, 9 = Email, 10 = AbandonedCartEmail, 11 = Campaign, 12 = AdGroup, 13 = EmailAutomation */
          traffic_source?: number;
          tracking_ad_group?: string;
          tracking_campaign?: string;
          sale_number?: string;
          promocode_title?: string;
          is_referral_bonus_used?: boolean;
          store_name?: string;
          /** @example 1 = Generic, 2 = MyPos */
          store_type?: number;
          store_url?: string;
          promocode_campaign?: string;
          has_payments?: boolean;
          is_ideal_payment?: boolean;
          is_paid?: boolean;
          masked_pan?: string;
          is_from_email_atuomation?: boolean;
          delivery_tracking_link?: string;
          /** @example 1 = System, 2 = Buyer, 3 = Store, 4 = Delivery */
          group_type?: number;
          /** @example 1 = Auto, 2 = Manually */
          cancellation_types?: number;
          /**
           * @description LIST, separate elements with comma
           * @example 1 = MyPosSystemCancelled, 2 = NonMyPosSystemCancelled, 3 = MyPosBuyerCancelled, 4 = NonMyPosBuyerCancelled, 5 = MyPosBuyerRequestedByPhoneEmail, 6 = MyPosBuyerReturnedIn60Days, 7 = MyPosBuyerReturnedAfter60Days, 8 = MyPosBuyerNotABusiness, 9 = MyPosBuyerVerificationDeclined, 10 = MyPosBuyerRequestedVerificationTooSlow, 11 = MyPosStoreItemsOutOfStock, 12 = MyPosStoreDuplicateOnlineOrder, 13 = MyPosStoreDuplicateWithOfflineOrder, 14 = MyPosDeliveryUnsuccessfulOrDeclined, 15 = MyPosDeliveryTakinTooLongOrOther, 16 = NonMyPosBuyerRequestedByPhoneEmail, 17 = NonMyPosBuyerReturnedItems, 18 = NonMyPosStoreItemsOutOfStock, 19 = NonMyPosStoreDuplicateOnlineOrder, 20 = NonMyPosDeliveryUnsuccessfulOrDeclined, 21 = NonMyPosDeliveryTakinTooLongOrOther
           */
          cancellation_reason_types?: string;
          /** @description Unix timestamp in seconds */
          order_cancelled_from?: number;
          /** @description Unix timestamp in seconds */
          order_cancelled_to?: number;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["GetSalesInternalReportSaleDtoPaginatedList"];
            "application/json": components["schemas"]["GetSalesInternalReportSaleDtoPaginatedList"];
            "text/json": components["schemas"]["GetSalesInternalReportSaleDtoPaginatedList"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Sales/sales_merchants_report": {
    /** Gets sales merchants report */
    get: {
      parameters: {
        query: {
          page_number: number;
          page_size: number;
          /** @description Unix timestamp in seconds */
          date_from?: number;
          /** @description Unix timestamp in seconds */
          date_to?: number;
          /** @description Unix timestamp in seconds */
          last_sale_date_from?: number;
          /** @description Unix timestamp in seconds */
          last_sale_date_to?: number;
          amount_from?: number;
          amount_to?: number;
          store_name?: string;
          store_country?: string;
          /** @example 0 = None, 1 = MyPos, 2 = MyPosGlass, 5 = SmartTerminals, 6 = OnlineShop */
          source?: number;
          store_id?: number;
          sale_curency?: string;
          calculation_currency?: string;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["StoreReportDtoPaginatedList"];
            "application/json": components["schemas"]["StoreReportDtoPaginatedList"];
            "text/json": components["schemas"]["StoreReportDtoPaginatedList"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Sales/sales_total_by_currency_report": {
    /** Gets sales totals grouped by currencies */
    get: {
      parameters: {
        query: {
          /** @description Unix timestamp in seconds */
          date_from?: number;
          /** @description Unix timestamp in seconds */
          date_to?: number;
          /** @description Unix timestamp in seconds */
          last_sale_date_from?: number;
          /** @description Unix timestamp in seconds */
          last_sale_date_to?: number;
          amount_from?: number;
          amount_to?: number;
          store_name?: string;
          store_country?: string;
          /** @example 0 = None, 1 = MyPos, 2 = MyPosGlass, 5 = SmartTerminals, 6 = OnlineShop */
          source?: number;
          store_id?: number;
          sale_curency?: string;
          calculation_currency?: string;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["SaleTotalReportDto"];
            "application/json": components["schemas"]["SaleTotalReportDto"];
            "text/json": components["schemas"]["SaleTotalReportDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Sales/sales_list": {
    /** Gets sales list */
    get: {
      parameters: {
        query: {
          /** @description Unix timestamp in seconds */
          date_from?: number;
          /** @description Unix timestamp in seconds */
          date_to?: number;
          page_number: number;
          page_size: number;
          /**
           * @description LIST, separate elements with comma
           * @example 0 = None, 1 = Pending, 2 = Declined, 3 = Paid
           */
          sale_status?: string;
          /**
           * @description LIST, separate elements with comma
           * @example 0 = None, 1 = CashSale, 2 = CardSale, 3 = SplitSale, 4 = Refund
           */
          operation_type?: string;
          /** @example 0 = None, 1 = MyPos, 2 = MyPosGlass, 5 = SmartTerminals, 6 = OnlineShop */
          source?: number;
          /** @example 0 = Cash, 1 = Card, 2 = Mixed */
          payment_method_type?: number;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["SaleDtoPaginatedList"];
            "application/json": components["schemas"]["SaleDtoPaginatedList"];
            "text/json": components["schemas"]["SaleDtoPaginatedList"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Sales/operators_list": {
    /** Gets operator codes linked to sales */
    get: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["OperatorsResponseDto"];
            "application/json": components["schemas"]["OperatorsResponseDto"];
            "text/json": components["schemas"]["OperatorsResponseDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Sales/register_sale": {
    /** Creates a new sale */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["RegisterSaleCommand"];
          "text/json": components["schemas"]["RegisterSaleCommand"];
          "application/*+json": components["schemas"]["RegisterSaleCommand"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "text/plain": components["schemas"]["IdResponseModel"];
            "application/json": components["schemas"]["IdResponseModel"];
            "text/json": components["schemas"]["IdResponseModel"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Sales/void_sale": {
    /** Creates new void sale */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["RegisterVoidSaleCommand"];
          "text/json": components["schemas"]["RegisterVoidSaleCommand"];
          "application/*+json": components["schemas"]["RegisterVoidSaleCommand"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["IdResponseModel"];
            "application/json": components["schemas"]["IdResponseModel"];
            "text/json": components["schemas"]["IdResponseModel"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Sales/refund_sale": {
    /** Refunds sale */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["RefundSaleCommand"];
          "text/json": components["schemas"]["RefundSaleCommand"];
          "application/*+json": components["schemas"]["RefundSaleCommand"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["IdResponseModel"];
            "application/json": components["schemas"]["IdResponseModel"];
            "text/json": components["schemas"]["IdResponseModel"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Sales/active_wallets": {
    /** Gets list of active wallets */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CheckActiveWalletsPostQuery"];
          "text/json": components["schemas"]["CheckActiveWalletsPostQuery"];
          "application/*+json": components["schemas"]["CheckActiveWalletsPostQuery"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["CheckActiveWalletsPostQueryResponseDto"][];
            "application/json": components["schemas"]["CheckActiveWalletsPostQueryResponseDto"][];
            "text/json": components["schemas"]["CheckActiveWalletsPostQueryResponseDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Sales/sale_finalize": {
    /** Finalizes sale */
    put: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["FinalizeSaleCommand"];
          "text/json": components["schemas"]["FinalizeSaleCommand"];
          "application/*+json": components["schemas"]["FinalizeSaleCommand"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["SaleNumberDto"];
            "application/json": components["schemas"]["SaleNumberDto"];
            "text/json": components["schemas"]["SaleNumberDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Sales/decline_sale": {
    /** Declines sale */
    put: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["DeclineSaleCommand"];
          "text/json": components["schemas"]["DeclineSaleCommand"];
          "application/*+json": components["schemas"]["DeclineSaleCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Shipments/calculate_by_price_or_weight": {
    /** Calculates shipment amount by price or weight */
    get: {
      parameters: {
        query: {
          store_id: number;
          delivery_location_id: number;
          sale_total_price?: number;
          package_weight?: number;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id": number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["ShipmentPriceDto"];
            "application/json": components["schemas"]["ShipmentPriceDto"];
            "text/json": components["schemas"]["ShipmentPriceDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/StorePagesSettings/{store_id}": {
    /** Gets store pages settings by id */
    get: {
      parameters: {
        query: {
          settings_id: number;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id"?: number;
        };
        path: {
          store_id: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["PagesSettingsDto"];
            "application/json": components["schemas"]["PagesSettingsDto"];
            "text/json": components["schemas"]["PagesSettingsDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/StorePagesSettings/mobile/{store_id}": {
    /** Gets pages settings from mobile (Android/iOS) */
    get: {
      parameters: {
        query: {
          settings_id: number;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id"?: number;
        };
        path: {
          store_id: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["GetPagesSettingsFromMobileQueryDto"];
            "application/json": components["schemas"]["GetPagesSettingsFromMobileQueryDto"];
            "text/json": components["schemas"]["GetPagesSettingsFromMobileQueryDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/StorePagesSettings": {
    /** Updates store pages settings */
    put: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id"?: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdatePagesSettingsCommand"];
          "text/json": components["schemas"]["UpdatePagesSettingsCommand"];
          "application/*+json": components["schemas"]["UpdatePagesSettingsCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Creates store pages settings */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id"?: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CreatePagesSettingsCommand"];
          "text/json": components["schemas"]["CreatePagesSettingsCommand"];
          "application/*+json": components["schemas"]["CreatePagesSettingsCommand"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["IdResponseModel"];
            "application/json": components["schemas"]["IdResponseModel"];
            "text/json": components["schemas"]["IdResponseModel"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Deletes store pages settings */
    delete: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id"?: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["DeletePagesSettingsCommand"];
          "text/json": components["schemas"]["DeletePagesSettingsCommand"];
          "application/*+json": components["schemas"]["DeletePagesSettingsCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/StorePagesSettings/mobile": {
    /** Update store pages settings from mobile (Android/iOS) */
    put: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id"?: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdatePageSettingsFromMobileCommand"];
          "text/json": components["schemas"]["UpdatePageSettingsFromMobileCommand"];
          "application/*+json": components["schemas"]["UpdatePageSettingsFromMobileCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Creates store pages settings from mobile (Android/iOS) */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id"?: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CreatePageSettingsFromMobileCommand"];
          "text/json": components["schemas"]["CreatePageSettingsFromMobileCommand"];
          "application/*+json": components["schemas"]["CreatePageSettingsFromMobileCommand"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["IdResponseModel"];
            "application/json": components["schemas"]["IdResponseModel"];
            "text/json": components["schemas"]["IdResponseModel"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/StorePagesSettingsLanguages/{pages_settings_id}": {
    /** Creates language to store pages settings by id */
    get: {
      parameters: {
        query: {
          page_number: number;
          page_size: number;
          language?: string;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id"?: number;
        };
        path: {
          pages_settings_id: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["PagesSettingsLanguageDtoPaginatedList"];
            "application/json": components["schemas"]["PagesSettingsLanguageDtoPaginatedList"];
            "text/json": components["schemas"]["PagesSettingsLanguageDtoPaginatedList"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Bulk updates store pages settings language */
    put: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id"?: number;
        };
        path: {
          pages_settings_id: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["BulkUpdatePagesSettingsLanguageCommand"];
          "text/json": components["schemas"]["BulkUpdatePagesSettingsLanguageCommand"];
          "application/*+json": components["schemas"]["BulkUpdatePagesSettingsLanguageCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/StorePagesSettingsLanguages/{pages_settings_id}/translation_languages": {
    /** Gets pages settings translation languages by id */
    get: {
      parameters: {
        query: {
          page_number: number;
          page_size: number;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id"?: number;
        };
        path: {
          pages_settings_id: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["PagesSettingsTranslationLanguageDtoPaginatedList"];
            "application/json": components["schemas"]["PagesSettingsTranslationLanguageDtoPaginatedList"];
            "text/json": components["schemas"]["PagesSettingsTranslationLanguageDtoPaginatedList"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Bulk updates store pages settings translation languages */
    put: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id"?: number;
        };
        path: {
          pages_settings_id: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["BulkUpdatePagesSettingsTranslationLanguagesCommand"];
          "text/json": components["schemas"]["BulkUpdatePagesSettingsTranslationLanguagesCommand"];
          "application/*+json": components["schemas"]["BulkUpdatePagesSettingsTranslationLanguagesCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Stores/{store_id}": {
    /** Gets store by id */
    get: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key"?: string;
          "Api-Secret"?: string;
          "Login-Id"?: string;
          "Wallet-Id"?: string;
          Tid?: string;
        };
        path: {
          store_id: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["GetStoreDetailsStoreDto"];
            "application/json": components["schemas"]["GetStoreDetailsStoreDto"];
            "text/json": components["schemas"]["GetStoreDetailsStoreDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Stores/is_linked_to_email_automations/{store_id}": {
    /** Gets if store is linked to email automation by id */
    get: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
        };
        path: {
          store_id: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["BoolResponseModel"];
            "application/json": components["schemas"]["BoolResponseModel"];
            "text/json": components["schemas"]["BoolResponseModel"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Stores/logo_guids": {
    /** Gets stores logo guid's by wallet id */
    get: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key"?: string;
          "Api-Secret"?: string;
          "Login-Id"?: string;
          "Wallet-Id"?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["StoresGuidResponseDto"][];
            "application/json": components["schemas"]["StoresGuidResponseDto"][];
            "text/json": components["schemas"]["StoresGuidResponseDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Stores/store_ids": {
    /** Gets store ids by wallet id */
    get: {
      parameters: {
        query: {
          store_type?: number;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key"?: string;
          "Api-Secret"?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": number[];
            "application/json": number[];
            "text/json": number[];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Stores/check_existing_url": {
    /** Checks if url is free */
    get: {
      parameters: {
        query: {
          url?: string;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["BoolResponseModel"];
            "application/json": components["schemas"]["BoolResponseModel"];
            "text/json": components["schemas"]["BoolResponseModel"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Stores/create_store": {
    /** Creates a new store */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key"?: string;
          "Api-Secret"?: string;
          "Login-Id"?: string;
          "Wallet-Id"?: string;
          Tid?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CreateStoreCommand"];
          "text/json": components["schemas"]["CreateStoreCommand"];
          "application/*+json": components["schemas"]["CreateStoreCommand"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "text/plain": components["schemas"]["IdResponseModel"];
            "application/json": components["schemas"]["IdResponseModel"];
            "text/json": components["schemas"]["IdResponseModel"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Stores/create_settings": {
    /** Creates store settings */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key"?: string;
          "Api-Secret"?: string;
          "Login-Id"?: string;
          "Wallet-Id"?: string;
          Tid?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CreateStoreSettingsCommand"];
          "text/json": components["schemas"]["CreateStoreSettingsCommand"];
          "application/*+json": components["schemas"]["CreateStoreSettingsCommand"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["IdResponseModel"];
            "application/json": components["schemas"]["IdResponseModel"];
            "text/json": components["schemas"]["IdResponseModel"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Stores/create_design_settings": {
    /** Creates store design settings */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key"?: string;
          "Api-Secret"?: string;
          "Login-Id"?: string;
          "Wallet-Id"?: string;
          Tid?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CreateStoreDesignSettingsCommand"];
          "text/json": components["schemas"]["CreateStoreDesignSettingsCommand"];
          "application/*+json": components["schemas"]["CreateStoreDesignSettingsCommand"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["IdResponseModel"];
            "application/json": components["schemas"]["IdResponseModel"];
            "text/json": components["schemas"]["IdResponseModel"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Stores/get_stores_design_templates": {
    /** Gets store design templates */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["GetStoresDesignTemplatesPostQuery"];
          "text/json": components["schemas"]["GetStoresDesignTemplatesPostQuery"];
          "application/*+json": components["schemas"]["GetStoresDesignTemplatesPostQuery"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["StoreDesignTemplateDtoPaginatedList"];
            "application/json": components["schemas"]["StoreDesignTemplateDtoPaginatedList"];
            "text/json": components["schemas"]["StoreDesignTemplateDtoPaginatedList"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Stores/get_store_pages_selected_columns": {
    /** Gets store pages selected columns */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["GetStorePagesSelectedColumnsPostQuery"];
          "text/json": components["schemas"]["GetStorePagesSelectedColumnsPostQuery"];
          "application/*+json": components["schemas"]["GetStorePagesSelectedColumnsPostQuery"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["StorePagesSelectedColumnDtoPaginatedList"];
            "application/json": components["schemas"]["StorePagesSelectedColumnDtoPaginatedList"];
            "text/json": components["schemas"]["StorePagesSelectedColumnDtoPaginatedList"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Stores/get_store_types": {
    /** Gets store types by store ids */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["GetStoreTypesByIdsPostQuery"];
          "text/json": components["schemas"]["GetStoreTypesByIdsPostQuery"];
          "application/*+json": components["schemas"]["GetStoreTypesByIdsPostQuery"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["GetStoreTypesByIdsPostQueryResponseDtoPaginatedList"];
            "application/json": components["schemas"]["GetStoreTypesByIdsPostQueryResponseDtoPaginatedList"];
            "text/json": components["schemas"]["GetStoreTypesByIdsPostQueryResponseDtoPaginatedList"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Stores/update_settings": {
    /** Updates store settings */
    put: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key"?: string;
          "Api-Secret"?: string;
          "Login-Id"?: string;
          "Wallet-Id"?: string;
          Tid?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdateStoreSettingsCommand"];
          "text/json": components["schemas"]["UpdateStoreSettingsCommand"];
          "application/*+json": components["schemas"]["UpdateStoreSettingsCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Stores/update_design_settings": {
    /** Updates store design settings */
    put: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key"?: string;
          "Api-Secret"?: string;
          "Login-Id"?: string;
          "Wallet-Id"?: string;
          Tid?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdateStoreDesignSettingsCommand"];
          "text/json": components["schemas"]["UpdateStoreDesignSettingsCommand"];
          "application/*+json": components["schemas"]["UpdateStoreDesignSettingsCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Stores/notification_settings": {
    /** Updates store notification settings */
    put: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key"?: string;
          "Api-Secret"?: string;
          "Login-Id"?: string;
          "Wallet-Id"?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdateStoreNotificationSettingsCommand"];
          "text/json": components["schemas"]["UpdateStoreNotificationSettingsCommand"];
          "application/*+json": components["schemas"]["UpdateStoreNotificationSettingsCommand"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/StoreTermsOfService/{store_id}": {
    /** Gets store terms of service */
    get: {
      parameters: {
        query: {
          terms_id: number;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
        path: {
          store_id: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["TermsOfServiceDto"];
            "application/json": components["schemas"]["TermsOfServiceDto"];
            "text/json": components["schemas"]["TermsOfServiceDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/StoreTermsOfService": {
    /** Updates store terms of service */
    put: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdateTermsOfServiceCommand"];
          "text/json": components["schemas"]["UpdateTermsOfServiceCommand"];
          "application/*+json": components["schemas"]["UpdateTermsOfServiceCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Creates store terms of service */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CreateTermsOfServiceCommand"];
          "text/json": components["schemas"]["CreateTermsOfServiceCommand"];
          "application/*+json": components["schemas"]["CreateTermsOfServiceCommand"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["IdResponseModel"];
            "application/json": components["schemas"]["IdResponseModel"];
            "text/json": components["schemas"]["IdResponseModel"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Deletes store term of service */
    delete: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
          Tid?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["DeleteTermsOfServiceCommand"];
          "text/json": components["schemas"]["DeleteTermsOfServiceCommand"];
          "application/*+json": components["schemas"]["DeleteTermsOfServiceCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/StoreTermsOfService/bulk_update": {
    /** Bulk updates store terms of services */
    put: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["BulkUpdateTermsOfServiceByTypeCommand"];
          "text/json": components["schemas"]["BulkUpdateTermsOfServiceByTypeCommand"];
          "application/*+json": components["schemas"]["BulkUpdateTermsOfServiceByTypeCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Upsells": {
    /** Gets upsells list */
    get: {
      parameters: {
        query: {
          page_number: number;
          page_size: number;
          name?: string;
          /** @example 1 = Published, 2 = NotPublished */
          status?: number;
          platform_id?: number;
          category_ids?: string;
          /** @example 1 = PreCart, 2 = InCart */
          type?: number;
          /** @description LIST, separate elements with comma */
          item_ids?: string;
          /** @description Unix timestamp in seconds */
          created_from?: number;
          /** @description Unix timestamp in seconds */
          created_to?: number;
          position?: number;
          title?: string;
          /** @example 1 = OrCondition, 2 = AndCondition */
          query_filter_type?: number;
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id"?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["UpsellDtoPaginatedList"];
            "application/json": components["schemas"]["UpsellDtoPaginatedList"];
            "text/json": components["schemas"]["UpsellDtoPaginatedList"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Updates upsell */
    put: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id": number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdateUpsellCommand"];
          "text/json": components["schemas"]["UpdateUpsellCommand"];
          "application/*+json": components["schemas"]["UpdateUpsellCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Creates upsell */
    post: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id": number;
          Tid?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AddUpsellCommand"];
          "text/json": components["schemas"]["AddUpsellCommand"];
          "application/*+json": components["schemas"]["AddUpsellCommand"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "text/plain": components["schemas"]["IdResponseModel"];
            "application/json": components["schemas"]["IdResponseModel"];
            "text/json": components["schemas"]["IdResponseModel"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Upsells/{upsell_id}": {
    /** Gets upsell by id */
    get: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id"?: number;
        };
        path: {
          upsell_id: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["UpsellDto"];
            "application/json": components["schemas"]["UpsellDto"];
            "text/json": components["schemas"]["UpsellDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Upsells/status": {
    /** Updates upsell status */
    put: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Login-Id"?: number;
          "Wallet-Id": number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdateUpsellStatusCommand"];
          "text/json": components["schemas"]["UpdateUpsellStatusCommand"];
          "application/*+json": components["schemas"]["UpdateUpsellStatusCommand"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Upsells/report": {
    /** Gets upsells report */
    get: {
      parameters: {
        query: {
          currency: string;
          /** @description Unix timestamp in seconds */
          date_from: number;
          /** @description Unix timestamp in seconds */
          date_to: number;
          upsell_id?: number;
          order_best_selling_by?: components["schemas"]["UpsellBestSellingOrderByEnum"];
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id"?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["UpsellReportDto"];
            "application/json": components["schemas"]["UpsellReportDto"];
            "text/json": components["schemas"]["UpsellReportDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/myPOS360/Wallet/is_mypos_wallet": {
    /** Checks if wallet is myPOS */
    get: {
      parameters: {
        query: {
          /** @description The requested API version */
          "api-version": string;
        };
        header: {
          "Api-Key": string;
          "Api-Secret": string;
          "Wallet-Id": number;
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "text/plain": boolean;
            "application/json": boolean;
            "text/json": boolean;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ValidationProblemDetails"];
            "application/json": components["schemas"]["ValidationProblemDetails"];
            "text/json": components["schemas"]["ValidationProblemDetails"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    AddCampaignCommand: {
      /** @description Campaign name */
      name?: string | null;
    };
    AddFreeSaleArticleCommand: {
      device_type?: string | null;
      device_vendor?: string | null;
      browser_name?: string | null;
      browser_version?: string | null;
      os_name?: string | null;
      os_version?: string | null;
      /**
       * Format: int64
       * @description Id of cart
       */
      cart_id?: number;
      /**
       * Format: int64
       * @description Store id of the cart
       */
      store_id?: number;
      sale_article?: components["schemas"]["SaleArticleDto"];
    };
    AddItemOverviewCommand: {
      /** Format: int64 */
      item_id?: number | null;
      language?: string | null;
      overview_text?: string | null;
      /** @description When true it overwrites previous default */
      is_default?: boolean | null;
    };
    AddOrderCancellationReasonCommand: {
      reason?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = System, 2 = Buyer, 3 = Store, 4 = Delivery
       */
      group_type?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Auto, 2 = Manually
       */
      cancellation_type?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = MyPosSystemCancelled, 2 = NonMyPosSystemCancelled, 3 = MyPosBuyerCancelled, 4 = NonMyPosBuyerCancelled, 5 = MyPosBuyerRequestedByPhoneEmail, 6 = MyPosBuyerReturnedIn60Days, 7 = MyPosBuyerReturnedAfter60Days, 8 = MyPosBuyerNotABusiness, 9 = MyPosBuyerVerificationDeclined, 10 = MyPosBuyerRequestedVerificationTooSlow, 11 = MyPosStoreItemsOutOfStock, 12 = MyPosStoreDuplicateOnlineOrder, 13 = MyPosStoreDuplicateWithOfflineOrder, 14 = MyPosDeliveryUnsuccessfulOrDeclined, 15 = MyPosDeliveryTakinTooLongOrOther, 16 = NonMyPosBuyerRequestedByPhoneEmail, 17 = NonMyPosBuyerReturnedItems, 18 = NonMyPosStoreItemsOutOfStock, 19 = NonMyPosStoreDuplicateOnlineOrder, 20 = NonMyPosDeliveryUnsuccessfulOrDeclined, 21 = NonMyPosDeliveryTakinTooLongOrOther
       */
      reason_type?: number;
    };
    AddPaymentMethodCommand: {
      /** Format: int64 */
      sale_id?: number;
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = Cash, 1 = Card, 2 = Mixed
       */
      payment_method?: number;
      /** Format: double */
      amount?: number | null;
      currency?: string | null;
      /** Format: double */
      change?: number | null;
      card_brand?: string | null;
      masked_pan?: string | null;
      stan_card?: string | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      dttm_card?: number | null;
      payment_reference?: string | null;
      merchant_name?: string | null;
      rrn?: string | null;
      /** Format: int64 */
      transaction_id?: number | null;
      payinapi_id?: string | null;
    };
    AddPromocodeCommand: {
      title?: string | null;
      code?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Active, 2 = Disabled
       */
      status?: number;
      description?: string | null;
      /** Format: int64 */
      campaign_id?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Generic, 2 = EmailAutomation
       */
      type?: number | null;
      conditions?: components["schemas"]["PromocodeConditionDto"];
      incentive?: components["schemas"]["PromocodeIncentiveDto"];
      assigned_categories?:
        | components["schemas"]["PromocodeAssignedCategoryDto"][]
        | null;
      assigned_clients?:
        | components["schemas"]["PromocodeAssignedClientDto"][]
        | null;
      assigned_items?:
        | components["schemas"]["PromocodeAssignedItemDto"][]
        | null;
      assigned_platforms?:
        | components["schemas"]["PromocodeAssignedPlatformDto"][]
        | null;
      languages?: components["schemas"]["PromocodeLanguageDto"][] | null;
    };
    AddSaleArticleDetailCommand: {
      note?: string | null;
      article_hash?: string | null;
      article_parent_hash?: string | null;
    };
    AddSaleArticleInCartCommand: {
      device_type?: string | null;
      device_vendor?: string | null;
      browser_name?: string | null;
      browser_version?: string | null;
      os_name?: string | null;
      os_version?: string | null;
      /**
       * Format: int64
       * @description Cart to wich the sale article to be added
       */
      cart_id?: number;
      /**
       * Format: int64
       * @description Store linked to cart
       */
      store_id?: number;
      sale_article?: components["schemas"]["SaleArticleDto"];
    };
    AddUpsellCommand: {
      title?: string | null;
      name?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = PreCart, 2 = InCart
       */
      type?: number | null;
      /** Format: int32 */
      position?: number | null;
      add_upsell_on_listing?: boolean | null;
      group_products_from_same_category?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Published, 2 = NotPublished
       */
      status?: number | null;
      assigned_platforms?:
        | components["schemas"]["UpsellAssignedPlatformDto"][]
        | null;
      assigned_trigger_items?:
        | components["schemas"]["UpsellAssignedTriggerItemDto"][]
        | null;
      items_to_offer?: components["schemas"]["UpsellItemsToOfferDto"][] | null;
      languages?: components["schemas"]["UpsellLanguageDto"][] | null;
      assigned_trigger_categories?:
        | components["schemas"]["UpsellAssignedTriggerCategoryDto"][]
        | null;
    };
    ApplyPromocodeToCartCommand: {
      device_type?: string | null;
      device_vendor?: string | null;
      browser_name?: string | null;
      browser_version?: string | null;
      os_name?: string | null;
      os_version?: string | null;
      /** Format: int64 */
      cart_id?: number;
      /** Format: int64 */
      store_id?: number;
      /** @description Code to be applied (can be both normal or from email automation) */
      code?: string | null;
    };
    AuthenticationResult: {
      succeeded?: boolean;
      /** Format: int32 */
      code?: number;
      errors?: string[] | null;
      requireCaptcha?: boolean;
      token?: string | null;
      /** Format: date-time */
      expiry?: string;
      refreshToken?: string | null;
      /** Format: date-time */
      refreshTokenExpiry?: string;
    };
    BestPerformingUpsellDto: {
      /** Format: int64 */
      upsell_id?: number | null;
      name?: string | null;
      /** Format: double */
      conversion_rate?: number | null;
      /** Format: double */
      revenue?: number | null;
      item_ids?: number[] | null;
    };
    BoolResponseModel: {
      result?: boolean;
    };
    BulkCreateItemPriceCommandDto: {
      /** Format: int64 */
      item_id?: number | null;
      /** Format: int64 */
      variation_id?: number | null;
      /**
       * Format: double
       * @description Price without VAT and discounts
       */
      original_price?: number | null;
      currency?: string | null;
      /** Format: int64 */
      merchant_selected_discount_id?: number | null;
      is_visible?: boolean | null;
    };
    BulkCreateItemsCommand: {
      is_validation_only?: boolean | null;
      items?: components["schemas"]["BulkCreateItemsCommandDto"][] | null;
    };
    BulkCreateItemsCommandDto: {
      /** Format: int64 */
      id?: number;
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = Item, 1 = Liter, 2 = Kg, 3 = Lbs, 4 = Meter, 5 = Inch
       */
      unit_type?: number | null;
      /**
       * Format: double
       * @description Price without VAT and discounts
       */
      original_price?: number | null;
      name?: string | null;
      currency?: string | null;
      sku?: string | null;
      /** Format: int32 */
      in_stock?: number;
      description?: string | null;
      image_guid?: string | null;
      /** Format: int64 */
      category_id?: number | null;
      /** Format: int64 */
      discount_id?: number | null;
      /** Format: double */
      vat?: number | null;
      /** Format: double */
      vat_value?: number | null;
      /** Format: int64 */
      outlet_id?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Physical, 2 = Viber
       */
      outlet_type?: number | null;
      multiple_prices?: boolean;
      multiple_languages?: boolean;
      is_stock_managed?: boolean | null;
      /** Format: int32 */
      stock_alert_number?: number | null;
      is_shippable?: boolean | null;
      barcode?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Draft, 2 = Pending, 3 = Active, 4 = Deleted, 5 = Rejected, 6 = ForRiskCheck, 7 = RequestInfrormation, 8 = ForAdittionalRiskCheck, 9 = ForCorrection
       */
      risk_status?: number | null;
      risk_status_description?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = IncompleteIncorrectDescription, 2 = UnrealisticPrice, 3 = InappropriateImages, 4 = MisleadingInformation, 5 = Other, 6 = Unallowed, 7 = NoLicenceProvided
       */
      risk_substatus?: number | null;
      /** Format: int64 */
      weight?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Kg, 2 = Lbs
       */
      weight_type?: number | null;
      multiple_pictures?: boolean | null;
      multiple_variations?: boolean | null;
      stores_prices_vary?: boolean | null;
      stores_quantities_vary?: boolean | null;
      stores_skus_vary?: boolean | null;
      store_barcodes_vary?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Physical, 2 = Service, 3 = Bundle
       */
      type?: number | null;
      is_overview_enabled?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Generic, 2 = Terminal, 3 = Warranty
       */
      product_type?: number | null;
      /** @description Relevant when multiple_pictures = true */
      pictures?: components["schemas"]["ItemPictureDto"][] | null;
      /** @description Relevant when multiple_languages = true */
      languages?: components["schemas"]["ItemLanguageDto"][] | null;
      /** @description Relevant when multiple_prices = true */
      prices?: components["schemas"]["ItemPriceDto"][] | null;
      /** @description Relevant when multiple_variations = true */
      variations?: components["schemas"]["ItemVariationDto"][] | null;
      variation_types?: components["schemas"]["ItemVariationTypeDto"][] | null;
      pricings?: components["schemas"]["ItemPricingDto"][] | null;
      variations_pricings?:
        | components["schemas"]["ItemVariationPricingDto"][]
        | null;
    };
    BulkCreateItemsPriceCommand: {
      /** Format: int32 */
      platform_type?: number;
      /** Format: int64 */
      platform_id?: number;
      itemPrices?:
        | components["schemas"]["BulkCreateItemPriceCommandDto"][]
        | null;
      variation_prices?:
        | components["schemas"]["BulkCreateItemPriceCommandDto"][]
        | null;
      override_previous_assigned_stores?: boolean;
    };
    BulkCreateItemsResponseDto: {
      failed_items?: components["schemas"]["FailedItem"][] | null;
      inserted_items?: number[] | null;
    };
    BulkDeleteItemsCommand: {
      itemIds?: number[] | null;
    };
    BulkDeleteItemsPriceCommand: {
      /** Format: int32 */
      platform_type?: number;
      /** Format: int64 */
      platform_id?: number;
      itemIds?: number[] | null;
    };
    BulkEditIsCheckedCommand: {
      /** Format: int32 */
      botUserId?: number;
      items?: components["schemas"]["ItemIsCheckedDto"][] | null;
    };
    BulkEditItemStockCommand: {
      item_stocks?:
        | components["schemas"]["BulkEditItemStockCommandDto"][]
        | null;
    };
    BulkEditItemStockCommandDto: {
      /** Format: int64 */
      item_id?: number;
      /** Format: int64 */
      variation_id?: number | null;
      /** Format: int32 */
      stock?: number;
    };
    BulkEditItemWeightCommand: {
      weights?: components["schemas"]["BulkEditItemWeightCommandDto"][] | null;
    };
    BulkEditItemWeightCommandDto: {
      /** Format: int64 */
      item_id?: number;
      /** Format: int64 */
      weight?: number;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Kg, 2 = Lbs
       */
      weight_type?: number;
    };
    BulkUpdateItemOverviewsCommand: {
      /** Format: int64 */
      item_id?: number | null;
      overviews?: components["schemas"]["ItemOverviewDto"][] | null;
    };
    BulkUpdatePagesSettingsLanguageCommand: {
      languages?: components["schemas"]["PagesSettingsLanguageDto"][] | null;
    };
    BulkUpdatePagesSettingsTranslationLanguagesCommand: {
      translation_languages?:
        | components["schemas"]["PagesSettingsTranslationLanguageDto"][]
        | null;
    };
    BulkUpdateTermsOfServiceByTypeCommand: {
      /** Format: int64 */
      store_id?: number;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = TermsAndConditions, 2 = CookiePolicy, 3 = PrivacyPolicy, 4 = LegalNotice
       */
      type?: number;
      terms?: components["schemas"]["TermsOfServiceDto"][] | null;
    };
    BundleItemDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      assigned_item_id?: number | null;
      /** Format: int32 */
      quantity?: number;
      /** Format: int32 */
      order_position?: number | null;
      bundle_variations?:
        | components["schemas"]["BundleItemVariationDto"][]
        | null;
    };
    BundleItemVariationDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      variation_id?: number | null;
      /** Format: int32 */
      quantity?: number;
    };
    CartDeviceInformationDto: {
      device_type?: string | null;
      device_vendor?: string | null;
      browser_name?: string | null;
      browser_version?: string | null;
      os_name?: string | null;
      os_version?: string | null;
    };
    CartDto: {
      /** Format: int64 */
      id?: number;
      /** Format: int64 */
      store_id?: number | null;
      settlement_account_number?: string | null;
      /** Format: int64 */
      merchant_id?: number | null;
      /** Format: int64 */
      client_id?: number | null;
      currency?: string | null;
      language?: string | null;
      /**
       * Format: double
       * @description Total amount of the cart with VAT (everything included)
       */
      total_amount?: number | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      dt_created?: number | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      dt_updated?: number | null;
      /**
       * Format: double
       * @description Sum of promocode and referral discounts with VAT
       */
      discount_amount?: number | null;
      /**
       * Format: double
       * @description Sum of promocode and referral discounts without VAT
       */
      discount_amount_no_vat?: number | null;
      /**
       * Format: double
       * @description total_amount - total_amount_no_vat
       */
      vat_amount?: number | null;
      /** Format: int64 */
      wallet_id?: number | null;
      /** Format: int64 */
      order_id?: number | null;
      billing_country?: string | null;
      billing_city?: string | null;
      billing_post_code?: string | null;
      billing_address?: string | null;
      billing_additional_address?: string | null;
      billing_first_name?: string | null;
      billing_last_name?: string | null;
      billing_email?: string | null;
      billing_phone_number?: string | null;
      shipping_country?: string | null;
      shipping_city?: string | null;
      shipping_post_code?: string | null;
      shipping_address?: string | null;
      shipping_additional_address?: string | null;
      shipping_first_name?: string | null;
      shipping_last_name?: string | null;
      shipping_email?: string | null;
      shipping_phone_number?: string | null;
      billing_same_as_shipping?: boolean | null;
      notify_url?: string | null;
      /** Format: int32 */
      delivery_type?: number | null;
      /** Format: double */
      delivery_amount?: number | null;
      delivery_currency?: string | null;
      comment?: string | null;
      /** Format: int32 */
      type?: number | null;
      cart_url?: string | null;
      is_promocode_used?: boolean | null;
      /** Format: int64 */
      promocode_id?: number | null;
      /** Format: int64 */
      delivery_location_id?: number | null;
      is_referral_bonus_used?: boolean | null;
      /** Format: int64 */
      referral_id?: number | null;
      /** Format: double */
      referral_discount_amount?: number | null;
      referral_discount_currency?: string | null;
      is_free_shipping?: boolean | null;
      /** Format: int64 */
      wallet_number?: number | null;
      /**
       * Format: double
       * @description Sum of all articles prices with VAT * quantity
       */
      sub_total_amount?: number | null;
      /**
       * Format: double
       * @description Sum of all articles prices without VAT * quantity
       */
      sub_total_amount_no_vat?: number | null;
      is_invoice?: boolean | null;
      invoice_company_name?: string | null;
      invoice_company_number?: string | null;
      is_vat_registered?: boolean | null;
      invoice_vat_number?: string | null;
      /** Format: int32 */
      invoice_type?: number | null;
      invoice_billing_country?: string | null;
      invoice_personal_number?: string | null;
      /**
       * Format: double
       * @description Total amount of the cart without VAT (everything included)
       */
      total_amount_no_vat?: number | null;
      /** Format: double */
      referral_discount_amount_no_vat?: number | null;
      /** Format: double */
      promocode_discount_amount_no_vat?: number | null;
      /** Format: double */
      promocode_discount_amount?: number | null;
      /** Format: int64 */
      sale_id?: number | null;
      is_shippable?: boolean | null;
      invoice_tax_id?: string | null;
      invoice_certified_email?: string | null;
      invoice_sdi_code?: string | null;
      is_vat_excluded?: boolean | null;
      /** Format: int64 */
      delivery_custom_type_id?: number | null;
      delivery_is_custom_fee?: boolean | null;
      /** Format: double */
      oss_vat?: number | null;
      /** Format: double */
      delivery_amount_no_vat?: number | null;
      seller_country?: string | null;
      client_has_valid_vat_number?: boolean | null;
      is_promocode_subcode?: boolean | null;
      promocode_subcode?: string | null;
      /** Format: int64 */
      pick_up_location_id?: number | null;
      custom_delivery_type?: components["schemas"]["DeliveryLocationCustomDeliveryTypeDto"];
      sale_articles?: components["schemas"]["SaleArticleDto"][] | null;
      promocode?: components["schemas"]["PromocodeDto"];
      device_information?: components["schemas"]["CartDeviceInformationDto"];
    };
    CategoryDiscountDto: {
      /** Format: int64 */
      id?: number;
      name?: string | null;
      /** Format: double */
      amount?: number;
      currency?: string | null;
      is_deleted?: boolean;
    };
    CategoryDto: {
      /** Format: int64 */
      id?: number;
      /** Format: int64 */
      parent_category_id?: number | null;
      /** Format: int64 */
      discount_id?: number | null;
      name?: string | null;
      is_deleted?: boolean;
      /** Format: int64 */
      login_id?: number;
      /** Format: int64 */
      wallet_id?: number;
      tid?: string | null;
      guid?: string | null;
      /** Format: int32 */
      items_count?: number;
      multiple_languages?: boolean | null;
      image_guid?: string | null;
      languages?: components["schemas"]["CategoryLanguageDto"][] | null;
      discount?: components["schemas"]["CategoryDiscountDto"];
      items?: components["schemas"]["CategoryItemDto"][] | null;
    };
    CategoryItemDto: {
      /** Format: int64 */
      id?: number;
      /** Format: int64 */
      category_id?: number | null;
      name?: string | null;
      /** Format: int64 */
      outlet_id?: number | null;
      sku?: string | null;
      /** Format: double */
      original_price?: number | null;
      /** Format: double */
      final_price?: number | null;
      currency?: string | null;
      /** Format: int32 */
      in_stock?: number | null;
      is_stock_managed?: boolean | null;
      image_guid?: string | null;
      is_deleted?: boolean;
      /** Format: int64 */
      discount_id?: number | null;
      /** Format: int32 */
      unit_type?: number | null;
      description?: string | null;
      /** Format: double */
      vat?: number | null;
      /** Format: double */
      vat_value?: number | null;
      guid?: string | null;
      /** Format: int32 */
      outlet_type?: number | null;
      /** Format: int32 */
      risk_status?: number | null;
      /** Format: int32 */
      type?: number | null;
    };
    CategoryItemWebDto: {
      /** Format: int64 */
      id?: number;
      /** Format: int64 */
      category_id?: number | null;
      name?: string | null;
      /** Format: int64 */
      outlet_id?: number | null;
      sku?: string | null;
      /**
       * Format: double
       * @description Price without VAT and discounts
       */
      original_price?: number | null;
      /**
       * Format: double
       * @description Price with VAT and discounts
       */
      final_price?: number | null;
      currency?: string | null;
      /** Format: int32 */
      in_stock?: number | null;
      is_stock_managed?: boolean | null;
      image_guid?: string | null;
      is_deleted?: boolean;
      /** Format: int64 */
      discount_id?: number | null;
      /** Format: int32 */
      unit_type?: number | null;
      description?: string | null;
      /** Format: double */
      vat?: number | null;
      /** Format: double */
      vat_value?: number | null;
      guid?: string | null;
      /** Format: int32 */
      outlet_type?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Draft, 2 = Pending, 3 = Active, 4 = Deleted, 5 = Rejected, 6 = ForRiskCheck, 7 = RequestInfrormation, 8 = ForAdittionalRiskCheck, 9 = ForCorrection
       */
      risk_status?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Physical, 2 = Service, 3 = Bundle
       */
      type?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = Products, 1 = Services, 2 = Mixed
       */
      bundle_items_type?: number | null;
    };
    CategoryLanguageDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      category_id?: number | null;
      language?: string | null;
      category_name?: string | null;
    };
    CategoryWebDto: {
      /** Format: int64 */
      id?: number;
      /** Format: int64 */
      parent_category_id?: number | null;
      /** Format: int64 */
      discount_id?: number | null;
      name?: string | null;
      is_deleted?: boolean;
      /** Format: int64 */
      login_id?: number;
      /** Format: int64 */
      wallet_id?: number;
      tid?: string | null;
      guid?: string | null;
      /** Format: int32 */
      items_count?: number;
      multiple_languages?: boolean | null;
      image_guid?: string | null;
      languages?: components["schemas"]["CategoryLanguageDto"][] | null;
      discount?: components["schemas"]["CategoryDiscountDto"];
      items?: components["schemas"]["CategoryItemWebDto"][] | null;
    };
    CheckActiveWalletsPostQuery: {
      wallets?: number[] | null;
      source?: string | null;
    };
    CheckActiveWalletsPostQueryResponseDto: {
      /** Format: int64 */
      wallet?: number | null;
      has_sales?: boolean | null;
    };
    CheckProductTypesLinkedToPlatformQueryResponseDto: {
      linked_product_types?: number[] | null;
    };
    CheckPromocodeExistenceCommand: {
      code?: string | null;
    };
    CheckPromocodeExistenceCommandResponseDto: {
      is_free?: boolean;
    };
    ClientDeliveryAddressDto: {
      /** Format: int64 */
      id?: number | null;
      country?: string | null;
      city?: string | null;
      address?: string | null;
      post_code?: string | null;
      /** Format: int64 */
      client_id?: number | null;
      is_default_address?: boolean | null;
      is_billing_address?: boolean | null;
      first_name?: string | null;
      family_name?: string | null;
      phone_number?: string | null;
      phone_prefix?: string | null;
      phone_country?: string | null;
      additional_address?: string | null;
    };
    ClientDeliveryAddressDtoPaginatedList: {
      items?: components["schemas"]["ClientDeliveryAddressDto"][] | null;
      /** Format: int32 */
      pageIndex?: number;
      /** Format: int32 */
      totalPages?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      pageSize?: number;
      hasPreviousPage?: boolean;
      hasNextPage?: boolean;
    };
    ClientDto: {
      /** Format: int64 */
      store_id?: number;
      /** Format: int64 */
      id?: number;
      name?: string | null;
      family_name?: string | null;
      is_activated?: boolean;
      email?: string | null;
      gsm?: string | null;
      gsm_prefix?: string | null;
      gsm_country?: string | null;
      language?: string | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      dt_created?: number | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      dt_updated?: number | null;
      /** Format: int32 */
      total_sales?: number | null;
      /** Format: int64 */
      mypos_wallet_id?: number | null;
      locations?: components["schemas"]["ClientDeliveryAddressDto"][] | null;
      invoice_locations?:
        | components["schemas"]["ClientInvoiceAddressDto"][]
        | null;
      clientMyposDetail?: components["schemas"]["ClientMyposDetailDto"];
    };
    ClientDtoAuthenticationResult: {
      succeeded?: boolean;
      /** Format: int32 */
      code?: number;
      errors?: string[] | null;
      requireCaptcha?: boolean;
      token?: string | null;
      /** Format: date-time */
      expiry?: string;
      refreshToken?: string | null;
      /** Format: date-time */
      refreshTokenExpiry?: string;
      data?: components["schemas"]["ClientDto"];
    };
    ClientInvoiceAddressDto: {
      /** Format: int64 */
      id?: number;
      country?: string | null;
      city?: string | null;
      address?: string | null;
      is_default_invoice?: boolean | null;
      post_code?: string | null;
      first_name?: string | null;
      family_name?: string | null;
      phone_number?: string | null;
      phone_prefix?: string | null;
      phone_country?: string | null;
      company_name?: string | null;
      company_number?: string | null;
      is_vat_registered?: boolean | null;
      vat_number?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = PrivateIndividual, 2 = Company
       */
      type?: number | null;
      personal_number?: string | null;
      additional_address?: string | null;
      email?: string | null;
      tax_id?: string | null;
      certified_email?: string | null;
      sdi_code?: string | null;
    };
    ClientInvoiceAddressDtoPaginatedList: {
      items?: components["schemas"]["ClientInvoiceAddressDto"][] | null;
      /** Format: int32 */
      pageIndex?: number;
      /** Format: int32 */
      totalPages?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      pageSize?: number;
      hasPreviousPage?: boolean;
      hasNextPage?: boolean;
    };
    ClientListDto: {
      /** Format: int64 */
      store_id?: number;
      /** Format: int64 */
      id?: number;
      name?: string | null;
      family_name?: string | null;
      is_activated?: boolean;
      email?: string | null;
      gsm?: string | null;
      language?: string | null;
      /** Format: int32 */
      total_sales?: number | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      dt_created?: number | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      dt_updated?: number | null;
    };
    ClientListDtoPaginatedList: {
      items?: components["schemas"]["ClientListDto"][] | null;
      /** Format: int32 */
      pageIndex?: number;
      /** Format: int32 */
      totalPages?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      pageSize?: number;
      hasPreviousPage?: boolean;
      hasNextPage?: boolean;
    };
    ClientMyposDetailDto: {
      /** Format: int64 */
      id?: number;
      /** Format: int64 */
      client_id?: number;
      /** Format: int64 */
      das_distributor_id?: number;
      /** Format: int64 */
      distributor_id?: number | null;
      /** Format: int64 */
      agent_id?: number | null;
      /** Format: int64 */
      enroll_id?: number | null;
    };
    CreateCartCommand: {
      device_type?: string | null;
      device_vendor?: string | null;
      browser_name?: string | null;
      browser_version?: string | null;
      os_name?: string | null;
      os_version?: string | null;
      /** Format: int64 */
      store_id?: number;
      settlement_account_number?: string | null;
      /** Format: int64 */
      merchant_id?: number | null;
      /** Format: int64 */
      client_id?: number | null;
      currency?: string | null;
      language?: string | null;
      /** Format: int64 */
      wallet_number?: number | null;
      billing_country?: string | null;
      billing_city?: string | null;
      billing_post_code?: string | null;
      billing_address?: string | null;
      billing_additional_address?: string | null;
      billing_first_name?: string | null;
      billing_last_name?: string | null;
      billing_email?: string | null;
      billing_phone_number?: string | null;
      shipping_country?: string | null;
      shipping_city?: string | null;
      shipping_post_code?: string | null;
      shipping_address?: string | null;
      shipping_additional_address?: string | null;
      shipping_first_name?: string | null;
      shipping_last_name?: string | null;
      shipping_email?: string | null;
      shipping_phone_number?: string | null;
      shipping_same_as_billing?: boolean | null;
      notify_url?: string | null;
      /** Format: int32 */
      delivery_type?: number | null;
      comment?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Abandoned, 2 = AwaitingPayment, 3 = Finished
       */
      type?: number | null;
      cart_url?: string | null;
      /** Format: int64 */
      delivery_location_id?: number | null;
      is_invoice?: boolean | null;
      invoice_company_name?: string | null;
      invoice_company_number?: string | null;
      is_vat_registered?: boolean | null;
      invoice_vat_number?: string | null;
      /** Format: int32 */
      invoice_type?: number | null;
      invoice_billing_country?: string | null;
      invoice_personal_number?: string | null;
      invoice_tax_id?: string | null;
      invoice_certified_email?: string | null;
      invoice_sdi_code?: string | null;
      is_vat_excluded?: boolean | null;
      /** Format: int64 */
      delivery_custom_type_id?: number | null;
      client_has_valid_vat_number?: boolean | null;
      seller_country?: string | null;
      /** Format: int64 */
      pick_up_location_id?: number | null;
    };
    CreateCategoryCommand: {
      name: string;
      Original_Price: number | null;
      Currency: string | null;
      Unit_Type: number | null;
      /** Format: int64 */
      parent_category_id?: number | null;
      /** Format: int64 */
      discount_id?: number | null;
      multiple_languages?: boolean | null;
      image_guid?: string | null;
      /** @description Relevant only if multiple_languages = true */
      languages?: components["schemas"]["CategoryLanguageDto"][] | null;
    };
    CreateCategoryLanguageCommand: {
      /** Format: int64 */
      category_id?: number;
      language?: string | null;
      name?: string | null;
    };
    CreateClientCommand: {
      /** Format: int64 */
      store_id?: number;
      name?: string | null;
      family_name?: string | null;
      email?: string | null;
      password?: string | null;
      facebook_id?: string | null;
      apple_id?: string | null;
      google_id?: string | null;
      is_activated?: boolean | null;
      gsm?: string | null;
      gsm_prefix?: string | null;
      gsm_country?: string | null;
      language?: string | null;
    };
    CreateClientInvoiceLocationCommand: {
      country?: string | null;
      city?: string | null;
      address?: string | null;
      /** @description When set to true it will overwrite previous default location */
      is_default_invoice?: boolean | null;
      post_code?: string | null;
      first_name?: string | null;
      family_name?: string | null;
      phone_number?: string | null;
      phone_prefix?: string | null;
      phone_country?: string | null;
      company_name?: string | null;
      company_number?: string | null;
      is_vat_registered?: boolean | null;
      vat_number?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = PrivateIndividual, 2 = Company
       */
      type?: number | null;
      personal_number?: string | null;
      additional_address?: string | null;
      email?: string | null;
      tax_id?: string | null;
      certified_email?: string | null;
      sdi_code?: string | null;
    };
    CreateClientLocationCommand: {
      country?: string | null;
      city?: string | null;
      address?: string | null;
      post_code?: string | null;
      /** @description When set to true it will overwrite previous default address */
      is_default_address?: boolean | null;
      is_billing_address?: boolean | null;
      first_name?: string | null;
      family_name?: string | null;
      phone_number?: string | null;
      phone_prefix?: string | null;
      phone_country?: string | null;
      additional_address?: string | null;
    };
    CreateDiscountCommand: {
      name: string;
      /** Format: double */
      amount?: number;
      /** @description Can be either currency or % */
      currency?: string | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      valid_from?: number | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      valid_to?: number | null;
      has_validity_period?: boolean | null;
      show_validity_info?: boolean | null;
      is_active?: boolean | null;
      /** @description Categories to wich the discount to be applied */
      apply_to?: number[] | null;
    };
    CreateEmailAutomationTriggerCommand: {
      /** Format: int32 */
      type?: number;
      has_follow_up_email?: boolean | null;
      has_second_follow_up_email?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = DontLimit, 2 = LimitOncePerCustomer, 3 = LimitOncePerCustomerPerDay
       */
      frequency_type?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Active, 2 = Disabled
       */
      status?: number | null;
      is_assigned_to_stores?: boolean | null;
      is_draft?: boolean | null;
      trigger_platforms?:
        | components["schemas"]["EmailAutomationTriggerPlatformDto"][]
        | null;
      emails_settings?:
        | components["schemas"]["EmailAutomationEmailSettingsDto"][]
        | null;
    };
    CreateItemCommand: {
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = Item, 1 = Liter, 2 = Kg, 3 = Lbs, 4 = Meter, 5 = Inch
       */
      unit_type?: number | null;
      /**
       * Format: double
       * @description Price without VAT and discounts
       */
      original_price?: number | null;
      name?: string | null;
      currency?: string | null;
      sku?: string | null;
      /** Format: int32 */
      in_stock?: number;
      description?: string | null;
      image_guid?: string | null;
      /** Format: int64 */
      category_id?: number | null;
      /** Format: int64 */
      discount_id?: number | null;
      /** Format: double */
      vat?: number | null;
      /** Format: double */
      vat_value?: number | null;
      /** Format: int64 */
      outlet_id?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Physical, 2 = Viber
       */
      outlet_type?: number | null;
      multiple_prices?: boolean;
      multiple_languages?: boolean;
      is_stock_managed?: boolean | null;
      /** Format: int32 */
      stock_alert_number?: number | null;
      is_shippable?: boolean | null;
      barcode?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Draft, 2 = Pending, 3 = Active, 4 = Deleted, 5 = Rejected, 6 = ForRiskCheck, 7 = RequestInfrormation, 8 = ForAdittionalRiskCheck, 9 = ForCorrection
       */
      risk_status?: number | null;
      risk_status_description?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = IncompleteIncorrectDescription, 2 = UnrealisticPrice, 3 = InappropriateImages, 4 = MisleadingInformation, 5 = Other, 6 = Unallowed, 7 = NoLicenceProvided
       */
      risk_substatus?: number | null;
      /** Format: int64 */
      weight?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Kg, 2 = Lbs
       */
      weight_type?: number | null;
      multiple_pictures?: boolean | null;
      multiple_variations?: boolean | null;
      stores_prices_vary?: boolean | null;
      stores_quantities_vary?: boolean | null;
      stores_skus_vary?: boolean | null;
      store_barcodes_vary?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Physical, 2 = Service, 3 = Bundle
       */
      type?: number | null;
      is_overview_enabled?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Generic, 2 = Terminal, 3 = Warranty
       */
      product_type?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = Products, 1 = Services, 2 = Mixed
       */
      bundle_items_type?: number | null;
      /** @description Relevant when multiple_pictures = true */
      pictures?: components["schemas"]["ItemPictureDto"][] | null;
      /** @description Relevant when multiple_languages = true */
      languages?: components["schemas"]["ItemLanguageDto"][] | null;
      /** @description Relevant when multiple_prices = true */
      prices?: components["schemas"]["ItemPriceDto"][] | null;
      /** @description Relevant when multiple_variations = true */
      variations?: components["schemas"]["ItemVariationDto"][] | null;
      variation_types?: components["schemas"]["ItemVariationTypeDto"][] | null;
      pricings?: components["schemas"]["ItemPricingDto"][] | null;
      variations_pricings?:
        | components["schemas"]["ItemVariationPricingDto"][]
        | null;
      /** @description Relevant only when type = bundle */
      bundle_items?: components["schemas"]["BundleItemDto"][] | null;
    };
    CreateItemLanguageCommand: {
      /** Format: int64 */
      item_id?: number;
      language?: string | null;
      name?: string | null;
      description?: string | null;
    };
    CreateItemPriceCommand: {
      /** Format: int64 */
      item_id?: number;
      /** Format: int32 */
      platform_type?: number;
      /** Format: int64 */
      platform_id?: number;
      /**
       * Format: double
       * @description Price without VAT and discounts
       */
      original_price?: number | null;
      currency?: string | null;
      /** Format: int32 */
      merchant_selected_discount_id?: number | null;
      /** Format: int32 */
      pricing_index?: number | null;
    };
    CreateOrderCommand: {
      device_type?: string | null;
      device_vendor?: string | null;
      browser_name?: string | null;
      browser_version?: string | null;
      os_name?: string | null;
      os_version?: string | null;
      /** @description Used to know which translations to get */
      language?: string | null;
      stan?: string | null;
      /** Format: double */
      sub_total_amount?: number | null;
      /** Format: double */
      sale_discount_amount?: number | null;
      /** Format: double */
      total_amount?: number | null;
      /** Format: double */
      total_vat?: number | null;
      currency?: string | null;
      comment?: string | null;
      include_note_in_receipt?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = None, 1 = CashSale, 2 = CardSale, 3 = SplitSale, 4 = Refund
       */
      operation_type?: number;
      discount_name?: string | null;
      /** Format: double */
      discount_amount_no_vat?: number | null;
      /** Format: double */
      oss_vat?: number | null;
      communication_channel?: string | null;
      sale_articles?: components["schemas"]["SaleArticleDto"][] | null;
      payment_method?: components["schemas"]["CreateOrderPaymentMethodDto"];
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = None, 1 = MyPos, 2 = MyPosGlass, 5 = SmartTerminals, 6 = OnlineShop
       */
      application?: number | null;
      country?: string | null;
      city?: string | null;
      address?: string | null;
      post_code?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Pending, 2 = Confirmed, 3 = Completed, 4 = Cancelled, 5 = Shipped, 6 = ReadyForPickup
       */
      status?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Courier, 2 = PickUp, 3 = NoDelivery
       */
      delivery_method?: number | null;
      /** Format: int64 */
      store_id?: number | null;
      merchant_name?: string | null;
      is_guest?: boolean | null;
      /** Format: int64 */
      client_id?: number | null;
      guest_name?: string | null;
      guest_family_name?: string | null;
      guest_email?: string | null;
      guest_gsm?: string | null;
      guest_language?: string | null;
      /** Format: int32 */
      traffic_source?: number | null;
      tracking_ad_group?: string | null;
      tracking_campaign?: string | null;
      /** Format: int32 */
      vat_display_type?: number | null;
      /** Format: int64 */
      cart_id?: number | null;
      traffic_uri?: string | null;
      tracking_referer?: string | null;
      /** Format: int64 */
      tracking_date?: number | null;
      is_vat_excluded?: boolean | null;
      client_has_valid_vat_number?: boolean;
      billing_country?: string | null;
      billing_city?: string | null;
      billing_post_code?: string | null;
      billing_address?: string | null;
      billing_additional_address?: string | null;
      billing_first_name?: string | null;
      billing_last_name?: string | null;
      billing_email?: string | null;
      billing_phone_number?: string | null;
      shipping_country?: string | null;
      shipping_city?: string | null;
      shipping_post_code?: string | null;
      shipping_address?: string | null;
      shipping_additional_address?: string | null;
      shipping_first_name?: string | null;
      shipping_last_name?: string | null;
      shipping_email?: string | null;
      shipping_phone_number?: string | null;
      billing_same_as_shipping?: boolean | null;
      /** Format: int32 */
      delivery_days_from?: number | null;
      /** Format: int32 */
      delivery_days_to?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Courier, 2 = PickUp, 3 = NoDelivery
       */
      delivery_type?: number | null;
      /** Format: double */
      delivery_amount?: number | null;
      delivery_currency?: string | null;
      is_invoice?: boolean | null;
      invoice_company_name?: string | null;
      invoice_company_number?: string | null;
      is_vat_registered?: boolean | null;
      invoice_vat_number?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = PrivateIndividual, 2 = Company
       */
      invoice_type?: number | null;
      invoice_billing_country?: string | null;
      invoice_personal_number?: string | null;
      is_shipping_business_days?: boolean;
      invoice_tax_id?: string | null;
      invoice_certified_email?: string | null;
      invoice_sdi_code?: string | null;
      custom_delivery_type_name?: string | null;
      /** Format: int64 */
      custom_delivery_type_id?: number | null;
      delivery_is_custom_fee?: boolean | null;
      is_promocode_used?: boolean | null;
      /** Format: int64 */
      promocode_id?: number | null;
      is_free_shipping?: boolean | null;
      is_cart_discount?: boolean | null;
      /** Format: double */
      promocode_discount_amount?: number | null;
      /** Format: double */
      promocode_discount_amount_no_vat?: number | null;
      promocode_discount_currency?: string | null;
      is_promocode_subcode?: boolean | null;
      promocode_subcode?: string | null;
      is_referral_bonus_used?: boolean | null;
      /** Format: int64 */
      referral_id?: number | null;
      /** Format: double */
      referral_discount_amount?: number | null;
      /** Format: double */
      referral_discount_amount_no_vat?: number | null;
      referral_discount_currency?: string | null;
      das_details?: components["schemas"]["OrderDasDetailDto"];
    };
    CreateOrderPaymentMethodDto: {
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = Cash, 1 = Card, 2 = Mixed
       */
      payment_method?: number;
      /** Format: double */
      amount?: number | null;
      currency?: string | null;
      /** Format: double */
      change?: number | null;
      card_brand?: string | null;
      masked_pan?: string | null;
      stan_card?: string | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      dttm_card?: number | null;
      payment_reference?: string | null;
      merchant_name?: string | null;
      rrn?: string | null;
      /** Format: int64 */
      transaction_id?: number | null;
      payinapi_id?: string | null;
    };
    CreatePageSettingsFromMobileCommand: {
      /** Format: int64 */
      store_id?: number;
      /** Format: int32 */
      style?: number;
      logo_guid?: string | null;
      favicon_guid?: string | null;
      notification_bar_is_enabled?: boolean;
      notification_bar_text?: string | null;
      main_theme_color?: string | null;
      /** Format: int32 */
      buttons_style?: number;
      /** Format: int32 */
      font_family?: number;
      facebook?: string | null;
      instagram?: string | null;
      twitter?: string | null;
      country?: string | null;
      city?: string | null;
      zip?: string | null;
      address?: string | null;
      email?: string | null;
      mobile_number?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = BasicTheme, 2 = FashionTheme, 3 = HealthyStoreTheme, 4 = МyPos
       */
      template?: number;
      /** Format: int32 */
      default_product_view?: number | null;
      /** Format: int32 */
      menu_position?: number | null;
      /** Format: int32 */
      number_products_view?: number | null;
      /** Format: int32 */
      services_default_sorting_type?: number | null;
      /** Format: int32 */
      products_default_sorting_type?: number | null;
      /** Format: int32 */
      number_of_services_on_row?: number | null;
      /** Format: int32 */
      max_services_per_category?: number | null;
      /** Format: int32 */
      max_products_per_category?: number | null;
      group_products_by_category?: boolean | null;
      group_services_by_category?: boolean | null;
      with_service_page?: boolean | null;
      contact_page_enabled?: boolean;
      contact_page_widgets?: components["schemas"]["WidgetDto"][] | null;
      product_page_widgets?: components["schemas"]["WidgetDto"][] | null;
      service_page_widgets?: components["schemas"]["WidgetDto"][] | null;
    };
    CreatePagesSettingsCommand: {
      /** Format: int64 */
      store_id?: number;
      settings?: string | null;
    };
    CreateStoreCommand: {
      /** Format: int64 */
      id?: number;
      is_digital_menu?: boolean | null;
      is_validation_only?: boolean;
      store_name?: string | null;
      store_url?: string | null;
      customer_service_phone?: string | null;
      customer_service_email?: string | null;
      merchant_name?: string | null;
      merchant_language?: string | null;
      fin_institution?: string | null;
      store_title?: string | null;
    };
    CreateStoreDesignSettingsCommand: {
      /** Format: int64 */
      store_id?: number;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = BasicTheme, 2 = FashionTheme, 3 = HealthyStoreTheme, 4 = МyPos
       */
      template?: number | null;
      /** Format: int32 */
      menu_position?: number | null;
      /** Format: int32 */
      button_style?: number | null;
      /** Format: int32 */
      font_family?: number | null;
      /** Format: int32 */
      default_product_view?: number | null;
      /** Format: int32 */
      number_products_view?: number | null;
      menu_color?: string | null;
      overlay_color?: string | null;
      headline_1?: string | null;
      headline_2?: string | null;
      facebook_page?: string | null;
      instagram_page?: string | null;
      twitter_page?: string | null;
      notifications_enabled?: boolean | null;
      notification_message?: string | null;
      logo_guid?: string | null;
      header_guid?: string | null;
      show_logo?: boolean | null;
      show_hero_img?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = None, 1 = DateAsc, 2 = DateDesc, 3 = PriceDesc, 4 = PriceAsc, 5 = NameAsc, 6 = PriceNoVatAsc, 7 = PriceNoVatDesc, 8 = Relevance, 9 = Custom
       */
      services_default_sorting_type?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = None, 1 = DateAsc, 2 = DateDesc, 3 = PriceDesc, 4 = PriceAsc, 5 = NameAsc, 6 = PriceNoVatAsc, 7 = PriceNoVatDesc, 8 = Relevance, 9 = Custom
       */
      products_default_sorting_type?: number | null;
      /** Format: int32 */
      number_of_services_on_row?: number | null;
      /** Format: int32 */
      max_services_per_category?: number | null;
      /** Format: int32 */
      max_products_per_category?: number | null;
      group_products_by_category?: boolean | null;
      group_services_by_category?: boolean | null;
    };
    CreateStoreSettingsCommand: {
      is_validation_only?: boolean;
      /** Format: int64 */
      store_id?: number;
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = Invalid, 1 = DontShow, 2 = ShowUnavailable, 3 = ShowAvailiable, 4 = Max
       */
      out_of_stock_type?: number | null;
      allow_delivery?: boolean | null;
      allow_pick_up?: boolean | null;
      working_hours_enabled?: boolean | null;
      out_of_working_hours_enabled?: boolean | null;
      time_zone?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = VatIncluded, 2 = VatExcluded, 3 = DontShowVat
       */
      vat_display_type?: number | null;
      allow_registration?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Email, 2 = SocialMedia, 3 = Both
       */
      registration_type?: number | null;
      allow_guest_checkout?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Generic, 2 = MyPos
       */
      store_type?: number | null;
      has_phone_call_type?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = FreeCall, 2 = CallToTheNationalFixedNetwork, 3 = CallToNationalMobileNetwork, 4 = Custom
       */
      phone_call_type?: number | null;
      phone_call_languages?:
        | components["schemas"]["CreateStoreSettingsStorePhoneCallLanguagesDto"][]
        | null;
      pick_up_locations?:
        | components["schemas"]["CreateStoreSettingsStorePickUpLocationDto"][]
        | null;
      order_statuses?:
        | components["schemas"]["CreateStoreSettingsOrderStatusDto"][]
        | null;
      delivery_locations?:
        | components["schemas"]["CreateStoreSettingsStoreDeliveryLocationDto"][]
        | null;
      working_hours?:
        | components["schemas"]["CreateStoreSettingsStoreWorkingHoursDto"][]
        | null;
      languages?:
        | components["schemas"]["CreateStoreSettingsStoreLanguageDto"][]
        | null;
    };
    CreateStoreSettingsDeliveryAreaDto: {
      area?: string | null;
    };
    CreateStoreSettingsDeliveryLocationCustomDeliveryTypeDto: {
      name?: string | null;
      /** Format: int32 */
      delivery_days_from?: number | null;
      /** Format: int32 */
      delivery_days_to?: number | null;
      is_business_days?: boolean | null;
      /** Format: double */
      delivery_amount?: number | null;
    };
    CreateStoreSettingsDeliveryLocationExcludedCategoryDto: {
      /** Format: int64 */
      category_id?: number;
      /** Format: int32 */
      quantity_from?: number;
      /** Format: int32 */
      quantity_to?: number;
      /** Format: double */
      delivery_fee_amount?: number;
    };
    CreateStoreSettingsDeliveryLocationExcludedItemDto: {
      /** Format: int64 */
      item_id?: number;
      /** Format: int32 */
      quantity_from?: number;
      /** Format: int32 */
      quantity_to?: number;
      /** Format: double */
      delivery_fee_amount?: number;
    };
    CreateStoreSettingsDeliveryLocationPriceRangeDto: {
      /** Format: int64 */
      weight_from?: number | null;
      /** Format: int64 */
      weight_to?: number | null;
      /** Format: double */
      order_price_from?: number | null;
      /** Format: double */
      order_price_to?: number | null;
      /** Format: double */
      delivery_price?: number | null;
    };
    CreateStoreSettingsOrderStatusDto: {
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Pending, 2 = Confirmed, 3 = Completed, 4 = Cancelled, 5 = Shipped, 6 = ReadyForPickup
       */
      type?: number;
      enabled?: boolean | null;
    };
    CreateStoreSettingsStoreDeliveryLocationDto: {
      city?: string | null;
      /** Format: int32 */
      time_from?: number | null;
      /** Format: int32 */
      time_to?: number | null;
      is_business_days?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Weight, 2 = SalePrice, 3 = DeliveryType
       */
      shipment_calculation_type?: number | null;
      currency?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Kg, 2 = Lbs
       */
      weight_type?: number | null;
      has_free_shipping_over_amount?: boolean | null;
      /** Format: double */
      free_shipping_over_amount?: number | null;
      exclude_fee_if_cart_contains?: boolean | null;
      delivery_areas?:
        | components["schemas"]["CreateStoreSettingsDeliveryAreaDto"][]
        | null;
      price_ranges?:
        | components["schemas"]["CreateStoreSettingsDeliveryLocationPriceRangeDto"][]
        | null;
      custom_delivery_types?:
        | components["schemas"]["CreateStoreSettingsDeliveryLocationCustomDeliveryTypeDto"][]
        | null;
      excluded_categories?:
        | components["schemas"]["CreateStoreSettingsDeliveryLocationExcludedCategoryDto"][]
        | null;
      excluded_items?:
        | components["schemas"]["CreateStoreSettingsDeliveryLocationExcludedItemDto"][]
        | null;
    };
    CreateStoreSettingsStoreLanguageDto: {
      language?: string | null;
    };
    CreateStoreSettingsStorePhoneCallLanguagesDto: {
      language?: string | null;
      description?: string | null;
    };
    CreateStoreSettingsStorePickUpLocationDto: {
      address?: string | null;
      city?: string | null;
      country?: string | null;
      zip?: string | null;
      is_custom_pick_up_time?: boolean | null;
      working_hours?:
        | components["schemas"]["CreateStoreSettingsStorePickupWorkingHoursDto"][]
        | null;
    };
    CreateStoreSettingsStorePickupWorkingHoursDto: {
      is_pick_up?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Monday, 2 = Tuesday, 3 = Wednesday, 4 = Thursday, 5 = Friday, 6 = Saturday, 7 = Sunday
       */
      week_day?: number | null;
      /** Format: int32 */
      from_hours?: number | null;
      /** Format: int32 */
      to_hours?: number | null;
      /** Format: int32 */
      from_minutes?: number | null;
      /** Format: int32 */
      to_minutes?: number | null;
    };
    CreateStoreSettingsStoreWorkingHoursDto: {
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Monday, 2 = Tuesday, 3 = Wednesday, 4 = Thursday, 5 = Friday, 6 = Saturday, 7 = Sunday
       */
      week_day?: number | null;
      /** Format: int32 */
      from_hours?: number | null;
      /** Format: int32 */
      to_hours?: number | null;
      /** Format: int32 */
      from_minutes?: number | null;
      /** Format: int32 */
      to_minutes?: number | null;
    };
    CreateTermsOfServiceCommand: {
      /** Format: int64 */
      store_id?: number;
      html?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = TermsAndConditions, 2 = CookiePolicy, 3 = PrivacyPolicy, 4 = LegalNotice
       */
      type?: number | null;
      terms_language?: string | null;
    };
    DeclineSaleCommand: {
      stan?: string | null;
      /** Format: int64 */
      sale_id?: number;
    };
    DeletePagesSettingsCommand: {
      /** Format: int64 */
      store_id?: number;
      /** Format: int64 */
      settings_id?: number;
    };
    DeleteTermsOfServiceCommand: {
      /** Format: int64 */
      store_id?: number;
      /** Format: int64 */
      terms_of_service_id?: number;
    };
    DeliveryLocationCustomDeliveryTypeDto: {
      /** Format: int64 */
      id?: number | null;
      name?: string | null;
      /** Format: int32 */
      delivery_days_from?: number | null;
      /** Format: int32 */
      delivery_days_to?: number | null;
      is_business_days?: boolean | null;
      /** Format: double */
      delivery_amount?: number | null;
    };
    DiscountCategoryDto: {
      /** Format: int64 */
      id?: number;
      /** Format: int64 */
      parent_category_id?: number | null;
      /** Format: int64 */
      discount_id?: number | null;
      name?: string | null;
      is_deleted?: boolean;
      guid?: string | null;
      /** Format: int64 */
      loginId?: number;
      /** Format: int64 */
      walletId?: number;
    };
    DiscountDto: {
      /** Format: int64 */
      id?: number;
      name?: string | null;
      /** Format: double */
      amount?: number;
      /** @description Can be either currency or % */
      currency?: string | null;
      is_deleted?: boolean;
      /** Format: int64 */
      login_id?: number;
      /** Format: int64 */
      wallet_id?: number;
      has_validity_period?: boolean | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      valid_from?: number | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      valid_to?: number | null;
      is_active?: boolean | null;
      has_expired?: boolean | null;
      show_validity_info?: boolean | null;
      tid?: string | null;
      categories?: components["schemas"]["DiscountCategoryDto"][] | null;
    };
    DiscountDtoPaginatedList: {
      items?: components["schemas"]["DiscountDto"][] | null;
      /** Format: int32 */
      pageIndex?: number;
      /** Format: int32 */
      totalPages?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      pageSize?: number;
      hasPreviousPage?: boolean;
      hasNextPage?: boolean;
    };
    EmailAutomationEmailSettingsDto: {
      /** Format: int64 */
      id?: number | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      dt_created?: number | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      dt_modified?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Minutes, 2 = Hours, 3 = Days, 4 = Weeks
       */
      timing_type?: number | null;
      /** Format: int32 */
      timing_amount?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = ItemsLeftBehind, 2 = VisitAgain, 3 = FreeProduct, 4 = Discount, 5 = LeaveFeedback, 6 = SameAsPrimary
       */
      type?: number | null;
      is_follow_up?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = First, 2 = Second
       */
      follow_up_type?: number | null;
      /** Format: int64 */
      promocode_id?: number | null;
      /** Format: int32 */
      offer_timing_amount?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Minutes, 2 = Hours, 3 = Days, 4 = Weeks
       */
      offer_timing_type?: number | null;
      feedback_url?: string | null;
    };
    EmailAutomationTriggerDto: {
      /** Format: int64 */
      id?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = AbandonedCart, 2 = CompletedOrder
       */
      type?: number;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      dt_created?: number | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      dt_modified?: number | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      dt_first_activated?: number | null;
      has_follow_up_email?: boolean | null;
      has_second_follow_up_email?: boolean | null;
      /** Format: int64 */
      wallet_id?: number;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = DontLimit, 2 = LimitOncePerCustomer, 3 = LimitOncePerCustomerPerDay
       */
      frequency_type?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Active, 2 = Disabled
       */
      status?: number | null;
      is_assigned_to_stores?: boolean | null;
      is_draft?: boolean | null;
      emails_settings?:
        | components["schemas"]["EmailAutomationEmailSettingsDto"][]
        | null;
      trigger_platforms?:
        | components["schemas"]["EmailAutomationTriggerPlatformDto"][]
        | null;
    };
    EmailAutomationTriggerDtoPaginatedList: {
      items?: components["schemas"]["EmailAutomationTriggerDto"][] | null;
      /** Format: int32 */
      pageIndex?: number;
      /** Format: int32 */
      totalPages?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      pageSize?: number;
      hasPreviousPage?: boolean;
      hasNextPage?: boolean;
    };
    EmailAutomationTriggerPlatformDesignDto: {
      /** Format: int64 */
      id?: number | null;
      name?: string | null;
      subject?: string | null;
      reply_to_email?: string | null;
      preview_text?: string | null;
      is_follow_up?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = First, 2 = Second
       */
      follow_up_type?: number | null;
      email_design?: string | null;
      email_tpl_guid?: string | null;
      languages?:
        | components["schemas"]["EmailAutomationTriggerPlatformDesignLanguageDto"][]
        | null;
    };
    EmailAutomationTriggerPlatformDesignLanguageDto: {
      /** Format: int64 */
      id?: number | null;
      language?: string | null;
      email_tpl_guid?: string | null;
      subject?: string | null;
      preview_text?: string | null;
    };
    EmailAutomationTriggerPlatformDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      automation_trigger_id?: number | null;
      /** Format: int64 */
      platform_id?: number | null;
      /** Format: int32 */
      platform_type?: number | null;
      designs?:
        | components["schemas"]["EmailAutomationTriggerPlatformDesignDto"][]
        | null;
    };
    EmailResponseModelDto: {
      email?: string | null;
    };
    ExchangeRateDto: {
      from?: string | null;
      to?: string | null;
      /** Format: double */
      rate?: number;
      /** Format: double */
      sell_rate?: number;
    };
    FailedItem: {
      /** Format: int64 */
      id?: number;
      error?: string | null;
    };
    FinalizeSaleCommand: {
      /** @description Sale stan */
      stan?: string | null;
      /** Format: int64 */
      sale_id?: number;
      communication_channel?: string | null;
      sim_card_number?: string | null;
    };
    GenerateCodeCommand: {
      /** Format: int64 */
      store_id?: number;
      email?: string | null;
    };
    GetAbandonedCartsDetailedReportQueryResponseDto: {
      /** Format: int64 */
      cart_id?: number | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      dt_created?: number | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      dt_updated?: number | null;
      language?: string | null;
      /** Format: int32 */
      status?: number | null;
      /** Format: int64 */
      store_id?: number | null;
      shipping_name?: string | null;
      billing_name?: string | null;
      shipping_email?: string | null;
      shipping_phone_number?: string | null;
      /** Format: int32 */
      delivery_type?: number | null;
      shipping_country?: string | null;
      shipping_city?: string | null;
      shipping_post_code?: string | null;
      shipping_address?: string | null;
      shipping_additional_address?: string | null;
      /** Format: int32 */
      invoice_type?: number | null;
      invoice_company_name?: string | null;
      invoice_company_number?: string | null;
      invoice_tax_id?: string | null;
      is_vat_registered?: boolean | null;
      invoice_vat_number?: string | null;
      invoice_personal_number?: string | null;
      billing_email?: string | null;
      billing_phone_number?: string | null;
      billing_country?: string | null;
      billing_city?: string | null;
      billing_post_code?: string | null;
      billing_address?: string | null;
      billing_additional_address?: string | null;
      /**
       * Format: double
       * @description Sum of all articles prices without VAT * quantity
       */
      sub_total_amount_no_vat?: number | null;
      /**
       * Format: double
       * @description Sum of promocode discount amount without vat and referral discount amount without vat
       */
      discount_amount_no_vat?: number | null;
      promocode_code?: string | null;
      /** Format: double */
      delivery_amount?: number | null;
      /** Format: double */
      vat_amount?: number | null;
      currency?: string | null;
      /**
       * Format: double
       * @description Total amount of the cart with VAT (everything included)
       */
      total_amount?: number | null;
      store_name?: string | null;
      client_name?: string | null;
      client_email?: string | null;
      client_gsm?: string | null;
      /** Format: int32 */
      store_vat_display_type?: number | null;
      /** Format: double */
      delivery_amount_no_vat?: number | null;
    };
    GetAbandonedCartsDetailedReportQueryResponseDtoPaginatedList: {
      items?:
        | components["schemas"]["GetAbandonedCartsDetailedReportQueryResponseDto"][]
        | null;
      /** Format: int32 */
      pageIndex?: number;
      /** Format: int32 */
      totalPages?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      pageSize?: number;
      hasPreviousPage?: boolean;
      hasNextPage?: boolean;
    };
    GetAbandonedCartsQueryResponseDto: {
      /** Format: int64 */
      id?: number;
      /** Format: int64 */
      dt_created?: number | null;
      /** Format: int64 */
      dt_updated?: number | null;
      /** Format: int32 */
      status?: number | null;
      client_name?: string | null;
      client_family_name?: string | null;
      shipping_email?: string | null;
      store_name?: string | null;
      /** Format: double */
      total_amount?: number | null;
      currency?: string | null;
      /** Format: int64 */
      wallet_id?: number;
      /** Format: int64 */
      store_id?: number | null;
      /** Format: int64 */
      client_id?: number | null;
      sale_articles?: components["schemas"]["SaleArticleDto"][] | null;
    };
    GetAbandonedCartsQueryResponseDtoPaginatedList: {
      items?:
        | components["schemas"]["GetAbandonedCartsQueryResponseDto"][]
        | null;
      /** Format: int32 */
      pageIndex?: number;
      /** Format: int32 */
      totalPages?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      pageSize?: number;
      hasPreviousPage?: boolean;
      hasNextPage?: boolean;
    };
    GetCancellationReasonTypesResponseDto: {
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Generic, 2 = MyPos
       */
      store_type?: number;
      reason?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = System, 2 = Buyer, 3 = Store, 4 = Delivery
       */
      group_type?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Auto, 2 = Manually
       */
      cancellation_type?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = MyPosSystemCancelled, 2 = NonMyPosSystemCancelled, 3 = MyPosBuyerCancelled, 4 = NonMyPosBuyerCancelled, 5 = MyPosBuyerRequestedByPhoneEmail, 6 = MyPosBuyerReturnedIn60Days, 7 = MyPosBuyerReturnedAfter60Days, 8 = MyPosBuyerNotABusiness, 9 = MyPosBuyerVerificationDeclined, 10 = MyPosBuyerRequestedVerificationTooSlow, 11 = MyPosStoreItemsOutOfStock, 12 = MyPosStoreDuplicateOnlineOrder, 13 = MyPosStoreDuplicateWithOfflineOrder, 14 = MyPosDeliveryUnsuccessfulOrDeclined, 15 = MyPosDeliveryTakinTooLongOrOther, 16 = NonMyPosBuyerRequestedByPhoneEmail, 17 = NonMyPosBuyerReturnedItems, 18 = NonMyPosStoreItemsOutOfStock, 19 = NonMyPosStoreDuplicateOnlineOrder, 20 = NonMyPosDeliveryUnsuccessfulOrDeclined, 21 = NonMyPosDeliveryTakinTooLongOrOther
       */
      reason_type?: number;
      note?: string | null;
    };
    GetCancellationReasonTypesResponseDtoListResponseModel: {
      items?:
        | components["schemas"]["GetCancellationReasonTypesResponseDto"][]
        | null;
    };
    GetCategoriesListCategoryDiscountDto: {
      /** Format: int64 */
      id?: number;
      name?: string | null;
      /** Format: double */
      amount?: number;
      /** @description Can be either currency or % */
      currency?: string | null;
      is_deleted?: boolean;
    };
    GetCategoriesListCategoryDto: {
      /** Format: int64 */
      id?: number;
      /** Format: int64 */
      parent_category_id?: number | null;
      /** Format: int64 */
      discount_id?: number | null;
      name?: string | null;
      is_deleted?: boolean;
      /** Format: int64 */
      login_id?: number;
      /** Format: int64 */
      wallet_id?: number;
      tid?: string | null;
      guid?: string | null;
      /** Format: int32 */
      items_count?: number;
      multiple_languages?: boolean | null;
      image_guid?: string | null;
      /** @description Relevant only if multiple_languages = true */
      languages?:
        | components["schemas"]["GetCategoriesListCategoryLanguageDto"][]
        | null;
      discount?: components["schemas"]["GetCategoriesListCategoryDiscountDto"];
      items?:
        | components["schemas"]["GetCategoriesListCategoryItemDto"][]
        | null;
    };
    GetCategoriesListCategoryDtoPaginatedList: {
      items?: components["schemas"]["GetCategoriesListCategoryDto"][] | null;
      /** Format: int32 */
      pageIndex?: number;
      /** Format: int32 */
      totalPages?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      pageSize?: number;
      hasPreviousPage?: boolean;
      hasNextPage?: boolean;
    };
    GetCategoriesListCategoryItemDto: {
      /** Format: int64 */
      id?: number;
      /** Format: int64 */
      category_id?: number | null;
      name?: string | null;
      /** Format: int64 */
      outlet_id?: number | null;
      sku?: string | null;
      /**
       * Format: double
       * @description Price without VAT and discounts
       */
      original_price?: number | null;
      /**
       * Format: double
       * @description Price with VAT and discounts
       */
      final_price?: number | null;
      currency?: string | null;
      /** Format: int32 */
      in_stock?: number | null;
      is_stock_managed?: boolean | null;
      image_guid?: string | null;
      is_deleted?: boolean;
      /** Format: int64 */
      discount_id?: number | null;
      /** Format: int32 */
      unit_type?: number | null;
      description?: string | null;
      /** Format: double */
      vat?: number | null;
      /** Format: double */
      vat_value?: number | null;
      guid?: string | null;
      /** Format: int32 */
      outlet_type?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Draft, 2 = Pending, 3 = Active, 4 = Deleted, 5 = Rejected, 6 = ForRiskCheck, 7 = RequestInfrormation, 8 = ForAdittionalRiskCheck, 9 = ForCorrection
       */
      risk_status?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Physical, 2 = Service, 3 = Bundle
       */
      type?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = Products, 1 = Services, 2 = Mixed
       */
      bundle_items_type?: number | null;
    };
    GetCategoriesListCategoryLanguageDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      category_id?: number | null;
      language?: string | null;
      category_name?: string | null;
    };
    GetClientDetailsByMailQueryResponse: {
      /** Format: int32 */
      orders_count?: number;
    };
    GetDeliveryAreasByWalletIdQueryPlatformDto: {
      /** Format: int64 */
      platform_id?: number | null;
      delivery_areas?: string[] | null;
    };
    GetDeliveryAreasByWalletIdQueryPlatformDtoListResponseModel: {
      items?:
        | components["schemas"]["GetDeliveryAreasByWalletIdQueryPlatformDto"][]
        | null;
    };
    GetHealthSimpleQueryResponseDto: {
      type?: string | null;
      status?: string | null;
    };
    GetItemCountByPlatformIdsPostQuery: {
      platform_ids?: number[] | null;
      with_variations?: boolean | null;
    };
    GetItemDetailsV2BundleItemDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      assigned_item_id?: number | null;
      /** Format: int32 */
      quantity?: number;
      /** Format: int32 */
      order_position?: number | null;
      /** Format: int32 */
      in_stock?: number | null;
      is_stock_managed?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Physical, 2 = Service, 3 = Bundle
       */
      type?: number | null;
      bundle_variations?:
        | components["schemas"]["GetItemDetailsV2BundleItemVariationDto"][]
        | null;
    };
    GetItemDetailsV2BundleItemVariationDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      variation_id?: number | null;
      /** Format: int32 */
      quantity?: number;
      /** Format: int32 */
      in_stock?: number | null;
    };
    GetItemDetailsV2CategoryDto: {
      /** Format: int64 */
      id?: number;
      /** Format: int64 */
      parent_category_id?: number | null;
      parent_category_name?: string | null;
      /** Format: int64 */
      discount_id?: number | null;
      name?: string | null;
      is_deleted?: boolean;
      guid?: string | null;
    };
    GetItemDetailsV2DiscountDto: {
      /** Format: int64 */
      id?: number;
      name?: string | null;
      /** Format: double */
      amount?: number;
      /** @description Can be either currency or % */
      currency?: string | null;
      is_deleted?: boolean;
    };
    GetItemDetailsV2ItemDto: {
      /** Format: int64 */
      id?: number;
      /** Format: int64 */
      category_id?: number | null;
      name?: string | null;
      /** Format: int64 */
      outlet_id?: number | null;
      sku?: string | null;
      /**
       * Format: double
       * @description Price without VAT and discounts
       */
      original_price?: number | null;
      /**
       * Format: double
       * @description Price with VAT and discounts
       */
      final_price?: number | null;
      currency?: string | null;
      /** Format: int32 */
      in_stock?: number | null;
      image_guid?: string | null;
      is_deleted?: boolean;
      /** Format: int64 */
      login_id?: number;
      /** Format: int64 */
      wallet_id?: number;
      tid?: string | null;
      /** Format: int64 */
      discount_id?: number | null;
      /** Format: int32 */
      unit_type?: number | null;
      description?: string | null;
      /** Format: double */
      vat?: number | null;
      /** Format: double */
      vat_value?: number | null;
      guid?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Physical, 2 = Viber
       */
      outlet_type?: number | null;
      multiple_prices?: boolean;
      multiple_languages?: boolean;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Physical, 2 = Service, 3 = Bundle
       */
      type?: number | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      created_on?: number;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      modified?: number;
      /** Format: double */
      category_discount_amount?: number | null;
      category_discount_currency?: string | null;
      /** Format: double */
      parent_category_discount_amount?: number | null;
      parent_category_discount_currency?: string | null;
      /** Format: int64 */
      parent_category_id?: number | null;
      parent_category_name?: string | null;
      is_stock_managed?: boolean | null;
      /** Format: int32 */
      stock_alert_number?: number | null;
      is_shippable?: boolean | null;
      barcode?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Draft, 2 = Pending, 3 = Active, 4 = Deleted, 5 = Rejected, 6 = ForRiskCheck, 7 = RequestInfrormation, 8 = ForAdittionalRiskCheck, 9 = ForCorrection
       */
      risk_status?: number | null;
      risk_status_description?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = IncompleteIncorrectDescription, 2 = UnrealisticPrice, 3 = InappropriateImages, 4 = MisleadingInformation, 5 = Other, 6 = Unallowed, 7 = NoLicenceProvided
       */
      risk_substatus?: number | null;
      /** Format: int64 */
      weight?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Kg, 2 = Lbs
       */
      weight_type?: number | null;
      multiple_pictures?: boolean | null;
      is_checked?: boolean | null;
      multiple_variations?: boolean | null;
      stores_prices_vary?: boolean | null;
      stores_quantities_vary?: boolean | null;
      stores_skus_vary?: boolean | null;
      store_barcodes_vary?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Generic, 2 = Terminal, 3 = Warranty
       */
      product_type?: number | null;
      is_overview_enabled?: boolean | null;
      has_precart_upsells?: boolean | null;
      has_incart_upsells?: boolean | null;
      /** Format: double */
      oss_vat?: number | null;
      is_for_sale?: boolean;
      category?: components["schemas"]["GetItemDetailsV2CategoryDto"];
      discount?: components["schemas"]["GetItemDetailsV2DiscountDto"];
      discount_primary?: components["schemas"]["GetItemDetailsV2DiscountDto"];
      pictures?:
        | components["schemas"]["GetItemDetailsV2ItemPictureDto"][]
        | null;
      /** @description Relevant only if multiple_prices = true */
      prices?: components["schemas"]["GetItemDetailsV2ItemPriceDto"][] | null;
      /** @description Relevant only if multiple_languages = true */
      languages?:
        | components["schemas"]["GetItemDetailsV2ItemLanguageDto"][]
        | null;
      variation_types?:
        | components["schemas"]["GetItemDetailsV2VariationTypeDto"][]
        | null;
      /** @description Relevant only if multiple_variations = true */
      variations?:
        | components["schemas"]["GetItemDetailsV2VariationDto"][]
        | null;
      pricings?:
        | components["schemas"]["GetItemDetailsV2ItemPricingDto"][]
        | null;
      variations_pricings?:
        | components["schemas"]["GetItemDetailsV2ItemVariationPricingDto"][]
        | null;
      is_checked_history?:
        | components["schemas"]["GetItemDetailsV2ItemIsCheckedHistoryDto"][]
        | null;
      /** @description Relevant only when type = Bundle */
      bundle_items?:
        | components["schemas"]["GetItemDetailsV2BundleItemDto"][]
        | null;
    };
    GetItemDetailsV2ItemIsCheckedHistoryDto: {
      /** Format: int64 */
      id?: number;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      dt_modified?: number | null;
      /** Format: int64 */
      bot_user_id?: number | null;
      is_checked_old?: boolean | null;
      is_checked_new?: boolean | null;
    };
    GetItemDetailsV2ItemLanguageDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      item_id?: number | null;
      language?: string | null;
      item_name?: string | null;
      item_description?: string | null;
    };
    GetItemDetailsV2ItemPictureDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      item_id?: number | null;
      image_guid?: string | null;
      /** Format: int32 */
      position?: number;
    };
    GetItemDetailsV2ItemPriceDto: {
      /** Format: int64 */
      id?: number | null;
      is_deleted?: boolean;
      /** Format: int64 */
      item_id?: number | null;
      /** Format: int64 */
      platform_id?: number;
      /** Format: int32 */
      platform_type?: number;
      /**
       * Format: double
       * @description Price without VAT and discounts
       */
      original_price?: number | null;
      /**
       * Format: double
       * @description Price with VAT and discounts
       */
      final_price?: number | null;
      /** Format: int64 */
      merchant_selected_discount_id?: number | null;
      currency?: string | null;
      is_visible?: boolean | null;
      /** Format: int32 */
      pricing_index?: number | null;
      /**
       * Format: double
       * @description Price without VAT with discounts
       */
      final_price_no_vat?: number | null;
      final_price_discount?: components["schemas"]["GetItemDetailsV2DiscountDto"];
      merchant_selected_discount?: components["schemas"]["GetItemDetailsV2DiscountDto"];
    };
    GetItemDetailsV2ItemPricingDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int32 */
      pricing_index?: number | null;
      platforms?:
        | components["schemas"]["GetItemDetailsV2ItemPricingPlatformDto"][]
        | null;
    };
    GetItemDetailsV2ItemPricingPlatformDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      platform_id?: number | null;
      /** Format: int32 */
      platform_type?: number | null;
    };
    GetItemDetailsV2ItemVariationPricingDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int32 */
      pricing_index?: number | null;
      platforms?:
        | components["schemas"]["GetItemDetailsV2ItemPricingPlatformDto"][]
        | null;
    };
    GetItemDetailsV2SubvariationDto: {
      /** Format: int64 */
      id?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Color, 2 = Size, 3 = Fabrics, 4 = Material, 5 = Dimensions, 6 = Height, 7 = Lenght, 8 = Diameter, 9 = Weight, 10 = Capacity, 11 = Storage, 12 = WarrantyPeriod, 13 = Custom
       */
      type?: number | null;
      subvariation?: string | null;
    };
    GetItemDetailsV2VariationDto: {
      /** Format: int64 */
      id?: number | null;
      barcode?: string | null;
      sku?: string | null;
      /** Format: int32 */
      in_stock?: number | null;
      subvariations?:
        | components["schemas"]["GetItemDetailsV2SubvariationDto"][]
        | null;
      variation_pictures?:
        | components["schemas"]["GetItemDetailsV2VariationPictureDto"][]
        | null;
      variation_prices?:
        | components["schemas"]["GetItemDetailsV2VariationPriceDto"][]
        | null;
    };
    GetItemDetailsV2VariationPictureDto: {
      /** Format: int64 */
      id?: number | null;
      image_guid?: string | null;
      /** Format: int32 */
      position?: number | null;
    };
    GetItemDetailsV2VariationPriceDto: {
      /** Format: int64 */
      id?: number | null;
      is_deleted?: boolean;
      /** Format: int64 */
      item_id?: number | null;
      /** Format: int64 */
      platform_id?: number;
      /** Format: int32 */
      platform_type?: number;
      /**
       * Format: double
       * @description Price without VAT and discounts
       */
      original_price?: number | null;
      /**
       * Format: double
       * @description Price with VAT and discounts
       */
      final_price?: number | null;
      /** Format: int64 */
      merchant_selected_discount_id?: number | null;
      currency?: string | null;
      /** Format: int64 */
      variation_id?: number | null;
      is_visible?: boolean | null;
      /** Format: int32 */
      pricing_index?: number | null;
      /**
       * Format: double
       * @description Price without VAT with discounts
       */
      final_price_no_vat?: number | null;
      final_price_discount?: components["schemas"]["GetItemDetailsV2DiscountDto"];
      merchant_selected_discount?: components["schemas"]["GetItemDetailsV2DiscountDto"];
    };
    GetItemDetailsV2VariationTypeDto: {
      /** Format: int64 */
      id?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Color, 2 = Size, 3 = Fabrics, 4 = Material, 5 = Dimensions, 6 = Height, 7 = Lenght, 8 = Diameter, 9 = Weight, 10 = Capacity, 11 = Storage, 12 = WarrantyPeriod, 13 = Custom
       */
      type?: number | null;
      name?: string | null;
      subvariation_types?:
        | components["schemas"]["GetItemDetailsV2VariationTypeSubvariationDto"][]
        | null;
    };
    GetItemDetailsV2VariationTypeSubvariationDto: {
      /** Format: int64 */
      id?: number | null;
      name?: string | null;
    };
    GetItemLinkedObjectsQueryResponse: {
      linked_promocodes?: string[] | null;
      linked_upsells?: string[] | null;
      linked_bundles?: string[] | null;
    };
    GetItemsByIdsPostQuery: {
      item_ids?: number[] | null;
      /** Format: int32 */
      page_number?: number;
      /** Format: int32 */
      page_size?: number;
    };
    GetItemsByNameQueryDto: {
      /** Format: int64 */
      id?: number;
      /** Format: int64 */
      category_id?: number | null;
      name?: string | null;
      /** Format: int64 */
      parent_category_id?: number | null;
      image_guid?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Physical, 2 = Service, 3 = Bundle
       */
      type?: number | null;
    };
    GetItemsByNameQueryDtoPaginatedList: {
      items?: components["schemas"]["GetItemsByNameQueryDto"][] | null;
      /** Format: int32 */
      pageIndex?: number;
      /** Format: int32 */
      totalPages?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      pageSize?: number;
      hasPreviousPage?: boolean;
      hasNextPage?: boolean;
    };
    GetItemsCountByParentCategoryQueryResponseDto: {
      /** Format: int64 */
      items_cnt?: number | null;
    };
    GetItemsListPostQuery: {
      /** Format: int32 */
      page_number?: number;
      /** Format: int32 */
      page_size?: number;
      /** Format: int64 */
      outlet_id?: number;
      category_guid?: string | null;
      /** Format: int64 */
      category_id?: number;
      /** Format: int64 */
      discount_id?: number;
      name?: string | null;
      category_name?: string | null;
      /** Format: int32 */
      unit_type?: number | null;
      /** Format: int64 */
      date_from?: number | null;
      /** Format: int64 */
      date_to?: number | null;
      platform_ids?: number[] | null;
      /** Format: int32 */
      platform_type?: number | null;
      language?: string | null;
      is_in_stock?: boolean | null;
      /** Format: int32 */
      risk_status?: number | null;
      /** Format: int32 */
      risk_substatus?: number | null;
      is_checked?: boolean | null;
      /** Format: int64 */
      last_edit_from?: number | null;
      /** Format: int64 */
      last_edit_to?: number | null;
      /** Format: int32 */
      type?: number | null;
      /** Format: int64 */
      checked_from?: number | null;
      /** Format: int64 */
      checked_to?: number | null;
      checked_by_user_ids?: number[] | null;
      /** Format: int32 */
      product_type?: number | null;
      /** Format: int64 */
      item_id?: number | null;
      /** Format: int64 */
      loginId?: number;
      /** Format: int64 */
      walletId?: number;
      tid?: string | null;
    };
    GetItemsListPostQueryBundleItemDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      assigned_item_id?: number | null;
      /** Format: int32 */
      quantity?: number;
      /** Format: int32 */
      order_position?: number | null;
      /** Format: int32 */
      in_stock?: number | null;
      is_stock_managed?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Physical, 2 = Service, 3 = Bundle
       */
      type?: number | null;
      bundle_variations?:
        | components["schemas"]["GetItemsListPostQueryBundleItemVariationDto"][]
        | null;
    };
    GetItemsListPostQueryBundleItemVariationDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      variation_id?: number | null;
      /** Format: int32 */
      quantity?: number;
      /** Format: int32 */
      in_stock?: number | null;
    };
    GetItemsListPostQueryCategoryDto: {
      /** Format: int64 */
      id?: number;
      /** Format: int64 */
      parent_category_id?: number | null;
      parent_category_name?: string | null;
      /** Format: int64 */
      discount_id?: number | null;
      name?: string | null;
      is_deleted?: boolean;
      guid?: string | null;
    };
    GetItemsListPostQueryDiscountDto: {
      /** Format: int64 */
      id?: number;
      name?: string | null;
      /** Format: double */
      amount?: number;
      /** @description Can be either currency or % */
      currency?: string | null;
      is_deleted?: boolean;
    };
    GetItemsListPostQueryIsCheckedHistoryDto: {
      /** Format: int64 */
      id?: number;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      dt_modified?: number | null;
      /** Format: int64 */
      bot_user_id?: number | null;
      is_checked_old?: boolean | null;
      is_checked_new?: boolean | null;
    };
    GetItemsListPostQueryItemDto: {
      /** Format: int64 */
      id?: number;
      /** Format: int64 */
      category_id?: number | null;
      name?: string | null;
      /** Format: int64 */
      outlet_id?: number | null;
      sku?: string | null;
      /**
       * Format: double
       * @description Price without VAT and discounts
       */
      original_price?: number | null;
      /**
       * Format: double
       * @description Price with VAT and discounts
       */
      final_price?: number | null;
      currency?: string | null;
      /** Format: int32 */
      in_stock?: number | null;
      image_guid?: string | null;
      is_deleted?: boolean;
      /** Format: int64 */
      login_id?: number;
      /** Format: int64 */
      wallet_id?: number;
      tid?: string | null;
      /** Format: int64 */
      discount_id?: number | null;
      /** Format: int32 */
      unit_type?: number | null;
      description?: string | null;
      /** Format: double */
      vat?: number | null;
      /** Format: double */
      vat_value?: number | null;
      guid?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Physical, 2 = Viber
       */
      outlet_type?: number | null;
      multiple_prices?: boolean;
      multiple_languages?: boolean;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Physical, 2 = Service, 3 = Bundle
       */
      type?: number | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      created_on?: number;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      modified?: number;
      /** Format: double */
      category_discount_amount?: number | null;
      category_discount_currency?: string | null;
      /** Format: double */
      parent_category_discount_amount?: number | null;
      parent_category_discount_currency?: string | null;
      /** Format: int64 */
      parent_category_id?: number | null;
      parent_category_name?: string | null;
      is_stock_managed?: boolean | null;
      /** Format: int32 */
      stock_alert_number?: number | null;
      is_shippable?: boolean | null;
      barcode?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Draft, 2 = Pending, 3 = Active, 4 = Deleted, 5 = Rejected, 6 = ForRiskCheck, 7 = RequestInfrormation, 8 = ForAdittionalRiskCheck, 9 = ForCorrection
       */
      risk_status?: number | null;
      risk_status_description?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = IncompleteIncorrectDescription, 2 = UnrealisticPrice, 3 = InappropriateImages, 4 = MisleadingInformation, 5 = Other, 6 = Unallowed, 7 = NoLicenceProvided
       */
      risk_substatus?: number | null;
      /** Format: int64 */
      weight?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Kg, 2 = Lbs
       */
      weight_type?: number | null;
      multiple_pictures?: boolean | null;
      is_checked?: boolean | null;
      multiple_variations?: boolean | null;
      stores_prices_vary?: boolean | null;
      stores_quantities_vary?: boolean | null;
      stores_skus_vary?: boolean | null;
      store_barcodes_vary?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Generic, 2 = Terminal, 3 = Warranty
       */
      product_type?: number | null;
      is_overview_enabled?: boolean | null;
      has_precart_upsells?: boolean | null;
      has_incart_upsells?: boolean | null;
      /** Format: double */
      oss_vat?: number | null;
      is_for_sale?: boolean;
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = Products, 1 = Services, 2 = Mixed
       */
      bundle_items_type?: number | null;
      caregory?: components["schemas"]["GetItemsListPostQueryCategoryDto"];
      discount?: components["schemas"]["GetItemsListPostQueryDiscountDto"];
      pictures?: components["schemas"]["ItemPictureDto"][] | null;
      /** @description Relevant only if multiple_prices = true */
      prices?:
        | components["schemas"]["GetItemsListPostQueryItemPriceDto"][]
        | null;
      /** @description Relevant only if multiple_languages = true */
      languages?:
        | components["schemas"]["GetItemsListPostQueryItemLanguageDto"][]
        | null;
      /** @description Relevant only if multiple_variations = true */
      variations?:
        | components["schemas"]["GetItemsListPostQueryItemVariationDto"][]
        | null;
      is_checked_history?:
        | components["schemas"]["GetItemsListPostQueryIsCheckedHistoryDto"][]
        | null;
      /** @description Relevant only when type = Bundle */
      bundle_items?:
        | components["schemas"]["GetItemsListPostQueryBundleItemDto"][]
        | null;
    };
    GetItemsListPostQueryItemDtoPaginatedList: {
      items?: components["schemas"]["GetItemsListPostQueryItemDto"][] | null;
      /** Format: int32 */
      pageIndex?: number;
      /** Format: int32 */
      totalPages?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      pageSize?: number;
      hasPreviousPage?: boolean;
      hasNextPage?: boolean;
    };
    GetItemsListPostQueryItemLanguageDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      item_id?: number | null;
      language?: string | null;
      item_name?: string | null;
      item_description?: string | null;
    };
    GetItemsListPostQueryItemPriceDto: {
      /** Format: int64 */
      id?: number | null;
      is_deleted?: boolean;
      /** Format: int64 */
      item_id?: number | null;
      /** Format: int64 */
      platform_id?: number;
      /** Format: int32 */
      platform_type?: number;
      /**
       * Format: double
       * @description Price without VAT and discounts
       */
      original_price?: number | null;
      /**
       * Format: double
       * @description Price with VAT and discounts
       */
      final_price?: number | null;
      /** Format: int64 */
      merchant_selected_discount_id?: number | null;
      final_price_discount?: components["schemas"]["GetItemsListPostQueryDiscountDto"];
      merchant_selected_discount?: components["schemas"]["GetItemsListPostQueryDiscountDto"];
      currency?: string | null;
      is_visible?: boolean | null;
      /** Format: int32 */
      pricing_index?: number | null;
      /**
       * Format: double
       * @description Price without VAT with discounts
       */
      final_price_no_vat?: number | null;
    };
    GetItemsListPostQueryItemSubvariationDto: {
      /** Format: int64 */
      id?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Color, 2 = Size, 3 = Fabrics, 4 = Material, 5 = Dimensions, 6 = Height, 7 = Lenght, 8 = Diameter, 9 = Weight, 10 = Capacity, 11 = Storage, 12 = WarrantyPeriod, 13 = Custom
       */
      type?: number | null;
      subvariation?: string | null;
    };
    GetItemsListPostQueryItemVariationDto: {
      /** Format: int64 */
      id?: number | null;
      barcode?: string | null;
      sku?: string | null;
      /** Format: int32 */
      in_stock?: number | null;
      subvariations?:
        | components["schemas"]["GetItemsListPostQueryItemSubvariationDto"][]
        | null;
      variation_pictures?:
        | components["schemas"]["GetItemsListPostQueryItemVariationPictureDto"][]
        | null;
      variation_prices?:
        | components["schemas"]["GetItemsListPostQueryVariationPriceDto"][]
        | null;
    };
    GetItemsListPostQueryItemVariationPictureDto: {
      /** Format: int64 */
      id?: number | null;
      image_guid?: string | null;
      /** Format: int32 */
      position?: number | null;
    };
    GetItemsListPostQueryVariationPriceDto: {
      /** Format: int64 */
      id?: number | null;
      is_deleted?: boolean;
      /** Format: int64 */
      item_id?: number | null;
      /** Format: int64 */
      platform_id?: number;
      /** Format: int32 */
      platform_type?: number;
      /**
       * Format: double
       * @description Price without VAT and discounts
       */
      original_price?: number | null;
      /**
       * Format: double
       * @description Price with VAT and discounts
       */
      final_price?: number | null;
      /** Format: int64 */
      merchant_selected_discount_id?: number | null;
      final_price_discount?: components["schemas"]["GetItemsListPostQueryDiscountDto"];
      merchant_selected_discount?: components["schemas"]["GetItemsListPostQueryDiscountDto"];
      currency?: string | null;
      /** Format: int64 */
      variation_id?: number | null;
      is_visible?: boolean | null;
      /** Format: int32 */
      pricing_index?: number | null;
      /**
       * Format: double
       * @description Price without VAT with discounts
       */
      final_price_no_vat?: number | null;
    };
    GetLinkedUpsellAndPromocodesToPricingQueryResponse: {
      linked_promocodes?: string[] | null;
      linked_upsells?: string[] | null;
    };
    GetOrderDetailsCancellationReasonDto: {
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Generic, 2 = MyPos
       */
      store_type?: number;
      reason?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = System, 2 = Buyer, 3 = Store, 4 = Delivery
       */
      group_type?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Auto, 2 = Manually
       */
      cancellation_type?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = MyPosSystemCancelled, 2 = NonMyPosSystemCancelled, 3 = MyPosBuyerCancelled, 4 = NonMyPosBuyerCancelled, 5 = MyPosBuyerRequestedByPhoneEmail, 6 = MyPosBuyerReturnedIn60Days, 7 = MyPosBuyerReturnedAfter60Days, 8 = MyPosBuyerNotABusiness, 9 = MyPosBuyerVerificationDeclined, 10 = MyPosBuyerRequestedVerificationTooSlow, 11 = MyPosStoreItemsOutOfStock, 12 = MyPosStoreDuplicateOnlineOrder, 13 = MyPosStoreDuplicateWithOfflineOrder, 14 = MyPosDeliveryUnsuccessfulOrDeclined, 15 = MyPosDeliveryTakinTooLongOrOther, 16 = NonMyPosBuyerRequestedByPhoneEmail, 17 = NonMyPosBuyerReturnedItems, 18 = NonMyPosStoreItemsOutOfStock, 19 = NonMyPosStoreDuplicateOnlineOrder, 20 = NonMyPosDeliveryUnsuccessfulOrDeclined, 21 = NonMyPosDeliveryTakinTooLongOrOther
       */
      reason_type?: number;
      /** Format: int64 */
      dt_added?: number;
    };
    GetOrderDetailsQueryBundleItemDto: {
      /** Format: int64 */
      item_id?: number | null;
      /** Format: double */
      quantity?: number | null;
      name?: string | null;
      image_guid?: string | null;
      variations?:
        | components["schemas"]["GetOrderDetailsQueryVariationDto"][]
        | null;
    };
    GetOrderDetailsQueryClientDto: {
      /** Format: int64 */
      id?: number;
      name?: string | null;
      family_name?: string | null;
      email?: string | null;
      gsm?: string | null;
    };
    GetOrderDetailsQueryOrderDto: {
      /** Format: int64 */
      id?: number;
      country?: string | null;
      city?: string | null;
      address?: string | null;
      post_code?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Pending, 2 = Confirmed, 3 = Completed, 4 = Cancelled, 5 = Shipped, 6 = ReadyForPickup
       */
      status?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Courier, 2 = PickUp, 3 = NoDelivery
       */
      delivery_method?: number | null;
      /** Format: int64 */
      store_id?: number | null;
      is_guest?: boolean | null;
      guest_name?: string | null;
      guest_family_name?: string | null;
      guest_email?: string | null;
      guest_gsm?: string | null;
      guest_language?: string | null;
      store_name?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Generic, 2 = MyPos
       */
      store_type?: number | null;
      is_referral_bonus_used?: boolean | null;
      is_promocode_used?: boolean | null;
      is_stl?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = VatIncluded, 2 = VatExcluded, 3 = DontShowVat
       */
      vat_display_type?: number | null;
      can_update_cancellation_reason?: boolean | null;
      cancellation_reasons?:
        | components["schemas"]["GetOrderDetailsCancellationReasonDto"][]
        | null;
      sale?: components["schemas"]["GetOrderDetailsQuerySaleDto"];
      client?: components["schemas"]["GetOrderDetailsQueryClientDto"];
      promocode?: components["schemas"]["GetOrderDetailsQueryPromocodeDto"];
      shipping?: components["schemas"]["GetOrderDetailsQueryShippingDto"];
    };
    GetOrderDetailsQueryPaymentMethodDto: {
      /** Format: int64 */
      id?: number;
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = Cash, 1 = Card, 2 = Mixed
       */
      payment_method?: number | null;
      /** Format: double */
      amount?: number | null;
      currency?: string | null;
      /** Format: double */
      change?: number | null;
      card_brand?: string | null;
      masked_pan?: string | null;
      card_stan?: string | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      dttm_card?: number | null;
      payment_reference?: string | null;
      rrn?: string | null;
      /** Format: int64 */
      transaction_id?: number;
      payinapi_id?: string | null;
      ideal_payment_id?: string | null;
    };
    GetOrderDetailsQueryPromocodeDto: {
      title?: string | null;
      is_free_shipping?: boolean | null;
      is_cart_discount?: boolean | null;
    };
    GetOrderDetailsQuerySaleArticleDto: {
      name?: string | null;
      currency?: string | null;
      /** Format: double */
      single_price?: number | null;
      /** Format: double */
      single_price_with_discount?: number | null;
      /** Format: double */
      total_price?: number | null;
      /** Format: double */
      quantity?: number | null;
      is_free?: boolean;
      image_guid?: string | null;
      variations?:
        | components["schemas"]["GetOrderDetailsQueryVariationDto"][]
        | null;
      child_bundle_articles?:
        | components["schemas"]["GetOrderDetailsQueryBundleItemDto"][]
        | null;
      upsells?: components["schemas"]["GetOrderDetailsQueryUpsellDto"][] | null;
    };
    GetOrderDetailsQuerySaleDto: {
      /** Format: int64 */
      id?: number;
      tid?: string | null;
      /** Format: double */
      amount?: number | null;
      /** Format: double */
      possible_refund?: number | null;
      /** Format: double */
      refunded_amount?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = None, 1 = CashSale, 2 = CardSale, 3 = SplitSale, 4 = Refund
       */
      operation_type?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = None, 1 = Pending, 2 = Declined, 3 = Paid
       */
      status?: number | null;
      /** Format: int64 */
      date_updated?: number | null;
      /** Format: int64 */
      date_created?: number | null;
      /** Format: int64 */
      original_sale_id?: number | null;
      currency?: string | null;
      comment?: string | null;
      sale_number?: string | null;
      /** Format: double */
      sub_total_amount?: number | null;
      include_note?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = None, 1 = MyPos, 2 = MyPosGlass, 5 = SmartTerminals, 6 = OnlineShop
       */
      source?: number | null;
      /** Format: double */
      sale_discount_amount?: number | null;
      discount_name?: string | null;
      /** Format: double */
      total_vat?: number | null;
      /** Format: int64 */
      wallet_id?: number | null;
      sale_articles?:
        | components["schemas"]["GetOrderDetailsQuerySaleArticleDto"][]
        | null;
      payment_methods?:
        | components["schemas"]["GetOrderDetailsQueryPaymentMethodDto"][]
        | null;
      refund_payment_methods?:
        | components["schemas"]["GetOrderDetailsQueryPaymentMethodDto"][]
        | null;
    };
    GetOrderDetailsQueryShippingDto: {
      /** Format: int64 */
      id?: number;
      billing_country?: string | null;
      billing_city?: string | null;
      billing_post_code?: string | null;
      billing_address?: string | null;
      billing_additional_address?: string | null;
      billing_first_name?: string | null;
      billing_last_name?: string | null;
      billing_email?: string | null;
      billing_phone_number?: string | null;
      shipping_country?: string | null;
      shipping_city?: string | null;
      shipping_post_code?: string | null;
      shipping_address?: string | null;
      shipping_additional_address?: string | null;
      shipping_first_name?: string | null;
      shipping_last_name?: string | null;
      shipping_email?: string | null;
      shipping_phone_number?: string | null;
      billing_same_as_shipping?: boolean | null;
      /** Format: int32 */
      delivery_days_from?: number | null;
      /** Format: int32 */
      delivery_days_to?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Courier, 2 = PickUp, 3 = NoDelivery
       */
      delivery_type?: number | null;
      /** Format: double */
      delivery_amount?: number | null;
      delivery_currency?: string | null;
      is_invoice?: boolean | null;
      is_vat_registered?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = PrivateIndividual, 2 = Company
       */
      invoice_type?: number | null;
      invoice_certified_email?: string | null;
      invoice_sdi_code?: string | null;
      invoice_vat_number?: string | null;
      invoice_personal_number?: string | null;
      invoice_company_name?: string | null;
      invoice_company_number?: string | null;
      invoice_tax_id?: string | null;
      custom_delivery_type_name?: string | null;
      /** Format: int64 */
      custom_delivery_type_id?: number | null;
      is_custom_fee?: boolean | null;
      is_shipping_business_days?: boolean | null;
      delivery_has_tracking_link?: boolean | null;
      delivery_tracking_link?: string | null;
      should_send_email?: boolean | null;
    };
    GetOrderDetailsQueryUpsellDto: {
      name?: string | null;
      currency?: string | null;
      /** Format: double */
      single_price?: number | null;
      /** Format: double */
      single_price_with_discount?: number | null;
      /** Format: double */
      total_price?: number | null;
      /** Format: double */
      quantity?: number | null;
      is_free?: boolean;
      image_guid?: string | null;
      variations?:
        | components["schemas"]["GetOrderDetailsQueryVariationDto"][]
        | null;
      child_bundle_articles?:
        | components["schemas"]["GetOrderDetailsQueryBundleItemDto"][]
        | null;
    };
    GetOrderDetailsQueryVariationDto: {
      name?: string | null;
      value?: string | null;
    };
    GetPagesSettingsFromMobileQueryDto: {
      /** Format: int32 */
      style?: number;
      logo_guid?: string | null;
      favicon_guid?: string | null;
      notification_bar_is_enabled?: boolean | null;
      notification_bar_text?: string | null;
      main_theme_color?: string | null;
      /** Format: int32 */
      buttons_style?: number | null;
      /** Format: int32 */
      font_family?: number | null;
      facebook?: string | null;
      instagram?: string | null;
      twitter?: string | null;
      country?: string | null;
      city?: string | null;
      zip?: string | null;
      address?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = BasicTheme, 2 = FashionTheme, 3 = HealthyStoreTheme, 4 = МyPos
       */
      template?: number | null;
      email?: string | null;
      mobile_number?: string | null;
      /** Format: int32 */
      default_product_view?: number | null;
      /** Format: int32 */
      menu_position?: number | null;
      /** Format: int32 */
      number_products_view?: number | null;
      /** Format: int32 */
      services_default_sorting_type?: number | null;
      /** Format: int32 */
      products_default_sorting_type?: number | null;
      /** Format: int32 */
      number_of_services_on_row?: number | null;
      /** Format: int32 */
      max_services_per_category?: number | null;
      /** Format: int32 */
      max_products_per_category?: number | null;
      group_products_by_category?: boolean | null;
      group_services_by_category?: boolean | null;
      contact_page_enabled?: boolean;
      home_page_enabled?: boolean;
      contact_page_widgets?: components["schemas"]["WidgetDto"][] | null;
      product_page_widgets?: components["schemas"]["WidgetDto"][] | null;
      service_page_widgets?: components["schemas"]["WidgetDto"][] | null;
    };
    GetRecalculatedProductsByParentCategoryPostQuery: {
      /** Format: int32 */
      page_number?: number;
      /** Format: int32 */
      page_size?: number;
      order_by?: components["schemas"]["OrderBy"];
      /** Format: int64 */
      platform_id?: number | null;
      /**
       * Format: int32
       * @example 1 = Physical, 2 = OnlineShop, 3 = Viber, 4 = Unassigned
       */
      platform_type?: number | null;
      language?: string | null;
      is_in_stock?: boolean | null;
      uncategorized?: boolean | null;
      /** Format: int64 */
      outlet_id?: number;
      /** Format: int32 */
      risk_status?: number | null;
      item_ids?: number[] | null;
      /** @example 1 = Physical, 2 = Service, 3 = Bundle */
      types?: number[] | null;
      max_from_category_ids?: number[] | null;
      /** Format: int32 */
      max_number_from_category?: number | null;
      order_by_language?: string | null;
      is_visible?: boolean | null;
      /** Format: int64 */
      category_id?: number;
      /**
       * Format: int64
       * @description Filters only by main category (NOT by parent)
       */
      main_category_id?: number | null;
      /** Format: int64 */
      discount_id?: number;
      keywords?: string | null;
      /** @description Relevant only when tag keywords is not empty */
      keywords_language?: string | null;
      currency?: string | null;
      excluded_categories?: number[] | null;
      /** @example 0 = Products, 1 = Services, 2 = Mixed */
      bundle_items_types?: number[] | null;
      sort_order_items?: components["schemas"]["SortOrderItemDto"][] | null;
      buyer_country_iso2_code?: string | null;
      seller_country_iso2_code?: string | null;
      client_has_valid_vat_number?: boolean;
      /** @description When true it will return both normal items and bundles which have atleast one bundle item in them */
      exclude_empty_bundles?: boolean | null;
    };
    GetReferralDetailsQueryResponseDto: {
      /** Format: int64 */
      referral_id?: number;
      /** Format: int64 */
      enroll_id?: number;
      is_referral_used?: boolean | null;
      store_discount_currency?: string | null;
      /** Format: double */
      store_discount_amount?: number | null;
      /** Format: int64 */
      mypos_wallet_id?: number | null;
    };
    GetSaleArticleFromCartDeviceInformationDto: {
      device_type?: string | null;
      device_vendor?: string | null;
      browser_name?: string | null;
      browser_version?: string | null;
      os_name?: string | null;
      os_type?: string | null;
    };
    GetSaleArticleFromCartDto: {
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      dt_abandoned?: number | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      dt_created?: number | null;
      /**
       * Format: int32
       * @description Unix timestamp in seconds
       */
      cart_status?: number | null;
      /**
       * Format: int32
       * @description Unix timestamp in seconds
       */
      product_type?: number | null;
      product_name?: string | null;
      /** Format: double */
      quantity?: number | null;
      /** Format: double */
      price?: number | null;
      currency?: string | null;
      buyer_shipping_email_address?: string | null;
      buyer_billing_email_address?: string | null;
      buyer_shipping_phone_number?: string | null;
      buyer_billing_phone_number?: string | null;
      buyer_billing_country?: string | null;
      buyer_preffered_language?: string | null;
      buyer_distributor?: string | null;
      /** Format: int64 */
      client_id?: number | null;
      client_name?: string | null;
      /** Format: int64 */
      store_id?: number | null;
      store_name?: string | null;
      /** Format: int64 */
      wallet_id?: number | null;
      cart_url?: string | null;
      store_url?: string | null;
      device_information?: components["schemas"]["GetSaleArticleFromCartDeviceInformationDto"];
    };
    GetSaleArticleFromCartDtoPaginatedList: {
      items?: components["schemas"]["GetSaleArticleFromCartDto"][] | null;
      /** Format: int32 */
      pageIndex?: number;
      /** Format: int32 */
      totalPages?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      pageSize?: number;
      hasPreviousPage?: boolean;
      hasNextPage?: boolean;
    };
    GetSaleArticlesListPostQuery: {
      /** Format: int32 */
      page_number?: number;
      /** Format: int32 */
      page_size?: number;
      /** Format: int64 */
      order_id?: number | null;
      /** Format: int64 */
      sale_id?: number | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      order_created_from?: number | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      order_created_to?: number | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      order_modified_from?: number | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      order_modified_to?: number | null;
      sale_number?: string | null;
      /** Format: int64 */
      cart_id?: number | null;
      store_ids?: number[] | null;
      store_name?: string | null;
      /**
       * @description LIST, separate elements with comma
       * @example 1 = Pending, 2 = Confirmed, 3 = Completed, 4 = Cancelled, 5 = Shipped, 6 = ReadyForPickup
       */
      order_statuses?: number[] | null;
      /** Format: int64 */
      item_id?: number | null;
      name?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Generic, 2 = Terminal, 3 = Warranty
       */
      product_type?: number | null;
      is_promocode_applied?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Free, 2 = Discounted
       */
      promocode_discount_type?: number | null;
      is_upsell?: boolean | null;
      sku?: string | null;
      note?: string | null;
      /** Format: int64 */
      client_id?: number | null;
      client_name?: string | null;
      is_from_sale?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = None, 1 = MyPos, 2 = MyPosGlass, 5 = SmartTerminals, 6 = OnlineShop
       */
      source?: number | null;
      store_url?: string | null;
      is_paid?: boolean | null;
      is_stl?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Generic, 2 = MyPos
       */
      store_type?: number | null;
      /** Format: int64 */
      promocode_id?: number | null;
      promocode_title?: string | null;
      promocode_campaign?: string | null;
      promocode_code?: string | null;
      is_referral_bonus_used?: boolean | null;
      is_promocode_used?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = None, 1 = CashSale, 2 = CardSale, 3 = SplitSale, 4 = Refund
       */
      operation_type?: number | null;
      masked_pan?: string | null;
      is_ideal_payment?: boolean | null;
      delivery_tracking_link?: string | null;
    };
    GetSaleArticlesListPostQueryDeviceInformationDto: {
      device_type?: string | null;
      device_vendor?: string | null;
      browser_name?: string | null;
      browser_version?: string | null;
      os_name?: string | null;
      os_type?: string | null;
    };
    GetSaleArticlesListPostQueryResponseDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      item_id?: number;
      /**
       * Format: double
       * @description Price with VAT and discount (regular and promocode) for single quantity
       */
      price?: number | null;
      /** Format: double */
      quantity?: number | null;
      name?: string | null;
      currency?: string | null;
      guid?: string | null;
      /**
       * Format: double
       * @description Price with VAT without discount for single quantity
       */
      original_price?: number | null;
      /**
       * Format: double
       * @description Vat amount for signle quantity
       */
      vat_amount?: number | null;
      /**
       * Format: double
       * @description vat_amount * quantity
       */
      total_amount?: number | null;
      sku?: string | null;
      /** Format: int64 */
      variation_id?: number | null;
      /** Format: int64 */
      category_id?: number | null;
      /** @description Indicates if a promocode is specificly applied to this article */
      is_promocode_applied?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Free, 2 = Discounted
       */
      promocode_discount_type?: number | null;
      /**
       * Format: double
       * @description Promocode discount amount for article with VAT for single quantity
       */
      promocode_discount_amount?: number | null;
      promocode_discount_currency?: string | null;
      /** @description Indicates if article is upsell to another article */
      is_upsell?: boolean | null;
      /**
       * Format: int64
       * @description Id of the corresponding upsell
       */
      upsell_id?: number | null;
      /**
       * Format: int64
       * @description Indicates to wich item the upsell is linked to
       */
      parent_item_id?: number | null;
      upsell_name?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = PreCart, 2 = InCart
       */
      upsell_type?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Generic, 2 = Terminal, 3 = Warranty
       */
      product_type?: number | null;
      /**
       * Format: double
       * @description Price without VAT and discounts for signle quantity
       */
      original_price_no_vat?: number | null;
      /**
       * Format: double
       * @description Price with discounts and without VAT for total quantity
       */
      final_price_no_vat?: number | null;
      sale?: components["schemas"]["SaleDto"];
      variations?: components["schemas"]["SaleArticleVariationDto"][] | null;
      details?: components["schemas"]["SaleArticleDetailDto"][] | null;
      device_information?: components["schemas"]["GetSaleArticlesListPostQueryDeviceInformationDto"];
    };
    GetSaleArticlesListPostQueryResponseDtoPaginatedList: {
      items?:
        | components["schemas"]["GetSaleArticlesListPostQueryResponseDto"][]
        | null;
      /** Format: int32 */
      pageIndex?: number;
      /** Format: int32 */
      totalPages?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      pageSize?: number;
      hasPreviousPage?: boolean;
      hasNextPage?: boolean;
    };
    GetSaleArticlesListQueryDeviceInformationDto: {
      device_type?: string | null;
      device_vendor?: string | null;
      browser_name?: string | null;
      browser_version?: string | null;
      os_name?: string | null;
      os_type?: string | null;
    };
    GetSaleArticlesListQueryOrderHistoryDto: {
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Pending, 2 = Confirmed, 3 = Completed, 4 = Cancelled, 5 = Shipped, 6 = ReadyForPickup
       */
      old_status?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Pending, 2 = Confirmed, 3 = Completed, 4 = Cancelled, 5 = Shipped, 6 = ReadyForPickup
       */
      new_status?: number | null;
      /** Format: int64 */
      dt?: number | null;
      /** Format: int64 */
      login_id?: number | null;
    };
    GetSaleArticlesListQueryResponseDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      item_id?: number;
      /**
       * Format: double
       * @description Price with VAT and discount (regular and promocode) for single quantity
       */
      price?: number | null;
      /** Format: double */
      quantity?: number | null;
      name?: string | null;
      currency?: string | null;
      guid?: string | null;
      /**
       * Format: double
       * @description Price with VAT without discount for single quantity
       */
      original_price?: number | null;
      /**
       * Format: double
       * @description Vat amount for signle quantity
       */
      vat_amount?: number | null;
      /**
       * Format: double
       * @description vat_amount * quantity
       */
      total_amount?: number | null;
      sku?: string | null;
      /** Format: int64 */
      variation_id?: number | null;
      /** Format: int64 */
      category_id?: number | null;
      /** @description Indicates if a promocode is specificly applied to this article */
      is_promocode_applied?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Free, 2 = Discounted
       */
      promocode_discount_type?: number | null;
      /**
       * Format: double
       * @description Promocode discount amount for article with VAT for single quantity
       */
      promocode_discount_amount?: number | null;
      promocode_discount_currency?: string | null;
      /** @description Indicates if article is upsell to another article */
      is_upsell?: boolean | null;
      /**
       * Format: int64
       * @description Id of the corresponding upsell
       */
      upsell_id?: number | null;
      /**
       * Format: int64
       * @description Indicates to wich item the upsell is linked to
       */
      parent_item_id?: number | null;
      upsell_name?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = PreCart, 2 = InCart
       */
      upsell_type?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Generic, 2 = Terminal, 3 = Warranty
       */
      product_type?: number | null;
      /**
       * Format: double
       * @description Price without VAT and discounts for signle quantity
       */
      original_price_no_vat?: number | null;
      /**
       * Format: double
       * @description Price with discounts and without VAT for total quantity
       */
      final_price_no_vat?: number | null;
      sale?: components["schemas"]["SaleDto"];
      variations?: components["schemas"]["SaleArticleVariationDto"][] | null;
      details?: components["schemas"]["SaleArticleDetailDto"][] | null;
      device_information?: components["schemas"]["GetSaleArticlesListQueryDeviceInformationDto"];
      order_cancellation_reasons?:
        | components["schemas"]["GetSalesArticlesListQueryOrderCancellationReasonDto"][]
        | null;
      order_history?:
        | components["schemas"]["GetSaleArticlesListQueryOrderHistoryDto"][]
        | null;
    };
    GetSaleArticlesListQueryResponseDtoPaginatedList: {
      items?:
        | components["schemas"]["GetSaleArticlesListQueryResponseDto"][]
        | null;
      /** Format: int32 */
      pageIndex?: number;
      /** Format: int32 */
      totalPages?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      pageSize?: number;
      hasPreviousPage?: boolean;
      hasNextPage?: boolean;
    };
    GetSalesArticlesListQueryOrderCancellationReasonDto: {
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Generic, 2 = MyPos
       */
      store_type?: number;
      reason?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = System, 2 = Buyer, 3 = Store, 4 = Delivery
       */
      group_type?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Auto, 2 = Manually
       */
      cancellation_type?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = MyPosSystemCancelled, 2 = NonMyPosSystemCancelled, 3 = MyPosBuyerCancelled, 4 = NonMyPosBuyerCancelled, 5 = MyPosBuyerRequestedByPhoneEmail, 6 = MyPosBuyerReturnedIn60Days, 7 = MyPosBuyerReturnedAfter60Days, 8 = MyPosBuyerNotABusiness, 9 = MyPosBuyerVerificationDeclined, 10 = MyPosBuyerRequestedVerificationTooSlow, 11 = MyPosStoreItemsOutOfStock, 12 = MyPosStoreDuplicateOnlineOrder, 13 = MyPosStoreDuplicateWithOfflineOrder, 14 = MyPosDeliveryUnsuccessfulOrDeclined, 15 = MyPosDeliveryTakinTooLongOrOther, 16 = NonMyPosBuyerRequestedByPhoneEmail, 17 = NonMyPosBuyerReturnedItems, 18 = NonMyPosStoreItemsOutOfStock, 19 = NonMyPosStoreDuplicateOnlineOrder, 20 = NonMyPosDeliveryUnsuccessfulOrDeclined, 21 = NonMyPosDeliveryTakinTooLongOrOther
       */
      reason_type?: number;
      /** Format: int64 */
      dt_added?: number;
    };
    GetSalesInternalReportClientDto: {
      /** Format: int64 */
      store_id?: number;
      /** Format: int64 */
      id?: number;
      name?: string | null;
      family_name?: string | null;
      is_activated?: boolean;
      email?: string | null;
      gsm?: string | null;
      gsm_prefix?: string | null;
      gsm_country?: string | null;
      language?: string | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      dt_created?: number | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      dt_updated?: number | null;
      /** Format: int32 */
      total_sales?: number | null;
      /** Format: int64 */
      mypos_wallet_id?: number | null;
      client_mypos_detail?: components["schemas"]["GetSalesInternalReportClientMyposDetailDto"];
    };
    GetSalesInternalReportClientMyposDetailDto: {
      /** Format: int64 */
      id?: number;
      /** Format: int64 */
      client_id?: number;
      /** Format: int64 */
      das_distributor_id?: number;
      /** Format: int64 */
      distributor_id?: number | null;
      /** Format: int64 */
      agent_id?: number | null;
      /** Format: int64 */
      enroll_id?: number | null;
    };
    GetSalesInternalReportDeviceInformationDto: {
      device_type?: string | null;
      device_vendor?: string | null;
      browser_name?: string | null;
      browser_version?: string | null;
      os_name?: string | null;
      os_type?: string | null;
    };
    GetSalesInternalReportOrderDasDetailDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      order_id?: number | null;
      /** Format: int64 */
      das_distributor_id?: number | null;
      /** Format: int64 */
      distributor_id?: number | null;
      /** Format: int64 */
      agent_id?: number | null;
      /** Format: int64 */
      enroll_id?: number | null;
      /** Format: int64 */
      das_sale_id?: number | null;
      /** Format: int64 */
      payment_operation_id?: number | null;
      is_stl?: boolean | null;
    };
    GetSalesInternalReportOrderDto: {
      /** Format: int64 */
      id?: number;
      country?: string | null;
      city?: string | null;
      address?: string | null;
      post_code?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Pending, 2 = Confirmed, 3 = Completed, 4 = Cancelled, 5 = Shipped, 6 = ReadyForPickup
       */
      status?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Courier, 2 = PickUp, 3 = NoDelivery
       */
      delivery_method?: number | null;
      /** Format: int64 */
      store_id?: number | null;
      is_guest?: boolean | null;
      guest_name?: string | null;
      guest_family_name?: string | null;
      guest_email?: string | null;
      guest_gsm?: string | null;
      guest_language?: string | null;
      store_name?: string | null;
      store_url?: string | null;
      is_promocode_used?: boolean | null;
      /** Format: int64 */
      order_promocode_id?: number | null;
      /** Format: int32 */
      traffic_source?: number | null;
      tracking_ad_group?: string | null;
      tracking_campaign?: string | null;
      trafic_source_uri?: string | null;
      trafic_source_ref?: string | null;
      /** Format: int32 */
      vat_display_type?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Generic, 2 = MyPos
       */
      store_type?: number | null;
      /** Format: int64 */
      cart_id?: number | null;
      is_referral_bonus_used?: boolean | null;
      is_paid?: boolean | null;
      is_vat_excluded?: boolean | null;
      client_has_valid_vat_number?: boolean | null;
      is_from_email_atuomation?: boolean | null;
      order_promocode?: components["schemas"]["GetSalesInternalReportOrderPromocode"];
      client?: components["schemas"]["GetSalesInternalReportClientDto"];
      shipping?: components["schemas"]["GetSalesInternalReportOrderShipping"];
      das_details?: components["schemas"]["GetSalesInternalReportOrderDasDetailDto"];
      device_information?: components["schemas"]["GetSalesInternalReportDeviceInformationDto"];
      order_cancellation_reasons?:
        | components["schemas"]["GetSalesInternalReportQueryOrderCancellationReasonDto"][]
        | null;
      history?:
        | components["schemas"]["GetSalesInternalReportOrderHistoryDto"][]
        | null;
    };
    GetSalesInternalReportOrderHistoryDto: {
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Pending, 2 = Confirmed, 3 = Completed, 4 = Cancelled, 5 = Shipped, 6 = ReadyForPickup
       */
      old_status?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Pending, 2 = Confirmed, 3 = Completed, 4 = Cancelled, 5 = Shipped, 6 = ReadyForPickup
       */
      new_status?: number | null;
      /** Format: int64 */
      dt?: number | null;
      /** Format: int64 */
      login_id?: number | null;
    };
    GetSalesInternalReportOrderPromocode: {
      /** Format: int64 */
      promocode_id?: number | null;
      code?: string | null;
      title?: string | null;
      is_free_shipping?: boolean | null;
      is_cart_discount?: boolean | null;
      /** Format: double */
      discount_amount?: number | null;
      /** Format: double */
      discount_amount_no_vat?: number | null;
      discount_currency?: string | null;
      campaign_name?: string | null;
      is_subcode?: boolean | null;
      subcode?: string | null;
    };
    GetSalesInternalReportOrderShipping: {
      /** Format: int64 */
      id?: number;
      billing_country?: string | null;
      billing_city?: string | null;
      billing_post_code?: string | null;
      billing_address?: string | null;
      billing_additional_address?: string | null;
      billing_first_name?: string | null;
      billing_last_name?: string | null;
      billing_email?: string | null;
      billing_phone_number?: string | null;
      shipping_country?: string | null;
      shipping_city?: string | null;
      shipping_post_code?: string | null;
      shipping_address?: string | null;
      shipping_additional_address?: string | null;
      shipping_first_name?: string | null;
      shipping_last_name?: string | null;
      shipping_email?: string | null;
      shipping_phone_number?: string | null;
      billing_same_as_shipping?: boolean | null;
      /** Format: int32 */
      delivery_days_from?: number | null;
      /** Format: int32 */
      delivery_days_to?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Courier, 2 = PickUp, 3 = NoDelivery
       */
      delivery_type?: number | null;
      /** Format: double */
      delivery_amount?: number | null;
      delivery_currency?: string | null;
      is_invoice?: boolean | null;
      invoice_company_name?: string | null;
      invoice_company_number?: string | null;
      is_vat_registered?: boolean | null;
      invoice_vat_number?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = PrivateIndividual, 2 = Company
       */
      invoice_type?: number | null;
      invoice_billing_country?: string | null;
      invoice_personal_number?: string | null;
      is_shipping_business_days?: boolean | null;
      invoice_tax_id?: string | null;
      invoice_certified_email?: string | null;
      invoice_sdi_code?: string | null;
      delivery_has_tracking_link?: boolean | null;
      delivery_tracking_link?: string | null;
      should_send_email?: boolean | null;
      custom_delivery_type_name?: string | null;
      /** Format: int64 */
      custom_delivery_type_id?: number | null;
      is_custom_fee?: boolean | null;
    };
    GetSalesInternalReportPaymentMethodDto: {
      /** Format: int64 */
      id?: number;
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = Cash, 1 = Card, 2 = Mixed
       */
      payment_method?: number | null;
      /** Format: double */
      amount?: number | null;
      currency?: string | null;
      /** Format: double */
      change?: number | null;
      card_brand?: string | null;
      masked_pan?: string | null;
      card_stan?: string | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      dttm_card?: number | null;
      payment_reference?: string | null;
      rrn?: string | null;
      /** Format: int64 */
      transaction_id?: number;
      payinapi_id?: string | null;
      ideal_payment_id?: string | null;
    };
    GetSalesInternalReportQueryOrderCancellationReasonDto: {
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Generic, 2 = MyPos
       */
      store_type?: number;
      reason?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = System, 2 = Buyer, 3 = Store, 4 = Delivery
       */
      group_type?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Auto, 2 = Manually
       */
      cancellation_type?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = MyPosSystemCancelled, 2 = NonMyPosSystemCancelled, 3 = MyPosBuyerCancelled, 4 = NonMyPosBuyerCancelled, 5 = MyPosBuyerRequestedByPhoneEmail, 6 = MyPosBuyerReturnedIn60Days, 7 = MyPosBuyerReturnedAfter60Days, 8 = MyPosBuyerNotABusiness, 9 = MyPosBuyerVerificationDeclined, 10 = MyPosBuyerRequestedVerificationTooSlow, 11 = MyPosStoreItemsOutOfStock, 12 = MyPosStoreDuplicateOnlineOrder, 13 = MyPosStoreDuplicateWithOfflineOrder, 14 = MyPosDeliveryUnsuccessfulOrDeclined, 15 = MyPosDeliveryTakinTooLongOrOther, 16 = NonMyPosBuyerRequestedByPhoneEmail, 17 = NonMyPosBuyerReturnedItems, 18 = NonMyPosStoreItemsOutOfStock, 19 = NonMyPosStoreDuplicateOnlineOrder, 20 = NonMyPosDeliveryUnsuccessfulOrDeclined, 21 = NonMyPosDeliveryTakinTooLongOrOther
       */
      reason_type?: number;
      /** Format: int64 */
      dt_added?: number;
    };
    GetSalesInternalReportSaleArticleDetailDto: {
      note?: string | null;
      article_hash?: string | null;
      article_parent_hash?: string | null;
    };
    GetSalesInternalReportSaleArticleDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      item_id?: number;
      /**
       * Format: double
       * @description Price with VAT and discount (regular and promocode) for single quantity
       */
      price?: number | null;
      /** Format: double */
      quantity?: number | null;
      name?: string | null;
      currency?: string | null;
      guid?: string | null;
      /**
       * Format: double
       * @description Price with VAT without discount for single quantity
       */
      original_price?: number | null;
      /**
       * Format: double
       * @description Vat amount for signle quantity
       */
      vat_amount?: number | null;
      /**
       * Format: double
       * @description vat_amount * quantity
       */
      total_vat_amount?: number | null;
      sku?: string | null;
      /** Format: int64 */
      variation_id?: number | null;
      /** Format: int64 */
      category_id?: number | null;
      /** @description Indicates if a promocode is specificly applied to this article */
      is_promocode_applied?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Free, 2 = Discounted
       */
      promocode_discount_type?: number | null;
      /**
       * Format: double
       * @description Promocode discount amount for article with VAT for single quantity
       */
      promocode_discount_amount?: number | null;
      promocode_discount_currency?: string | null;
      /**
       * Format: double
       * @description Promocode discount amount for article without VAT for single quantity
       */
      promocode_discount_amount_no_vat?: number | null;
      /** @description Indicates if article is upsell to another article */
      is_upsell?: boolean | null;
      /**
       * Format: int64
       * @description Id of the corresponding upsell
       */
      upsell_id?: number | null;
      /** Format: int64 */
      parent_item_id?: number | null;
      upsell_name?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = PreCart, 2 = InCart
       */
      upsell_type?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Generic, 2 = Terminal, 3 = Warranty
       */
      product_type?: number | null;
      /**
       * Format: double
       * @description Price without VAT and discounts for signle quantity
       */
      original_price_no_vat?: number | null;
      /**
       * Format: double
       * @description Price with discounts and without VAT for total quantity
       */
      final_price_no_vat?: number | null;
      /**
       * Format: double
       * @description (Price with VAT without discounts) - (price with VAT and regular discounts)
       */
      discount_amount?: number | null;
      /**
       * Format: double
       * @description (Rounded original_price_no_vat) - (price without VAT with regular discounts for single quantity)
       */
      discount_amount_no_vat?: number | null;
      is_shippable?: boolean | null;
      is_stock_managed?: boolean | null;
      /** Format: int32 */
      in_stock?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Physical, 2 = Service, 3 = Bundle
       */
      type?: number | null;
      /**
       * Format: double
       * @description Price with VAT and regular discount for total quantity
       */
      original_final_price?: number | null;
      /**
       * Format: double
       * @description Price without VAT and regular discount for total quantity
       */
      original_final_price_no_vat?: number | null;
      /** Format: int64 */
      parent_bundle_article_id?: number | null;
      variations?:
        | components["schemas"]["GetSalesInternalReportSaleArticleVariationDto"][]
        | null;
      details?:
        | components["schemas"]["GetSalesInternalReportSaleArticleDetailDto"][]
        | null;
    };
    GetSalesInternalReportSaleArticleVariationDto: {
      /** Format: int64 */
      id?: number;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Color, 2 = Size, 3 = Fabrics, 4 = Material, 5 = Dimensions, 6 = Height, 7 = Lenght, 8 = Diameter, 9 = Weight, 10 = Capacity, 11 = Storage, 12 = WarrantyPeriod, 13 = Custom
       */
      type?: number | null;
      type_name?: string | null;
      description?: string | null;
    };
    GetSalesInternalReportSaleDto: {
      /** Format: int64 */
      sale_id?: number;
      tid?: string | null;
      /** Format: double */
      amount?: number | null;
      /** Format: double */
      refunded_amount?: number | null;
      /** Format: double */
      possible_refund?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = None, 1 = CashSale, 2 = CardSale, 3 = SplitSale, 4 = Refund
       */
      operation_type?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = None, 1 = Pending, 2 = Declined, 3 = Paid
       */
      status?: number | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      date_updated?: number | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      date_created?: number | null;
      /**
       * Format: int64
       * @description Indicates that this sale is refund to sale with id = original_sale_id
       */
      original_sale_id?: number | null;
      currency?: string | null;
      comment?: string | null;
      sale_number?: string | null;
      /** Format: double */
      sub_total_amount?: number | null;
      /** Format: double */
      sale_discount_amount?: number | null;
      stan?: string | null;
      include_note?: boolean | null;
      discount_name?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = None, 1 = MyPos, 2 = MyPosGlass, 5 = SmartTerminals, 6 = OnlineShop
       */
      source?: number | null;
      sale_articles?:
        | components["schemas"]["GetSalesInternalReportSaleArticleDto"][]
        | null;
      payment_methods?:
        | components["schemas"]["GetSalesInternalReportPaymentMethodDto"][]
        | null;
      order?: components["schemas"]["GetSalesInternalReportOrderDto"];
      reference_number?: string | null;
      operator_code?: string | null;
      /** Format: int32 */
      reference_number_type?: number;
      /** Format: int64 */
      wallet_id?: number | null;
      /** Format: double */
      total_vat?: number | null;
      /** Format: double */
      discount_amount_no_vat?: number | null;
    };
    GetSalesInternalReportSaleDtoPaginatedList: {
      items?: components["schemas"]["GetSalesInternalReportSaleDto"][] | null;
      /** Format: int32 */
      pageIndex?: number;
      /** Format: int32 */
      totalPages?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      pageSize?: number;
      hasPreviousPage?: boolean;
      hasNextPage?: boolean;
    };
    GetSoldSaleArticlesListQueryResponseDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      item_id?: number;
      /**
       * Format: double
       * @description Price with VAT and discount (regular and promocode) for single quantity
       */
      price?: number | null;
      /** Format: double */
      quantity?: number | null;
      name?: string | null;
      currency?: string | null;
      guid?: string | null;
      /**
       * Format: double
       * @description Price with VAT without discount for single quantity
       */
      original_price?: number | null;
      /**
       * Format: double
       * @description Vat amount for signle quantity
       */
      vat_amount?: number | null;
      /**
       * Format: double
       * @description vat_amount * quantity
       */
      total_amount?: number | null;
      sku?: string | null;
      /** Format: int64 */
      variation_id?: number | null;
      /** Format: int64 */
      category_id?: number | null;
      /** @description Indicates if a promocode is specificly applied to this article */
      is_promocode_applied?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Free, 2 = Discounted
       */
      promocode_discount_type?: number | null;
      /**
       * Format: double
       * @description Promocode discount amount for article with VAT for single quantity
       */
      promocode_discount_amount?: number | null;
      promocode_discount_currency?: string | null;
      /** @description Indicates if article is upsell to another article */
      is_upsell?: boolean | null;
      /**
       * Format: int64
       * @description Id of the corresponding upsell
       */
      upsell_id?: number | null;
      /**
       * Format: int64
       * @description Indicates to wich item the upsell is linked to
       */
      parent_item_id?: number | null;
      upsell_name?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = PreCart, 2 = InCart
       */
      upsell_type?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Generic, 2 = Terminal, 3 = Warranty
       */
      product_type?: number | null;
      /**
       * Format: double
       * @description Price without VAT and discounts for signle quantity
       */
      original_price_no_vat?: number | null;
      /**
       * Format: double
       * @description Price with discounts and without VAT for total quantity
       */
      final_price_no_vat?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Courier, 2 = PickUp, 3 = NoDelivery
       */
      delivery_method?: number | null;
      delivery_country?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = None, 1 = CashSale, 2 = CardSale, 3 = SplitSale, 4 = Refund
       */
      operation_type?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = None, 1 = MyPos, 2 = MyPosGlass, 5 = SmartTerminals, 6 = OnlineShop
       */
      sale_source?: number | null;
      store_name?: string | null;
      tid?: string | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      sale_dt?: number | null;
      /** Format: int64 */
      sale_id?: number | null;
      /** Format: int64 */
      order_id?: number | null;
      /** Format: int64 */
      platform_id?: number | null;
      sale_number?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = VatIncluded, 2 = VatExcluded, 3 = DontShowVat
       */
      order_vat_display_type?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Physical, 2 = Service, 3 = Bundle
       */
      type?: number | null;
      payment_methods?: components["schemas"]["PaymentMethodDto"][] | null;
      variations?: components["schemas"]["SaleArticleVariationDto"][] | null;
      details?: components["schemas"]["SaleArticleDetailDto"][] | null;
    };
    GetSoldSaleArticlesListQueryResponseDtoPaginatedList: {
      items?:
        | components["schemas"]["GetSoldSaleArticlesListQueryResponseDto"][]
        | null;
      /** Format: int32 */
      pageIndex?: number;
      /** Format: int32 */
      totalPages?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      pageSize?: number;
      hasPreviousPage?: boolean;
      hasNextPage?: boolean;
    };
    GetStoreDetailsDeliveryAreaDto: {
      /** Format: int64 */
      id?: number | null;
      area?: string | null;
    };
    GetStoreDetailsDeliveryLocationCustomDeliveryTypeDto: {
      /** Format: int64 */
      id?: number | null;
      name?: string | null;
      /** Format: int32 */
      delivery_days_from?: number | null;
      /** Format: int32 */
      delivery_days_to?: number | null;
      is_business_days?: boolean | null;
      /** Format: double */
      delivery_amount?: number | null;
    };
    GetStoreDetailsDeliveryLocationExcludedCategoryDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      category_id?: number;
      /** Format: int32 */
      quantity_from?: number;
      /** Format: int32 */
      quantity_to?: number;
      /** Format: double */
      delivery_fee_amount?: number;
    };
    GetStoreDetailsDeliveryLocationExcludedItemDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      item_id?: number;
      /** Format: int32 */
      quantity_from?: number;
      /** Format: int32 */
      quantity_to?: number;
      /** Format: double */
      delivery_fee_amount?: number;
    };
    GetStoreDetailsDeliveryLocationPriceRangeDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      weight_from?: number | null;
      /** Format: int64 */
      weight_to?: number | null;
      /** Format: double */
      order_price_from?: number | null;
      /** Format: double */
      order_price_to?: number | null;
      /** Format: double */
      delivery_price?: number | null;
    };
    GetStoreDetailsOrderStatusDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      store_id?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Pending, 2 = Confirmed, 3 = Completed, 4 = Cancelled, 5 = Shipped, 6 = ReadyForPickup
       */
      type?: number;
      enabled?: boolean | null;
    };
    GetStoreDetailsStoreDeliveryLocationDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      store_id?: number | null;
      city?: string | null;
      /** Format: int32 */
      time_from?: number | null;
      /** Format: int32 */
      time_to?: number | null;
      is_business_days?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Weight, 2 = SalePrice, 3 = DeliveryType
       */
      shipment_calculation_type?: number | null;
      currency?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Kg, 2 = Lbs
       */
      weight_type?: number | null;
      has_free_shipping_over_amount?: boolean | null;
      /** Format: double */
      free_shipping_over_amount?: number | null;
      exclude_fee_if_cart_contains?: boolean | null;
      delivery_areas?:
        | components["schemas"]["GetStoreDetailsDeliveryAreaDto"][]
        | null;
      price_ranges?:
        | components["schemas"]["GetStoreDetailsDeliveryLocationPriceRangeDto"][]
        | null;
      custom_delivery_types?:
        | components["schemas"]["GetStoreDetailsDeliveryLocationCustomDeliveryTypeDto"][]
        | null;
      excluded_categories?:
        | components["schemas"]["GetStoreDetailsDeliveryLocationExcludedCategoryDto"][]
        | null;
      excluded_items?:
        | components["schemas"]["GetStoreDetailsDeliveryLocationExcludedItemDto"][]
        | null;
    };
    GetStoreDetailsStoreDesignSettingsDto: {
      /** Format: int64 */
      id?: number;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = BasicTheme, 2 = FashionTheme, 3 = HealthyStoreTheme, 4 = МyPos
       */
      template?: number | null;
      /** Format: int32 */
      menu_position?: number | null;
      /** Format: int32 */
      button_style?: number | null;
      /** Format: int32 */
      font_family?: number | null;
      /** Format: int32 */
      default_product_view?: number | null;
      /** Format: int32 */
      number_product_view?: number | null;
      menu_color?: string | null;
      overlay_color?: string | null;
      headline_1?: string | null;
      headline_2?: string | null;
      facebook_page?: string | null;
      instagram_page?: string | null;
      twitter_page?: string | null;
      notification_bar_enabled?: boolean | null;
      notification_message?: string | null;
      logo_guid?: string | null;
      header_guid?: string | null;
      show_logo?: boolean | null;
      show_hero_img?: boolean | null;
      /** Format: int32 */
      services_default_sorting_type?: number | null;
      /** Format: int32 */
      products_default_sorting_type?: number | null;
      /** Format: int32 */
      number_of_services_on_row?: number | null;
      /** Format: int32 */
      max_services_per_category?: number | null;
      /** Format: int32 */
      max_products_per_category?: number | null;
      group_products_by_category?: boolean | null;
      group_services_by_category?: boolean | null;
    };
    GetStoreDetailsStoreDto: {
      /** Format: int64 */
      id?: number;
      store_name?: string | null;
      store_title?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = Invalid, 1 = DontShow, 2 = ShowUnavailable, 3 = ShowAvailiable, 4 = Max
       */
      out_of_stock_type?: number | null;
      allow_delivery?: boolean | null;
      allow_pick_up?: boolean | null;
      is_digital_menu?: boolean;
      working_hours_enabled?: boolean | null;
      out_of_working_hours_enabled?: boolean | null;
      time_zone?: string | null;
      customer_service_phone?: string | null;
      customer_service_email?: string | null;
      /** Format: int64 */
      page_settings_id?: number | null;
      merchant_name?: string | null;
      merchant_language?: string | null;
      fin_institution?: string | null;
      allow_registration?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Email, 2 = SocialMedia, 3 = Both
       */
      registration_type?: number | null;
      allow_guest_checkout?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Generic, 2 = MyPos
       */
      store_type?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = VatIncluded, 2 = VatExcluded, 3 = DontShowVat
       */
      vat_display_type?: number | null;
      store_url?: string | null;
      has_multiple_pick_up_locations?: boolean | null;
      has_phone_call_type?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = FreeCall, 2 = CallToTheNationalFixedNetwork, 3 = CallToNationalMobileNetwork, 4 = Custom
       */
      phone_call_type?: number | null;
      design_settings?: components["schemas"]["GetStoreDetailsStoreDesignSettingsDto"];
      delivery_locations?:
        | components["schemas"]["GetStoreDetailsStoreDeliveryLocationDto"][]
        | null;
      order_statuses?:
        | components["schemas"]["GetStoreDetailsOrderStatusDto"][]
        | null;
      working_hours?:
        | components["schemas"]["GetStoreDetailsStoreWorkingHoursDto"][]
        | null;
      terms_of_service?:
        | components["schemas"]["GetStoreDetailsStoreTermsOfServiceDto"][]
        | null;
      languages?:
        | components["schemas"]["GetStoreDetailsStoreLanguageDto"][]
        | null;
      pick_up_locations?:
        | components["schemas"]["GetStoreDetailsStorePickUpLocationDto"][]
        | null;
      phone_call_languages?:
        | components["schemas"]["GetStoreDetailsStorePhoneCallLanguagesDto"][]
        | null;
    };
    GetStoreDetailsStoreLanguageDto: {
      /** Format: int64 */
      id?: number | null;
      language?: string | null;
    };
    GetStoreDetailsStorePhoneCallLanguagesDto: {
      /** Format: int64 */
      id?: number | null;
      language?: string | null;
      description?: string | null;
    };
    GetStoreDetailsStorePickUpLocationDto: {
      /** Format: int64 */
      id?: number | null;
      address?: string | null;
      city?: string | null;
      country?: string | null;
      zip?: string | null;
      is_custom_pick_up_time?: boolean | null;
      working_hours?:
        | components["schemas"]["GetStoreDetailsStorePickupWorkingHoursDto"][]
        | null;
    };
    GetStoreDetailsStorePickupWorkingHoursDto: {
      /** Format: int64 */
      id?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Monday, 2 = Tuesday, 3 = Wednesday, 4 = Thursday, 5 = Friday, 6 = Saturday, 7 = Sunday
       */
      week_day?: number | null;
      /** Format: int32 */
      from_hours?: number | null;
      /** Format: int32 */
      to_hours?: number | null;
      /** Format: int32 */
      from_minutes?: number | null;
      /** Format: int32 */
      to_minutes?: number | null;
      is_pick_up?: boolean | null;
    };
    GetStoreDetailsStoreTermsOfServiceDto: {
      /** Format: int64 */
      id?: number;
      /** Format: int32 */
      type?: number | null;
      /** Format: int64 */
      store_id?: number | null;
      language?: string | null;
    };
    GetStoreDetailsStoreWorkingHoursDto: {
      /** Format: int64 */
      id?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Monday, 2 = Tuesday, 3 = Wednesday, 4 = Thursday, 5 = Friday, 6 = Saturday, 7 = Sunday
       */
      week_day?: number | null;
      /** Format: int32 */
      from_hours?: number | null;
      /** Format: int32 */
      to_hours?: number | null;
      /** Format: int32 */
      from_minutes?: number | null;
      /** Format: int32 */
      to_minutes?: number | null;
    };
    GetStorePagesSelectedColumnsPostQuery: {
      ids?: number[] | null;
      is_home_page_active?: boolean | null;
      is_products_page_active?: boolean | null;
      is_service_page_active?: boolean | null;
      is_contact_us_page_active?: boolean | null;
      is_main_banner_active?: boolean | null;
      is_images_with_text_active?: boolean | null;
      is_featured_products_active?: boolean | null;
      is_browse_categories_active?: boolean | null;
      is_banner_active?: boolean | null;
      is_split_with_image_active?: boolean | null;
      is_services_active?: boolean | null;
      is_contact_us_active?: boolean | null;
      /** Format: int32 */
      page_number?: number;
      /** Format: int32 */
      page_size?: number;
    };
    GetStoreTypesByIdsPostQuery: {
      ids?: number[] | null;
      /** Format: int32 */
      page_number?: number;
      /** Format: int32 */
      page_size?: number;
    };
    GetStoreTypesByIdsPostQueryResponseDto: {
      /** Format: int64 */
      store_id?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Generic, 2 = MyPos
       */
      store_type?: number | null;
    };
    GetStoreTypesByIdsPostQueryResponseDtoPaginatedList: {
      items?:
        | components["schemas"]["GetStoreTypesByIdsPostQueryResponseDto"][]
        | null;
      /** Format: int32 */
      pageIndex?: number;
      /** Format: int32 */
      totalPages?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      pageSize?: number;
      hasPreviousPage?: boolean;
      hasNextPage?: boolean;
    };
    GetStoresDesignTemplatesPostQuery: {
      ids?: number[] | null;
      /** Format: int32 */
      page_number?: number;
      /** Format: int32 */
      page_size?: number;
    };
    IdResponseModel: {
      /** Format: int64 */
      id?: number;
    };
    InternalEmailAutomationEmailSettingsDto: {
      /** Format: int64 */
      id?: number | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      dt_created?: number | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      dt_modified?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Minutes, 2 = Hours, 3 = Days, 4 = Weeks
       */
      timing_type?: number | null;
      /** Format: int32 */
      timing_amount?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = ItemsLeftBehind, 2 = VisitAgain, 3 = FreeProduct, 4 = Discount, 5 = LeaveFeedback, 6 = SameAsPrimary
       */
      type?: number | null;
      is_follow_up?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = First, 2 = Second
       */
      follow_up_type?: number | null;
      /** Format: int64 */
      promocode_id?: number | null;
      /** Format: int32 */
      offer_timing_amount?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Minutes, 2 = Hours, 3 = Days, 4 = Weeks
       */
      offer_timing_type?: number | null;
      feedback_url?: string | null;
      /** Format: double */
      promocode_discount_amount?: number | null;
      /** @description Can be either currency or % */
      promocode_discount_currency?: string | null;
    };
    InternalEmailAutomationTriggerDto: {
      /** Format: int64 */
      id?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = AbandonedCart, 2 = CompletedOrder
       */
      type?: number;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      dt_created?: number | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      dt_modified?: number | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      dt_first_activated?: number | null;
      has_follow_up_email?: boolean | null;
      has_second_follow_up_email?: boolean | null;
      /** Format: int64 */
      wallet_id?: number;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = DontLimit, 2 = LimitOncePerCustomer, 3 = LimitOncePerCustomerPerDay
       */
      frequency_type?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Active, 2 = Disabled
       */
      status?: number | null;
      is_assigned_to_stores?: boolean | null;
      is_draft?: boolean | null;
      /** Format: int32 */
      emails_sent_count?: number | null;
      emails_settings?:
        | components["schemas"]["InternalEmailAutomationEmailSettingsDto"][]
        | null;
      trigger_platforms?:
        | components["schemas"]["InternalEmailAutomationTriggerPlatformDto"][]
        | null;
    };
    InternalEmailAutomationTriggerDtoPaginatedList: {
      items?:
        | components["schemas"]["InternalEmailAutomationTriggerDto"][]
        | null;
      /** Format: int32 */
      pageIndex?: number;
      /** Format: int32 */
      totalPages?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      pageSize?: number;
      hasPreviousPage?: boolean;
      hasNextPage?: boolean;
    };
    InternalEmailAutomationTriggerPlatformDesignDto: {
      /** Format: int64 */
      id?: number | null;
      name?: string | null;
      subject?: string | null;
      reply_to_email?: string | null;
      preview_text?: string | null;
      is_follow_up?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = First, 2 = Second
       */
      follow_up_type?: number | null;
      email_design?: string | null;
      email_tpl_guid?: string | null;
      languages?:
        | components["schemas"]["InternalEmailAutomationTriggerPlatformDesignLanguageDto"][]
        | null;
    };
    InternalEmailAutomationTriggerPlatformDesignLanguageDto: {
      /** Format: int64 */
      id?: number | null;
      language?: string | null;
      email_tpl_guid?: string | null;
      subject?: string | null;
      preview_text?: string | null;
    };
    InternalEmailAutomationTriggerPlatformDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      automation_trigger_id?: number | null;
      /** Format: int64 */
      platform_id?: number | null;
      store_name?: string | null;
      /** Format: int32 */
      platform_type?: number | null;
      designs?:
        | components["schemas"]["InternalEmailAutomationTriggerPlatformDesignDto"][]
        | null;
    };
    IsoCurrencyDto: {
      iso_core?: string | null;
      iso_name?: string | null;
      /** Format: int32 */
      div?: number;
    };
    ItemByParentCategoryDiscountDto: {
      name?: string | null;
      /** Format: double */
      amount?: number;
      /** @description Can be either currency or % */
      currency?: string | null;
    };
    ItemByParentCategoryDto: {
      /** Format: int64 */
      id?: number;
      /** Format: int64 */
      category_id?: number | null;
      name?: string | null;
      /**
       * Format: double
       * @description Price without VAT and discounts
       */
      original_price?: number | null;
      /**
       * Format: double
       * @description Price with VAT and discounts
       */
      final_price?: number | null;
      currency?: string | null;
      barcode?: string | null;
      image_guid?: string | null;
      /** Format: double */
      vat?: number | null;
      /** Format: double */
      vat_value?: number | null;
      /** Format: int64 */
      outlet_id?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Physical, 2 = Viber
       */
      outlet_type?: number | null;
      /** Format: double */
      category_discount_amount?: number | null;
      /** @description Can be either currency or % */
      category_discount_currency?: string | null;
      /** Format: double */
      parent_category_discount_amount?: number | null;
      /** @description Can be either currency or % */
      parent_category_discount_currency?: string | null;
      /** Format: int64 */
      parent_category_id?: number | null;
      parent_category_name?: string | null;
      multiple_languages?: boolean;
      multiple_prices?: boolean;
      /** Format: int32 */
      in_stock?: number | null;
      is_stock_managed?: boolean | null;
      /** Format: int32 */
      stock_alert_number?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Draft, 2 = Pending, 3 = Active, 4 = Deleted, 5 = Rejected, 6 = ForRiskCheck, 7 = RequestInfrormation, 8 = ForAdittionalRiskCheck, 9 = ForCorrection
       */
      risk_status?: number | null;
      risk_status_description?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = IncompleteIncorrectDescription, 2 = UnrealisticPrice, 3 = InappropriateImages, 4 = MisleadingInformation, 5 = Other, 6 = Unallowed, 7 = NoLicenceProvided
       */
      risk_substatus?: number | null;
      /** Format: int64 */
      weight?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Kg, 2 = Lbs
       */
      weight_type?: number | null;
      multiple_variations?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Physical, 2 = Service, 3 = Bundle
       */
      type?: number | null;
      sku?: string | null;
      stores_skus_vary?: boolean | null;
      store_barcodes_vary?: boolean | null;
      category?: components["schemas"]["ItemCategoryDto"];
      discount?: components["schemas"]["ItemByParentCategoryDiscountDto"];
      discount_primary?: components["schemas"]["ItemByParentCategoryDiscountDto"];
      /** @description Relevant when multiple_prices = true */
      prices?: components["schemas"]["ItemByParentCategoryPriceDto"][] | null;
      /** @description Relevant when multiple_languages = true */
      languages?:
        | components["schemas"]["ItemByParentCategoryLanguageDto"][]
        | null;
      /** @description Relevant when multiple_variations = true */
      variations?:
        | components["schemas"]["ItemByParentCategoryVariationDto"][]
        | null;
      pricings?:
        | components["schemas"]["ItemByParentCategoryPricingDto"][]
        | null;
      variations_pricings?:
        | components["schemas"]["ItemByParentCategoryVariationPricingDto"][]
        | null;
    };
    ItemByParentCategoryDtoPaginatedList: {
      items?: components["schemas"]["ItemByParentCategoryDto"][] | null;
      /** Format: int32 */
      pageIndex?: number;
      /** Format: int32 */
      totalPages?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      pageSize?: number;
      hasPreviousPage?: boolean;
      hasNextPage?: boolean;
    };
    ItemByParentCategoryLanguageDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      item_id?: number | null;
      language?: string | null;
      item_name?: string | null;
      item_description?: string | null;
    };
    ItemByParentCategoryPriceDto: {
      /** Format: int64 */
      id?: number | null;
      currency?: string | null;
      /**
       * Format: double
       * @description Price with VAT and discounts
       */
      final_price?: number | null;
      /** Format: int64 */
      item_id?: number | null;
      /** Format: int64 */
      merchant_selected_discount_id?: number | null;
      /**
       * Format: double
       * @description Price without VAT and discounts
       */
      original_price?: number | null;
      /** Format: int64 */
      platform_id?: number;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Physical, 2 = OnlineShop, 3 = Viber, 4 = Unassigned
       */
      platform_type?: number;
      /** Format: int32 */
      pricing_index?: number | null;
      merchant_selected_discount?: components["schemas"]["ItemByParentCategoryDiscountDto"];
    };
    ItemByParentCategoryPricingDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int32 */
      pricing_index?: number | null;
      platforms?:
        | components["schemas"]["ItemByParentCategoryPricingPlatformDto"][]
        | null;
    };
    ItemByParentCategoryPricingPlatformDto: {
      /** Format: int64 */
      platform_id?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Physical, 2 = OnlineShop, 3 = Viber, 4 = Unassigned
       */
      platform_type?: number | null;
    };
    ItemByParentCategorySubvariationDto: {
      /** Format: int64 */
      id?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Color, 2 = Size, 3 = Fabrics, 4 = Material, 5 = Dimensions, 6 = Height, 7 = Lenght, 8 = Diameter, 9 = Weight, 10 = Capacity, 11 = Storage, 12 = WarrantyPeriod, 13 = Custom
       */
      type?: number | null;
      subvariation?: string | null;
    };
    ItemByParentCategoryVariationDto: {
      /** Format: int64 */
      id?: number | null;
      barcode?: string | null;
      sku?: string | null;
      /** Format: int32 */
      in_stock?: number | null;
      subvariations?:
        | components["schemas"]["ItemByParentCategorySubvariationDto"][]
        | null;
      variation_pictures?:
        | components["schemas"]["ItemByParentCategoryVariationPictureDto"][]
        | null;
      variation_prices?:
        | components["schemas"]["ItemByParentCategoryVariationPriceDto"][]
        | null;
    };
    ItemByParentCategoryVariationPictureDto: {
      /** Format: int64 */
      id?: number | null;
      image_guid?: string | null;
      /** Format: int32 */
      position?: number | null;
    };
    ItemByParentCategoryVariationPriceDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      platform_id?: number;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Physical, 2 = OnlineShop, 3 = Viber, 4 = Unassigned
       */
      platform_type?: number;
      /**
       * Format: double
       * @description Price without VAT and discounts
       */
      original_price?: number | null;
      /**
       * Format: double
       * @description Price with VAT and discounts
       */
      final_price?: number | null;
      currency?: string | null;
      is_visible?: boolean | null;
      /** Format: int32 */
      pricing_index?: number | null;
      /** Format: int64 */
      merchant_selected_discount_id?: number | null;
      merchant_selected_discount?: components["schemas"]["ItemByParentCategoryDiscountDto"];
    };
    ItemByParentCategoryVariationPricingDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int32 */
      pricing_index?: number | null;
      platforms?:
        | components["schemas"]["ItemByParentCategoryPricingPlatformDto"][]
        | null;
    };
    ItemCategoryDto: {
      /** Format: int64 */
      id?: number;
      /** Format: int64 */
      parent_category_id?: number | null;
      parent_category_name?: string | null;
      /** Format: int64 */
      discount_id?: number | null;
      name?: string | null;
      is_deleted?: boolean;
      guid?: string | null;
    };
    ItemDiscountDto: {
      /** Format: int64 */
      id?: number;
      name?: string | null;
      /** Format: double */
      amount?: number;
      /** @description Can be either currency or % */
      currency?: string | null;
      is_deleted?: boolean;
    };
    ItemDto: {
      /** Format: int64 */
      id?: number;
      /** Format: int64 */
      category_id?: number | null;
      name?: string | null;
      /** Format: int64 */
      outlet_id?: number | null;
      sku?: string | null;
      /**
       * Format: double
       * @description Price without VAT and discounts
       */
      original_price?: number | null;
      /**
       * Format: double
       * @description Price with VAT and discounts
       */
      final_price?: number | null;
      currency?: string | null;
      /** Format: int32 */
      in_stock?: number | null;
      image_guid?: string | null;
      is_deleted?: boolean;
      /** Format: int64 */
      login_id?: number;
      /** Format: int64 */
      wallet_id?: number;
      tid?: string | null;
      /** Format: int64 */
      discount_id?: number | null;
      /** Format: int32 */
      unit_type?: number | null;
      description?: string | null;
      /** Format: double */
      vat?: number | null;
      /** Format: double */
      vat_value?: number | null;
      guid?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Physical, 2 = Viber
       */
      outlet_type?: number | null;
      multiple_prices?: boolean;
      multiple_languages?: boolean;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Physical, 2 = Service, 3 = Bundle
       */
      type?: number | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      created_on?: number;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      modified?: number;
      /** Format: double */
      category_discount_amount?: number | null;
      category_discount_currency?: string | null;
      /** Format: double */
      parent_category_discount_amount?: number | null;
      parent_category_discount_currency?: string | null;
      /** Format: int64 */
      parent_category_id?: number | null;
      parent_category_name?: string | null;
      is_stock_managed?: boolean | null;
      /** Format: int32 */
      stock_alert_number?: number | null;
      is_shippable?: boolean | null;
      barcode?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Draft, 2 = Pending, 3 = Active, 4 = Deleted, 5 = Rejected, 6 = ForRiskCheck, 7 = RequestInfrormation, 8 = ForAdittionalRiskCheck, 9 = ForCorrection
       */
      risk_status?: number | null;
      risk_status_description?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = IncompleteIncorrectDescription, 2 = UnrealisticPrice, 3 = InappropriateImages, 4 = MisleadingInformation, 5 = Other, 6 = Unallowed, 7 = NoLicenceProvided
       */
      risk_substatus?: number | null;
      /** Format: int64 */
      weight?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Kg, 2 = Lbs
       */
      weight_type?: number | null;
      multiple_pictures?: boolean | null;
      is_checked?: boolean | null;
      multiple_variations?: boolean | null;
      stores_prices_vary?: boolean | null;
      stores_quantities_vary?: boolean | null;
      stores_skus_vary?: boolean | null;
      store_barcodes_vary?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Generic, 2 = Terminal, 3 = Warranty
       */
      product_type?: number | null;
      is_overview_enabled?: boolean | null;
      has_precart_upsells?: boolean | null;
      has_incart_upsells?: boolean | null;
      /** Format: double */
      oss_vat?: number | null;
      is_for_sale?: boolean;
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = Products, 1 = Services, 2 = Mixed
       */
      bundle_items_type?: number | null;
      category?: components["schemas"]["ItemCategoryDto"];
      discount?: components["schemas"]["ItemDiscountDto"];
      discount_primary?: components["schemas"]["ItemDiscountDto"];
      pictures?: components["schemas"]["ItemPictureDto"][] | null;
      /** @description Relevant only if multiple_prices = true */
      prices?: components["schemas"]["ItemPriceDto"][] | null;
      /** @description Relevant only if multiple_languages = true */
      languages?: components["schemas"]["ItemLanguageDto"][] | null;
      variation_types?: components["schemas"]["ItemVariationTypeDto"][] | null;
      /** @description Relevant only if multiple_variations = true */
      variations?: components["schemas"]["ItemVariationDto"][] | null;
      pricings?: components["schemas"]["ItemPricingDto"][] | null;
      variations_pricings?:
        | components["schemas"]["ItemVariationPricingDto"][]
        | null;
      is_checked_history?:
        | components["schemas"]["ItemIsCheckHistoryDto"][]
        | null;
      /** @description Relevant only when type = Bundle */
      bundle_items?: components["schemas"]["BundleItemDto"][] | null;
    };
    ItemDtoPaginatedList: {
      items?: components["schemas"]["ItemDto"][] | null;
      /** Format: int32 */
      pageIndex?: number;
      /** Format: int32 */
      totalPages?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      pageSize?: number;
      hasPreviousPage?: boolean;
      hasNextPage?: boolean;
    };
    ItemIsCheckHistoryDto: {
      /** Format: int64 */
      id?: number;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      dt_modified?: number | null;
      /** Format: int64 */
      bot_user_id?: number | null;
      is_checked_old?: boolean | null;
      is_checked_new?: boolean | null;
    };
    ItemIsCheckedDto: {
      is_checked?: boolean;
      /** Format: int64 */
      item_id?: number;
    };
    ItemLanguageDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      item_id?: number | null;
      language?: string | null;
      item_name?: string | null;
      item_description?: string | null;
    };
    ItemOverviewDto: {
      /** Format: int64 */
      id?: number | null;
      language?: string | null;
      overview_text?: string | null;
      is_default?: boolean | null;
    };
    ItemOverviewDtoPaginatedList: {
      items?: components["schemas"]["ItemOverviewDto"][] | null;
      /** Format: int32 */
      pageIndex?: number;
      /** Format: int32 */
      totalPages?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      pageSize?: number;
      hasPreviousPage?: boolean;
      hasNextPage?: boolean;
    };
    ItemPictureDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      item_id?: number | null;
      image_guid?: string | null;
      /** Format: int32 */
      position?: number;
    };
    ItemPriceDto: {
      /** Format: int64 */
      id?: number | null;
      is_deleted?: boolean;
      /** Format: int64 */
      item_id?: number | null;
      /** Format: int64 */
      platform_id?: number;
      /** Format: int32 */
      platform_type?: number;
      /**
       * Format: double
       * @description Price without VAT and discounts
       */
      original_price?: number | null;
      /**
       * Format: double
       * @description Price with VAT and discounts
       */
      final_price?: number | null;
      /** Format: int64 */
      merchant_selected_discount_id?: number | null;
      final_price_discount?: components["schemas"]["DiscountDto"];
      merchant_selected_discount?: components["schemas"]["DiscountDto"];
      currency?: string | null;
      is_visible?: boolean | null;
      /** Format: int32 */
      pricing_index?: number | null;
      /**
       * Format: double
       * @description Price without VAT with discounts
       */
      final_price_no_vat?: number | null;
    };
    ItemPricingDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int32 */
      pricing_index?: number | null;
      platforms?: components["schemas"]["ItemPricingPlatformDto"][] | null;
    };
    ItemPricingPlatformDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      platform_id?: number | null;
      /** Format: int32 */
      platform_type?: number | null;
    };
    ItemSubvariationDto: {
      /** Format: int64 */
      id?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Color, 2 = Size, 3 = Fabrics, 4 = Material, 5 = Dimensions, 6 = Height, 7 = Lenght, 8 = Diameter, 9 = Weight, 10 = Capacity, 11 = Storage, 12 = WarrantyPeriod, 13 = Custom
       */
      type?: number | null;
      subvariation?: string | null;
    };
    ItemVariationDto: {
      /** Format: int64 */
      id?: number | null;
      barcode?: string | null;
      sku?: string | null;
      /** Format: int32 */
      in_stock?: number | null;
      subvariations?: components["schemas"]["ItemSubvariationDto"][] | null;
      variation_pictures?:
        | components["schemas"]["ItemVariationPictureDto"][]
        | null;
      variation_prices?: components["schemas"]["VariationPriceDto"][] | null;
    };
    ItemVariationPictureDto: {
      /** Format: int64 */
      id?: number | null;
      image_guid?: string | null;
      /** Format: int32 */
      position?: number | null;
    };
    ItemVariationPricingDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int32 */
      pricing_index?: number | null;
      platforms?: components["schemas"]["ItemPricingPlatformDto"][] | null;
    };
    ItemVariationTypeDto: {
      /** Format: int64 */
      id?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Color, 2 = Size, 3 = Fabrics, 4 = Material, 5 = Dimensions, 6 = Height, 7 = Lenght, 8 = Diameter, 9 = Weight, 10 = Capacity, 11 = Storage, 12 = WarrantyPeriod, 13 = Custom
       */
      type?: number | null;
      name?: string | null;
      subvariation_types?:
        | components["schemas"]["ItemVariationTypeSubvariationDto"][]
        | null;
    };
    ItemVariationTypeSubvariationDto: {
      /** Format: int64 */
      id?: number | null;
      name?: string | null;
    };
    LoginCommand: {
      email?: string | null;
      password?: string | null;
      /** Format: int64 */
      store_id?: number;
      is_captcha_passed?: boolean | null;
    };
    LoginMyPosSessionCommand: {
      /** Format: int64 */
      store_id?: number;
      session?: string | null;
      email?: string | null;
      /** Format: int64 */
      mypos_wallet_id?: number | null;
    };
    LoginSocialMediaCommand: {
      /** Format: int64 */
      store_id?: number;
      email?: string | null;
      name?: string | null;
      family_name?: string | null;
      google_id?: string | null;
      facebook_id?: string | null;
      apple_id?: string | null;
      gsm?: string | null;
      gsm_prefix?: string | null;
      gsm_country?: string | null;
      language?: string | null;
    };
    LogoutCommand: Record<string, never>;
    MessageOutDto: {
      /** Format: int64 */
      id?: number;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      dt_created?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = Pending, 1 = Sent, 2 = Charged, 5 = SentToGate, 7 = FailedAtCharge, 8 = FailedAtGate, 9 = Failed
       */
      status?: number | null;
      /**
       * @description ENUM
       * @example 77 = Mail, 83 = SMS
       */
      medium?: string | null;
      recipient?: string | null;
      recipient_provider?: string | null;
      message_type?: string | null;
      message_from?: string | null;
      message_text?: string | null;
      tpl_name?: string | null;
      tpl_data?: string | null;
      language?: string | null;
      /** Format: int64 */
      wallet_id?: number | null;
      reason_tbl?: string | null;
      /** Format: int64 */
      reason_id?: number | null;
      /** Format: int64 */
      gate_message_id?: number | null;
      /** Format: int64 */
      charge_operation_id?: number | null;
    };
    MessageOutDtoPaginatedList: {
      items?: components["schemas"]["MessageOutDto"][] | null;
      /** Format: int32 */
      pageIndex?: number;
      /** Format: int32 */
      totalPages?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      pageSize?: number;
      hasPreviousPage?: boolean;
      hasNextPage?: boolean;
    };
    OperatorsResponseDto: {
      operators?: string[] | null;
    };
    /** @enum {string} */
    OrderBy:
      | "None"
      | "DateAsc"
      | "DateDesc"
      | "PriceDesc"
      | "PriceAsc"
      | "NameAsc"
      | "PriceNoVatAsc"
      | "PriceNoVatDesc"
      | "Relevance"
      | "Custom";
    OrderCancellationReasonDto: {
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Generic, 2 = MyPos
       */
      store_type?: number;
      reason?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = System, 2 = Buyer, 3 = Store, 4 = Delivery
       */
      group_type?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Auto, 2 = Manually
       */
      cancellation_type?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = MyPosSystemCancelled, 2 = NonMyPosSystemCancelled, 3 = MyPosBuyerCancelled, 4 = NonMyPosBuyerCancelled, 5 = MyPosBuyerRequestedByPhoneEmail, 6 = MyPosBuyerReturnedIn60Days, 7 = MyPosBuyerReturnedAfter60Days, 8 = MyPosBuyerNotABusiness, 9 = MyPosBuyerVerificationDeclined, 10 = MyPosBuyerRequestedVerificationTooSlow, 11 = MyPosStoreItemsOutOfStock, 12 = MyPosStoreDuplicateOnlineOrder, 13 = MyPosStoreDuplicateWithOfflineOrder, 14 = MyPosDeliveryUnsuccessfulOrDeclined, 15 = MyPosDeliveryTakinTooLongOrOther, 16 = NonMyPosBuyerRequestedByPhoneEmail, 17 = NonMyPosBuyerReturnedItems, 18 = NonMyPosStoreItemsOutOfStock, 19 = NonMyPosStoreDuplicateOnlineOrder, 20 = NonMyPosDeliveryUnsuccessfulOrDeclined, 21 = NonMyPosDeliveryTakinTooLongOrOther
       */
      reason_type?: number;
      /** Format: int64 */
      dt_added?: number;
    };
    OrderDasDetailDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      order_id?: number | null;
      /** Format: int64 */
      das_distributor_id?: number | null;
      /** Format: int64 */
      distributor_id?: number | null;
      /** Format: int64 */
      agent_id?: number | null;
      /** Format: int64 */
      enroll_id?: number | null;
      /** Format: int64 */
      das_sale_id?: number | null;
      /** Format: int64 */
      payment_operation_id?: number | null;
      is_stl?: boolean | null;
    };
    OrderDto: {
      /** Format: int64 */
      id?: number;
      country?: string | null;
      city?: string | null;
      address?: string | null;
      post_code?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Pending, 2 = Confirmed, 3 = Completed, 4 = Cancelled, 5 = Shipped, 6 = ReadyForPickup
       */
      status?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Courier, 2 = PickUp, 3 = NoDelivery
       */
      delivery_method?: number | null;
      /** Format: int64 */
      store_id?: number | null;
      is_guest?: boolean | null;
      guest_name?: string | null;
      guest_family_name?: string | null;
      guest_email?: string | null;
      guest_gsm?: string | null;
      guest_language?: string | null;
      store_name?: string | null;
      store_url?: string | null;
      is_promocode_used?: boolean | null;
      /** Format: int64 */
      order_promocode_id?: number | null;
      /** Format: int32 */
      traffic_source?: number | null;
      tracking_ad_group?: string | null;
      tracking_campaign?: string | null;
      trafic_source_uri?: string | null;
      trafic_source_ref?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = VatIncluded, 2 = VatExcluded, 3 = DontShowVat
       */
      vat_display_type?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Generic, 2 = MyPos
       */
      store_type?: number | null;
      /** Format: int64 */
      cart_id?: number | null;
      is_referral_bonus_used?: boolean | null;
      is_paid?: boolean | null;
      is_vat_excluded?: boolean | null;
      client_has_valid_vat_number?: boolean | null;
      is_from_email_atuomation?: boolean | null;
      can_update_cancellation_reason?: boolean | null;
      cancellation_reasons?:
        | components["schemas"]["OrderCancellationReasonDto"][]
        | null;
      order_promocode?: components["schemas"]["OrderPromocodeDto"];
      client?: components["schemas"]["ClientDto"];
      shipping?: components["schemas"]["OrderShippingDto"];
      das_details?: components["schemas"]["OrderDasDetailDto"];
      referral_details?: components["schemas"]["OrderReferralDetailDto"];
    };
    OrderPromocodeDto: {
      /** Format: int64 */
      promocode_id?: number | null;
      code?: string | null;
      title?: string | null;
      is_free_shipping?: boolean | null;
      is_cart_discount?: boolean | null;
      /** Format: double */
      discount_amount?: number | null;
      /** Format: double */
      discount_amount_no_vat?: number | null;
      discount_currency?: string | null;
      campaign_name?: string | null;
      is_subcode?: boolean | null;
      subcode?: string | null;
    };
    OrderReferralDetailDto: {
      /** Format: int64 */
      id?: number;
      /** Format: double */
      discount_amount?: number | null;
      currency?: string | null;
      /** Format: int64 */
      referral_id?: number | null;
    };
    OrderShippingDto: {
      /** Format: int64 */
      id?: number;
      billing_country?: string | null;
      billing_city?: string | null;
      billing_post_code?: string | null;
      billing_address?: string | null;
      billing_additional_address?: string | null;
      billing_first_name?: string | null;
      billing_last_name?: string | null;
      billing_email?: string | null;
      billing_phone_number?: string | null;
      shipping_country?: string | null;
      shipping_city?: string | null;
      shipping_post_code?: string | null;
      shipping_address?: string | null;
      shipping_additional_address?: string | null;
      shipping_first_name?: string | null;
      shipping_last_name?: string | null;
      shipping_email?: string | null;
      shipping_phone_number?: string | null;
      billing_same_as_shipping?: boolean | null;
      /** Format: int32 */
      delivery_days_from?: number | null;
      /** Format: int32 */
      delivery_days_to?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Courier, 2 = PickUp, 3 = NoDelivery
       */
      delivery_type?: number | null;
      /** Format: double */
      delivery_amount?: number | null;
      delivery_currency?: string | null;
      is_invoice?: boolean | null;
      invoice_company_name?: string | null;
      invoice_company_number?: string | null;
      is_vat_registered?: boolean | null;
      invoice_vat_number?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = PrivateIndividual, 2 = Company
       */
      invoice_type?: number | null;
      invoice_billing_country?: string | null;
      invoice_personal_number?: string | null;
      is_shipping_business_days?: boolean | null;
      invoice_tax_id?: string | null;
      invoice_certified_email?: string | null;
      invoice_sdi_code?: string | null;
      delivery_has_tracking_link?: boolean | null;
      delivery_tracking_link?: string | null;
      should_send_email?: boolean | null;
      custom_delivery_type_name?: string | null;
      /** Format: int64 */
      custom_delivery_type_id?: number | null;
      is_custom_fee?: boolean | null;
    };
    OssCountrySettingDto: {
      country_iso2_code?: string | null;
      /** Format: double */
      vat?: number;
    };
    OssCountrySettingDtoListResponseModel: {
      items?: components["schemas"]["OssCountrySettingDto"][] | null;
    };
    OutletCountsDto: {
      /** Format: int64 */
      outlet_id?: number | null;
      /** Format: int32 */
      items_count?: number | null;
    };
    PagesSettingsDto: {
      /** Format: int64 */
      id?: number;
      /** @description String containing JSON with pages stting */
      settings?: string | null;
    };
    PagesSettingsLanguageDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      store_id?: number | null;
      language?: string | null;
      component_id?: string | null;
      key?: string | null;
      value?: string | null;
      component_name?: string | null;
    };
    PagesSettingsLanguageDtoPaginatedList: {
      items?: components["schemas"]["PagesSettingsLanguageDto"][] | null;
      /** Format: int32 */
      pageIndex?: number;
      /** Format: int32 */
      totalPages?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      pageSize?: number;
      hasPreviousPage?: boolean;
      hasNextPage?: boolean;
    };
    PagesSettingsTranslationLanguageDto: {
      /** Format: int64 */
      id?: number | null;
      language?: string | null;
      /** Format: int64 */
      store_id?: number | null;
      /** Format: int64 */
      pages_settings_id?: number | null;
    };
    PagesSettingsTranslationLanguageDtoPaginatedList: {
      items?:
        | components["schemas"]["PagesSettingsTranslationLanguageDto"][]
        | null;
      /** Format: int32 */
      pageIndex?: number;
      /** Format: int32 */
      totalPages?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      pageSize?: number;
      hasPreviousPage?: boolean;
      hasNextPage?: boolean;
    };
    PaymentMethodDto: {
      /** Format: int64 */
      id?: number;
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = Cash, 1 = Card, 2 = Mixed
       */
      payment_method?: number | null;
      /** Format: double */
      amount?: number | null;
      currency?: string | null;
      /** Format: double */
      change?: number | null;
      card_brand?: string | null;
      masked_pan?: string | null;
      card_stan?: string | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      dttm_card?: number | null;
      payment_reference?: string | null;
      rrn?: string | null;
      /** Format: int64 */
      transaction_id?: number;
      payinapi_id?: string | null;
      ideal_payment_id?: string | null;
    };
    PaymentMethodDtoListResponseModel: {
      items?: components["schemas"]["PaymentMethodDto"][] | null;
    };
    ProblemDetails: {
      type?: string | null;
      title?: string | null;
      /** Format: int32 */
      status?: number | null;
      detail?: string | null;
      instance?: string | null;
      [key: string]: unknown;
    };
    ProductBundleItemDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      assigned_item_id?: number | null;
      /** Format: double */
      quantity?: number | null;
      /** Format: int32 */
      order_position?: number | null;
      bundle_variations?:
        | components["schemas"]["ProductBundleVariationDto"][]
        | null;
    };
    ProductBundleVariationDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      variation_id?: number | null;
      /** Format: double */
      quantity?: number | null;
    };
    ProductCategoryDto: {
      /** Format: int64 */
      id?: number;
      /** Format: int64 */
      parent_category_id?: number | null;
      parent_category_name?: string | null;
      /** Format: int64 */
      discount_id?: number | null;
      name?: string | null;
      guid?: string | null;
      is_deleted?: boolean;
    };
    ProductDTO: {
      /** Format: int64 */
      id?: number;
      /** Format: int64 */
      category_id?: number | null;
      name?: string | null;
      /** Format: int64 */
      outlet_id?: number | null;
      sku?: string | null;
      /**
       * Format: double
       * @description Price without VAT and discounts
       */
      original_price?: number | null;
      /**
       * Format: double
       * @description Price with VAT and discounts
       */
      final_price?: number | null;
      currency?: string | null;
      /** Format: int32 */
      in_stock?: number | null;
      has_visible_stock?: boolean | null;
      image_guid?: string | null;
      is_deleted?: boolean;
      /** Format: int64 */
      login_id?: number;
      /** Format: int64 */
      wallet_id?: number;
      tid?: string | null;
      /** Format: int64 */
      discount_id?: number | null;
      /** Format: int32 */
      unit_type?: number | null;
      description?: string | null;
      /** Format: double */
      vat?: number | null;
      /** Format: double */
      oss_vat?: number | null;
      /** Format: double */
      vat_value?: number | null;
      guid?: string | null;
      /** Format: int32 */
      outlet_type?: number | null;
      multiple_prices?: boolean;
      multiple_languages?: boolean;
      /** Format: int32 */
      type?: number | null;
      category?: components["schemas"]["ProductCategoryDto"];
      discount?: components["schemas"]["ProductDiscountDto"];
      discount_primary?: components["schemas"]["ProductDiscountDto"];
      /** Format: int64 */
      created_on?: number;
      /** Format: double */
      category_discount_amount?: number | null;
      category_discount_currency?: string | null;
      /** Format: double */
      parent_category_discount_amount?: number | null;
      parent_category_discount_currency?: string | null;
      /** Format: int64 */
      parent_category_id?: number | null;
      parent_category_name?: string | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      modified?: number;
      is_stock_managed?: boolean | null;
      /** Format: int32 */
      stock_alert_number?: number | null;
      is_shippable?: boolean | null;
      barcode?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Draft, 2 = Pending, 3 = Active, 4 = Deleted, 5 = Rejected, 6 = ForRiskCheck, 7 = RequestInfrormation, 8 = ForAdittionalRiskCheck, 9 = ForCorrection
       */
      risk_status?: number | null;
      risk_status_description?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = IncompleteIncorrectDescription, 2 = UnrealisticPrice, 3 = InappropriateImages, 4 = MisleadingInformation, 5 = Other, 6 = Unallowed, 7 = NoLicenceProvided
       */
      risk_substatus?: number | null;
      /** Format: int64 */
      weight?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Kg, 2 = Lbs
       */
      weight_type?: number | null;
      multiple_pictures?: boolean | null;
      is_checked?: boolean | null;
      multiple_variations?: boolean | null;
      stores_prices_vary?: boolean | null;
      stores_quantities_vary?: boolean | null;
      stores_skus_vary?: boolean | null;
      store_barcodes_vary?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Generic, 2 = Terminal, 3 = Warranty
       */
      product_type?: number | null;
      is_overview_enabled?: boolean | null;
      has_precart_upsells?: boolean | null;
      has_incart_upsells?: boolean | null;
      is_for_sale?: boolean;
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = Products, 1 = Services, 2 = Mixed
       */
      bundle_items_type?: number | null;
      pictures?: components["schemas"]["ProductPictureDto"][] | null;
      /** @description Relevant when product does not have variations */
      prices?: components["schemas"]["ProductPriceDto"][] | null;
      languages?: components["schemas"]["ProductLanguageDTO"][] | null;
      variation_types?:
        | components["schemas"]["ProductVariationTypeDto"][]
        | null;
      variations?: components["schemas"]["ProductVariationDto"][] | null;
      pricings?: components["schemas"]["ProductPricingDto"][] | null;
      variations_pricings?:
        | components["schemas"]["ProductVariationPricingDto"][]
        | null;
      reserved_stocks?:
        | components["schemas"]["ProductReservedStockDto"][]
        | null;
      min_max_platform_prices?:
        | components["schemas"]["ProductMinMaxPlatformPriceDto"][]
        | null;
      translation_values?:
        | components["schemas"]["ProductTranslationValuesDto"][]
        | null;
      /** @description Relevant only when type = Bundle */
      bundle_items?: components["schemas"]["ProductBundleItemDto"][] | null;
      /** Format: int32 */
      bundle_items_count?: number;
    };
    ProductDTOPaginatedList: {
      items?: components["schemas"]["ProductDTO"][] | null;
      /** Format: int32 */
      pageIndex?: number;
      /** Format: int32 */
      totalPages?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      pageSize?: number;
      hasPreviousPage?: boolean;
      hasNextPage?: boolean;
    };
    ProductDiscountDto: {
      /** Format: int64 */
      id?: number;
      name?: string | null;
      /** Format: double */
      amount?: number;
      /** @description Either currency or % */
      currency?: string | null;
      is_deleted?: boolean;
      has_validity_period?: boolean | null;
      is_active?: boolean | null;
      /** Format: int64 */
      valid_from?: number | null;
      /** Format: int64 */
      valid_to?: number | null;
      show_validity_info?: boolean | null;
    };
    ProductLanguageDTO: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      item_id?: number | null;
      language?: string | null;
      item_name?: string | null;
      item_description?: string | null;
    };
    ProductMinMaxPlatformPriceDto: {
      /**
       * Format: double
       * @description Min price with VAT and discounts
       */
      min_price?: number;
      /**
       * Format: double
       * @description Max price with VAT and discounts
       */
      max_price?: number;
      /**
       * Format: double
       * @description Max price with discounts and without VAT
       */
      max_price_no_vat?: number;
      /**
       * Format: double
       * @description Min price with discounts and without VAT
       */
      min_price_no_vat?: number;
      currency?: string | null;
      /** Format: int64 */
      platform_id?: number;
      /** Format: int32 */
      platform_type?: number;
      has_visible_price?: boolean;
    };
    ProductPictureDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      item_id?: number | null;
      image_guid?: string | null;
      /** Format: int32 */
      position?: number;
    };
    ProductPriceDto: {
      /** Format: int64 */
      id?: number | null;
      is_deleted?: boolean;
      /** Format: int64 */
      item_id?: number | null;
      /** Format: int64 */
      platform_id?: number;
      /** Format: int32 */
      platform_type?: number;
      /**
       * Format: double
       * @description Price without VAT and discounts
       */
      original_price?: number | null;
      /**
       * Format: double
       * @description Price with VAT and discounts
       */
      final_price?: number | null;
      /** Format: int64 */
      merchant_selected_discount_id?: number | null;
      final_price_discount?: components["schemas"]["ProductDiscountDto"];
      merchant_selected_discount?: components["schemas"]["ProductDiscountDto"];
      currency?: string | null;
      is_visible?: boolean | null;
      /** Format: int32 */
      pricing_index?: number | null;
      /**
       * Format: double
       * @description Price with discount and without VAT
       */
      final_price_no_vat?: number | null;
    };
    ProductPricingDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int32 */
      pricing_index?: number | null;
      /** @description Platforms for wich this pricing is valid */
      platforms?: components["schemas"]["ProductPricingPlatformDto"][] | null;
    };
    ProductPricingPlatformDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      platform_id?: number | null;
      /** Format: int32 */
      platform_type?: number | null;
    };
    ProductReservedStockDto: {
      /** Format: int64 */
      id?: number;
      /** Format: int64 */
      item_id?: number | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      dt_reserved?: number | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      dt_expire?: number | null;
      /**
       * Format: int64
       * @description Sale for wich the stock is reserved
       */
      sale_id?: number | null;
      /** Format: int64 */
      variation_id?: number | null;
      /** Format: int32 */
      quantity?: number | null;
    };
    ProductSubvariationDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int32 */
      type?: number | null;
      subvariation?: string | null;
    };
    ProductTranslationValuesDto: {
      language?: string | null;
      value?: string | null;
    };
    ProductTypesLinkedToPlatformQueryResponseDto: {
      linked_product_types?: number[] | null;
    };
    ProductVariationDto: {
      /** Format: int64 */
      id?: number | null;
      barcode?: string | null;
      sku?: string | null;
      /** Format: int32 */
      in_stock?: number | null;
      subvariations?: components["schemas"]["ProductSubvariationDto"][] | null;
      variation_pictures?:
        | components["schemas"]["ProductVariationPictureDto"][]
        | null;
      variation_prices?:
        | components["schemas"]["ProductVariationPriceDto"][]
        | null;
    };
    ProductVariationPictureDto: {
      /** Format: int64 */
      id?: number | null;
      image_guid?: string | null;
      /** Format: int32 */
      position?: number | null;
    };
    ProductVariationPriceDto: {
      /** Format: int64 */
      id?: number | null;
      is_deleted?: boolean;
      /** Format: int64 */
      item_id?: number | null;
      /** Format: int64 */
      platform_id?: number;
      /** Format: int32 */
      platform_type?: number;
      /**
       * Format: double
       * @description Price without VAT and discounts
       */
      original_price?: number | null;
      /**
       * Format: double
       * @description Price with VAT and discounts
       */
      final_price?: number | null;
      /** Format: int64 */
      merchant_selected_discount_id?: number | null;
      final_price_discount?: components["schemas"]["ProductDiscountDto"];
      merchant_selected_discount?: components["schemas"]["ProductDiscountDto"];
      currency?: string | null;
      /** Format: int64 */
      variation_id?: number | null;
      is_visible?: boolean | null;
      /** Format: int32 */
      pricing_index?: number | null;
      /**
       * Format: double
       * @description Price with discount and without VAT
       */
      final_price_no_vat?: number | null;
    };
    ProductVariationPricingDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int32 */
      pricing_index?: number | null;
      /** @description Platforms for wich this pricing is valid */
      platforms?: components["schemas"]["ProductPricingPlatformDto"][] | null;
    };
    ProductVariationTypeDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int32 */
      type?: number | null;
      name?: string | null;
      subvariation_types?:
        | components["schemas"]["ProductVariationTypeSubvariationDto"][]
        | null;
    };
    ProductVariationTypeSubvariationDto: {
      /** Format: int64 */
      id?: number | null;
      name?: string | null;
    };
    PromocodeAssignedCategoryDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      category_id?: number | null;
    };
    PromocodeAssignedClientDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      client_id?: number | null;
    };
    PromocodeAssignedItemDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      item_id?: number | null;
      /** Format: int64 */
      pricing_id?: number | null;
      variations?:
        | components["schemas"]["PromocodeAssignedItemVariationDto"][]
        | null;
    };
    PromocodeAssignedItemVariationDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      variation_id?: number | null;
      /** Format: int64 */
      variation_pricing_id?: number | null;
    };
    PromocodeAssignedPlatformDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      platform_id?: number | null;
      /** Format: int32 */
      platform_type?: number | null;
    };
    PromocodeCampaignDto: {
      /** Format: int64 */
      id?: number | null;
      name?: string | null;
      promocodes?: components["schemas"]["PromocodeDto"][] | null;
    };
    PromocodeCampaignDtoPaginatedList: {
      items?: components["schemas"]["PromocodeCampaignDto"][] | null;
      /** Format: int32 */
      pageIndex?: number;
      /** Format: int32 */
      totalPages?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      pageSize?: number;
      hasPreviousPage?: boolean;
      hasNextPage?: boolean;
    };
    PromocodeConditionDto: {
      /** Format: int64 */
      id?: number | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      valid_from?: number | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      valid_to?: number | null;
      has_validity_period?: boolean | null;
      /** Format: int32 */
      total_number_of_uses?: number | null;
      /** Format: int32 */
      uses_per_customer?: number | null;
      is_assigned_to_customers?: boolean | null;
      is_assigned_to_stores?: boolean | null;
      is_assigned_to_items?: boolean | null;
      is_assigned_to_categories?: boolean | null;
      /** @description Only apply promocode if cart contains */
      apply_if_cart_contains?: boolean | null;
      multiply_free_products_per_condition?: boolean | null;
      /** @description Is promocode assigned items and categories are all present */
      is_matching_all?: boolean | null;
      /** Format: int32 */
      number_of_cart_products?: number | null;
      has_uses_per_customer?: boolean | null;
      has_number_of_uses?: boolean | null;
    };
    PromocodeDto: {
      /** Format: int64 */
      id?: number | null;
      title?: string | null;
      /** Format: int64 */
      wallet_id?: number | null;
      code?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Active, 2 = Disabled
       */
      status?: number | null;
      description?: string | null;
      /** Format: int64 */
      campaign_id?: number | null;
      campaign_name?: string | null;
      /**
       * Format: int32
       * @description Indicates how many times the promocode has been used
       */
      number_of_uses?: number;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      created_on?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Generic, 2 = EmailAutomation
       */
      type?: number | null;
      incentive?: components["schemas"]["PromocodeIncentiveDto"];
      conditions?: components["schemas"]["PromocodeConditionDto"];
      assigned_categories?:
        | components["schemas"]["PromocodeAssignedCategoryDto"][]
        | null;
      assigned_clients?:
        | components["schemas"]["PromocodeAssignedClientDto"][]
        | null;
      assigned_items?:
        | components["schemas"]["PromocodeAssignedItemDto"][]
        | null;
      assigned_platforms?:
        | components["schemas"]["PromocodeAssignedPlatformDto"][]
        | null;
      languages?: components["schemas"]["PromocodeLanguageDto"][] | null;
    };
    PromocodeDtoPaginatedList: {
      items?: components["schemas"]["PromocodeDto"][] | null;
      /** Format: int32 */
      pageIndex?: number;
      /** Format: int32 */
      totalPages?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      pageSize?: number;
      hasPreviousPage?: boolean;
      hasNextPage?: boolean;
    };
    PromocodeIncentiveAssignedItemDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      item_id?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Free, 2 = Discounted
       */
      type?: number | null;
      /** Format: int64 */
      pricing_id?: number | null;
      /** Format: int32 */
      quantity?: number | null;
      variations?:
        | components["schemas"]["PromocodeIncentiveItemVariationDto"][]
        | null;
    };
    PromocodeIncentiveDto: {
      /** Format: int64 */
      id?: number | null;
      currency?: string | null;
      /** Format: double */
      amount?: number | null;
      restrict_if_other_discount?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = CartWithoutShipping, 2 = SpecificProducts
       */
      apply_discount_type?: number | null;
      is_apply_free_products?: boolean | null;
      is_apply_free_shipping?: boolean | null;
      is_apply_discount_enabled?: boolean | null;
      is_applicable_to_items?: boolean | null;
      assigned_items?:
        | components["schemas"]["PromocodeIncentiveAssignedItemDto"][]
        | null;
      shipping_areas?:
        | components["schemas"]["PromocodeIncentiveShippingAreaDto"][]
        | null;
    };
    PromocodeIncentiveItemVariationDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      variation_id?: number | null;
      /** Format: int32 */
      quantity?: number | null;
      /** Format: int64 */
      variation_pricing_id?: number | null;
    };
    PromocodeIncentiveShippingAreaDto: {
      /** Format: int64 */
      id?: number | null;
      area?: string | null;
    };
    PromocodeLanguageDto: {
      /** Format: int64 */
      id?: number | null;
      language?: string | null;
      promocode_name?: string | null;
    };
    ReferralDiscountDto: {
      /** Format: int64 */
      id?: number | null;
      currency?: string | null;
      /** Format: double */
      amount?: number | null;
    };
    RefreshCommand: {
      token?: string | null;
      refresh_token?: string | null;
    };
    RefundSaleCommand: {
      stan?: string | null;
      /** Format: int64 */
      sale_id?: number;
      /** Format: double */
      refund_amount?: number | null;
      reason?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = Cash, 1 = Card, 2 = Mixed
       */
      payment_method?: number;
      currency?: string | null;
      /** Format: double */
      change?: number | null;
      card_brand?: string | null;
      masked_pan?: string | null;
      stan_card?: string | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      dttm_card?: number | null;
      payment_reference?: string | null;
      rrn?: string | null;
      /** Format: int64 */
      transaction_id?: number;
      ideal_payment_id?: string | null;
    };
    RegisterSaleCommand: {
      stan?: string | null;
      /** Format: double */
      sub_total_amount?: number | null;
      /** Format: double */
      sale_discount_amount?: number | null;
      /** Format: double */
      total_amount?: number | null;
      currency?: string | null;
      comment?: string | null;
      include_note_in_receipt?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = None, 1 = CashSale, 2 = CardSale, 3 = SplitSale, 4 = Refund
       */
      operation_type?: number;
      /** Format: int32 */
      application?: number | null;
      discount_name?: string | null;
      reference_number?: string | null;
      operator_code?: string | null;
      /** Format: int32 */
      reference_number_type?: number | null;
      sale_articles?: components["schemas"]["SaleArticleDto"][] | null;
    };
    RegisterVoidSaleCommand: {
      stan?: string | null;
      /** Format: int64 */
      orig_sale_id?: number;
    };
    RemovePaymentMethodCommand: {
      /** Format: int64 */
      sale_id?: number;
      /** Format: int64 */
      payment_method_id?: number;
    };
    RemovePromocodeFromCartCommand: {
      device_type?: string | null;
      device_vendor?: string | null;
      browser_name?: string | null;
      browser_version?: string | null;
      os_name?: string | null;
      os_version?: string | null;
      /** Format: int64 */
      cart_id?: number;
      /**
       * Format: int64
       * @description Cart associated store
       */
      store_id?: number;
    };
    SaleArticleBundleItemDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      item_id?: number | null;
      /** Format: double */
      quantity?: number | null;
      name?: string | null;
      guid?: string | null;
      /** @description Article sku */
      sku?: string | null;
      /**
       * Format: int64
       * @description Corresponding variation id
       */
      variation_id?: number | null;
      /**
       * Format: int64
       * @description Id of linked category
       */
      category_id?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Generic, 2 = Terminal, 3 = Warranty
       */
      product_type?: number | null;
      is_shippable?: boolean | null;
      is_stock_managed?: boolean | null;
      /** Format: int32 */
      in_stock?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Physical, 2 = Service, 3 = Bundle
       */
      type?: number | null;
      variations?: components["schemas"]["SaleArticleVariationDto"][] | null;
      details?: components["schemas"]["SaleArticleDetailDto"][] | null;
    };
    SaleArticleDetailDto: {
      /** Format: int64 */
      sale_article_id?: number;
      /** Format: int64 */
      id?: number;
      note?: string | null;
      article_hash?: string | null;
      article_parent_hash?: string | null;
    };
    SaleArticleDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      item_id?: number;
      /**
       * Format: double
       * @description Price with VAT and discount (regular and promocode) for single quantity
       */
      price?: number | null;
      /** Format: double */
      quantity?: number | null;
      name?: string | null;
      /** @description Article prices currency */
      currency?: string | null;
      guid?: string | null;
      /**
       * Format: double
       * @description Price with VAT without discount for single quantity
       */
      original_price?: number | null;
      /**
       * Format: double
       * @description Vat amount for signle quantity
       */
      vat_amount?: number | null;
      /**
       * Format: double
       * @description vat_amount * quantity
       */
      total_vat_amount?: number | null;
      /** @description Article sku */
      sku?: string | null;
      /**
       * Format: int64
       * @description Corresponding variation id
       */
      variation_id?: number | null;
      /**
       * Format: int64
       * @description Id of linked category
       */
      category_id?: number | null;
      /** @description Indicates if a promocode is specificly applied to this article */
      is_promocode_applied?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Free, 2 = Discounted
       */
      promocode_discount_type?: number | null;
      /**
       * Format: double
       * @description Promocode discount amount for article with VAT for single quantity
       */
      promocode_discount_amount?: number | null;
      promocode_discount_currency?: string | null;
      /**
       * Format: double
       * @description Promocode discount amount for article without VAT for single quantity
       */
      promocode_discount_amount_no_vat?: number | null;
      /** @description Indicates if article is upsell to another article */
      is_upsell?: boolean | null;
      /**
       * Format: int64
       * @description Id of the corresponding upsell
       */
      upsell_id?: number | null;
      /**
       * Format: int64
       * @description Indicates to wich item the upsell is linked to
       */
      parent_item_id?: number | null;
      upsell_name?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = PreCart, 2 = InCart
       */
      upsell_type?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Generic, 2 = Terminal, 3 = Warranty
       */
      product_type?: number | null;
      /**
       * Format: double
       * @description Price without VAT and discounts for signle quantity
       */
      original_price_no_vat?: number | null;
      /**
       * Format: double
       * @description Price with discounts and without VAT for total quantity
       */
      final_price_no_vat?: number | null;
      /**
       * Format: double
       * @description (Price with VAT without discounts) - (price with VAT and regular discounts)
       */
      discount_amount?: number | null;
      /**
       * Format: double
       * @description (Rounded original_price_no_vat) - (price without VAT with regular discounts for single quantity)
       */
      discount_amount_no_vat?: number | null;
      is_shippable?: boolean | null;
      is_stock_managed?: boolean | null;
      /** Format: int32 */
      in_stock?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Physical, 2 = Service, 3 = Bundle
       */
      type?: number | null;
      /**
       * Format: double
       * @description Price with VAT and regular discount for total quantity
       */
      original_final_price?: number | null;
      /**
       * Format: double
       * @description Price without VAT and regular discount for total quantity
       */
      original_final_price_no_vat?: number | null;
      /** Format: int64 */
      parent_bundle_article_id?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = Products, 1 = Services, 2 = Mixed
       */
      child_bundle_articles_type?: number | null;
      variations?: components["schemas"]["SaleArticleVariationDto"][] | null;
      details?: components["schemas"]["SaleArticleDetailDto"][] | null;
      child_bundle_articles?:
        | components["schemas"]["SaleArticleBundleItemDto"][]
        | null;
    };
    SaleArticleVariationDto: {
      /** Format: int64 */
      id?: number;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Color, 2 = Size, 3 = Fabrics, 4 = Material, 5 = Dimensions, 6 = Height, 7 = Lenght, 8 = Diameter, 9 = Weight, 10 = Capacity, 11 = Storage, 12 = WarrantyPeriod, 13 = Custom
       */
      type?: number | null;
      type_name?: string | null;
      description?: string | null;
    };
    SaleDto: {
      /** Format: int64 */
      sale_id?: number;
      tid?: string | null;
      /** Format: double */
      amount?: number | null;
      /** Format: double */
      refunded_amount?: number | null;
      /** Format: double */
      possible_refund?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = None, 1 = CashSale, 2 = CardSale, 3 = SplitSale, 4 = Refund
       */
      operation_type?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = None, 1 = Pending, 2 = Declined, 3 = Paid
       */
      status?: number | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      date_updated?: number | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      date_created?: number | null;
      /**
       * Format: int64
       * @description Indicates that this sale is refund to sale with id = original_sale_id
       */
      original_sale_id?: number | null;
      currency?: string | null;
      comment?: string | null;
      sale_number?: string | null;
      /** Format: double */
      sub_total_amount?: number | null;
      /** Format: double */
      sale_discount_amount?: number | null;
      stan?: string | null;
      include_note?: boolean | null;
      discount_name?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = None, 1 = MyPos, 2 = MyPosGlass, 5 = SmartTerminals, 6 = OnlineShop
       */
      source?: number | null;
      sale_articles?: components["schemas"]["SaleArticleDto"][] | null;
      payment_methods?: components["schemas"]["PaymentMethodDto"][] | null;
      refund_payment_methods?:
        | components["schemas"]["PaymentMethodDto"][]
        | null;
      order?: components["schemas"]["OrderDto"];
      reference_number?: string | null;
      operator_code?: string | null;
      /** Format: int32 */
      reference_number_type?: number;
      /** Format: int64 */
      wallet_id?: number | null;
      /** Format: double */
      total_vat?: number | null;
      /** Format: double */
      discount_amount_no_vat?: number | null;
    };
    SaleDtoPaginatedList: {
      items?: components["schemas"]["SaleDto"][] | null;
      /** Format: int32 */
      pageIndex?: number;
      /** Format: int32 */
      totalPages?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      pageSize?: number;
      hasPreviousPage?: boolean;
      hasNextPage?: boolean;
    };
    SaleNumberDto: {
      sale_number?: string | null;
    };
    SaleReportDto: {
      /** Format: int64 */
      total_count?: number | null;
      /** Format: double */
      total_amount?: number | null;
      /** Format: double */
      average_amount?: number | null;
      total_currency?: string | null;
      card_payments?: components["schemas"]["SaleReportPaymentDto"];
      cash_payments?: components["schemas"]["SaleReportPaymentDto"];
      refunds?: components["schemas"]["SaleReportPaymentDto"];
      best_selling_product?:
        | components["schemas"]["SaleReportProductDto"][]
        | null;
      chart_data?: components["schemas"]["SalesReportChartDataDto"][] | null;
    };
    SaleReportPaymentDto: {
      /** Format: int64 */
      count?: number | null;
      /** Format: double */
      amount?: number | null;
      currency?: string | null;
    };
    SaleReportProductDto: {
      /** Format: int64 */
      id?: number | null;
      name?: string | null;
      /** Format: double */
      final_price?: number | null;
      currency?: string | null;
      /** Format: int64 */
      sold_for_period?: number | null;
      guid?: string | null;
    };
    SaleSummaryDto: {
      /** Format: double */
      amount?: number | null;
      currency?: string | null;
      /** Format: int64 */
      number_of_sales?: number | null;
    };
    SaleTotalReportDto: {
      totals?: components["schemas"]["SalesCurrencyAmountDto"][] | null;
      /** Format: double */
      total_in_calc_currency?: number | null;
    };
    SalesCurrencyAmountDto: {
      currency?: string | null;
      /** Format: double */
      amount?: number | null;
    };
    SalesReportChartDataDto: {
      /** Format: int32 */
      type?: number;
      tid?: string | null;
      /** Format: double */
      chart_amount?: number | null;
      /** Format: date-time */
      chart_date?: string | null;
      /** Format: int64 */
      dt_sale_updated?: number | null;
      /** Format: int64 */
      store_id?: number | null;
      store_name?: string | null;
    };
    SearchProductsByParentCategoryPostQuery: {
      /** Format: int32 */
      page_number?: number;
      /** Format: int32 */
      page_size?: number;
      order_by?: components["schemas"]["OrderBy"];
      sort_order_items?: components["schemas"]["SortOrderItemDto"][] | null;
      currency?: string | null;
      /** Format: int64 */
      platform_id?: number | null;
      /**
       * Format: int32
       * @example 1 = Physical, 2 = OnlineShop, 3 = Viber, 4 = Unassigned
       */
      platform_type?: number | null;
      language?: string | null;
      is_in_stock?: boolean | null;
      uncategorized?: boolean | null;
      /** Format: int64 */
      outlet_id?: number;
      /** Format: int32 */
      risk_status?: number | null;
      item_ids?: number[] | null;
      /** @example 1 = Physical, 2 = Service, 3 = Bundle */
      types?: number[] | null;
      max_from_category_ids?: number[] | null;
      /** Format: int32 */
      max_number_from_category?: number | null;
      order_by_language?: string | null;
      is_visible?: boolean | null;
      excluded_categories?: number[] | null;
      /** Format: int64 */
      category_id?: number;
      /**
       * Format: int64
       * @description Filters only by main category (NOT by parent)
       */
      main_category_id?: number | null;
      /** Format: int64 */
      discount_id?: number;
      keywords?: string | null;
      /** @description Relevant only when tag keywords is not empty */
      keywords_language?: string | null;
      /** @example 0 = Products, 1 = Services, 2 = Mixed */
      bundle_items_types?: number[] | null;
      /** @description When true it will return both normal items and bundles which have atleast one bundle item in them */
      exclude_empty_bundles?: boolean | null;
    };
    ShipmentPriceDto: {
      /** Format: double */
      price?: number | null;
    };
    SortOrderItemDto: {
      /** Format: int64 */
      item_id?: number;
      /** Format: int64 */
      category_id?: number | null;
      /** Format: int32 */
      order_position?: number;
    };
    StanDto: {
      last_stan?: string | null;
    };
    StoreDesignTemplateDto: {
      /** Format: int64 */
      id?: number;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = BasicTheme, 2 = FashionTheme, 3 = HealthyStoreTheme, 4 = МyPos
       */
      template?: number | null;
    };
    StoreDesignTemplateDtoPaginatedList: {
      items?: components["schemas"]["StoreDesignTemplateDto"][] | null;
      /** Format: int32 */
      pageIndex?: number;
      /** Format: int32 */
      totalPages?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      pageSize?: number;
      hasPreviousPage?: boolean;
      hasNextPage?: boolean;
    };
    StorePagesSelectedColumnDto: {
      /** Format: int64 */
      id?: number;
      /** Format: int64 */
      store_id?: number | null;
      is_home_page_active?: boolean | null;
      is_products_page_active?: boolean | null;
      is_service_page_active?: boolean | null;
      is_contact_us_page_active?: boolean | null;
      is_main_banner_active?: boolean | null;
      is_images_with_text_active?: boolean | null;
      is_featured_products_active?: boolean | null;
      is_browse_categories_active?: boolean | null;
      is_banner_active?: boolean | null;
      is_split_with_image_active?: boolean | null;
      is_services_active?: boolean | null;
      is_contact_us_active?: boolean | null;
    };
    StorePagesSelectedColumnDtoPaginatedList: {
      items?: components["schemas"]["StorePagesSelectedColumnDto"][] | null;
      /** Format: int32 */
      pageIndex?: number;
      /** Format: int32 */
      totalPages?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      pageSize?: number;
      hasPreviousPage?: boolean;
      hasNextPage?: boolean;
    };
    StoreReportDto: {
      /** Format: int64 */
      wallet_id?: number | null;
      store_name?: string | null;
      store_country?: string | null;
      /** Format: int32 */
      total_number_sales?: number | null;
      /** Format: double */
      total_amount_eur?: number | null;
      /** Format: int64 */
      store_id?: number | null;
      tid?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = None, 1 = MyPos, 2 = MyPosGlass, 5 = SmartTerminals, 6 = OnlineShop
       */
      source?: number | null;
      /** Format: int32 */
      sales_for_store_count?: number | null;
      /** Format: double */
      sales_for_store_amount?: number | null;
      sales_currency?: string | null;
      /** Format: double */
      amount_calc_currency?: number | null;
      /** Format: double */
      paid_in_cash?: number | null;
      paid_in_cash_currency?: string | null;
      /** Format: double */
      paid_cash_calc_currency?: number | null;
      /** Format: double */
      paid_card?: number | null;
      paid_card_currency?: string | null;
      /** Format: double */
      paid_card_calc_currency?: number | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      last_sale_date?: number | null;
    };
    StoreReportDtoPaginatedList: {
      items?: components["schemas"]["StoreReportDto"][] | null;
      /** Format: int32 */
      pageIndex?: number;
      /** Format: int32 */
      totalPages?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      pageSize?: number;
      hasPreviousPage?: boolean;
      hasNextPage?: boolean;
    };
    StoresGuidResponseDto: {
      /** Format: int64 */
      store_id?: number;
      logo_guid?: string | null;
    };
    SubscribeEmailCommand: {
      /** Format: int64 */
      store_id?: number;
      email?: string | null;
    };
    SyncCartCommand: {
      device_type?: string | null;
      device_vendor?: string | null;
      browser_name?: string | null;
      browser_version?: string | null;
      os_name?: string | null;
      os_version?: string | null;
      /** Format: int64 */
      cart_id?: number;
      /** Format: int64 */
      store_id?: number;
    };
    TermsOfServiceDto: {
      /** Format: int64 */
      id?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = TermsAndConditions, 2 = CookiePolicy, 3 = PrivacyPolicy, 4 = LegalNotice
       */
      type?: number | null;
      /** Format: int64 */
      store_id?: number | null;
      language?: string | null;
      html?: string | null;
    };
    UnsubscribeEmailCommand: {
      /** Format: int64 */
      store_id?: number;
      email?: string | null;
    };
    UpdateCampaignCommand: {
      /**
       * Format: int64
       * @description Id of campaign to be updated
       */
      campaign_id?: number;
      /** @description Updated name */
      name?: string | null;
    };
    UpdateCartCommand: {
      device_type?: string | null;
      device_vendor?: string | null;
      browser_name?: string | null;
      browser_version?: string | null;
      os_name?: string | null;
      os_version?: string | null;
      /** Format: int64 */
      cart_id?: number | null;
      /** Format: int64 */
      store_id?: number;
      settlement_account_number?: string | null;
      /** Format: int64 */
      merchant_id?: number | null;
      /** Format: int64 */
      client_id?: number | null;
      currency?: string | null;
      language?: string | null;
      /** Format: int64 */
      wallet_number?: number | null;
      billing_country?: string | null;
      billing_city?: string | null;
      billing_post_code?: string | null;
      billing_address?: string | null;
      billing_additional_address?: string | null;
      billing_first_name?: string | null;
      billing_last_name?: string | null;
      billing_email?: string | null;
      billing_phone_number?: string | null;
      shipping_country?: string | null;
      shipping_city?: string | null;
      shipping_post_code?: string | null;
      shipping_address?: string | null;
      shipping_additional_address?: string | null;
      shipping_first_name?: string | null;
      shipping_last_name?: string | null;
      shipping_email?: string | null;
      shipping_phone_number?: string | null;
      shipping_same_as_billing?: boolean | null;
      notify_url?: string | null;
      /** Format: int32 */
      delivery_type?: number | null;
      delivery_currency?: string | null;
      comment?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Abandoned, 2 = AwaitingPayment, 3 = Finished
       */
      type?: number | null;
      cart_url?: string | null;
      /** Format: int64 */
      delivery_location_id?: number | null;
      is_invoice?: boolean | null;
      invoice_company_name?: string | null;
      invoice_company_number?: string | null;
      is_vat_registered?: boolean | null;
      invoice_vat_number?: string | null;
      /** Format: int32 */
      invoice_type?: number | null;
      invoice_billing_country?: string | null;
      invoice_personal_number?: string | null;
      invoice_tax_id?: string | null;
      invoice_certified_email?: string | null;
      invoice_sdi_code?: string | null;
      is_vat_excluded?: boolean | null;
      /** Format: int64 */
      delivery_custom_type_id?: number | null;
      client_has_valid_vat_number?: boolean | null;
      seller_country?: string | null;
      /** Format: int64 */
      pick_up_location_id?: number | null;
    };
    UpdateCartStatusCommand: {
      device_type?: string | null;
      device_vendor?: string | null;
      browser_name?: string | null;
      browser_version?: string | null;
      os_name?: string | null;
      os_version?: string | null;
      /** Format: int64 */
      cart_id?: number;
      /** Format: int64 */
      store_id?: number;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Abandoned, 2 = AwaitingPayment, 3 = Finished
       */
      status?: number;
    };
    UpdateCartUrlCommand: {
      device_type?: string | null;
      device_vendor?: string | null;
      browser_name?: string | null;
      browser_version?: string | null;
      os_name?: string | null;
      os_version?: string | null;
      /** Format: int64 */
      cart_id?: number;
      /** Format: int64 */
      store_id?: number;
      /** @description New url */
      url?: string | null;
    };
    UpdateCategoryCommand: {
      /** Format: int64 */
      id?: number;
      name?: string | null;
      /** Format: int64 */
      parent_category_id?: number | null;
      /** Format: int64 */
      discount_id?: number | null;
      multiple_languages?: boolean | null;
      image_guid?: string | null;
      /** @description Relevant only if multiple_languages = true */
      languages?: components["schemas"]["CategoryLanguageDto"][] | null;
    };
    UpdateCategoryLanguageCommand: {
      /** Format: int64 */
      id?: number;
      /** Format: int64 */
      category_id?: number;
      language?: string | null;
      name?: string | null;
    };
    UpdateClientCommand: {
      /** Format: int64 */
      id?: number;
      name?: string | null;
      family_name?: string | null;
      email?: string | null;
      password?: string | null;
      old_password?: string | null;
      facebook_id?: string | null;
      apple_id?: string | null;
      google_id?: string | null;
      is_activated?: boolean | null;
      gsm?: string | null;
      gsm_prefix?: string | null;
      gsm_country?: string | null;
      language?: string | null;
      code?: string | null;
    };
    UpdateClientInvoiceLocationCommand: {
      /** Format: int64 */
      invoice_address_id?: number;
      country?: string | null;
      city?: string | null;
      address?: string | null;
      is_default_invoice?: boolean | null;
      post_code?: string | null;
      first_name?: string | null;
      family_name?: string | null;
      phone_number?: string | null;
      phone_prefix?: string | null;
      phone_country?: string | null;
      company_name?: string | null;
      company_number?: string | null;
      is_vat_registered?: boolean | null;
      vat_number?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = PrivateIndividual, 2 = Company
       */
      type?: number | null;
      personal_number?: string | null;
      additional_address?: string | null;
      email?: string | null;
      tax_id?: string | null;
      certified_email?: string | null;
      sdi_code?: string | null;
    };
    UpdateClientLocationCommand: {
      /** Format: int64 */
      delivery_address_id?: number;
      country?: string | null;
      city?: string | null;
      address?: string | null;
      post_code?: string | null;
      is_default_address?: boolean | null;
      is_billing_address?: boolean | null;
      first_name?: string | null;
      family_name?: string | null;
      phone_number?: string | null;
      phone_prefix?: string | null;
      phone_country?: string | null;
      additional_address?: string | null;
    };
    UpdateDiscountCommand: {
      /** Format: int64 */
      id?: number;
      name?: string | null;
      /** Format: double */
      amount?: number;
      /** @description Can be either currency or % */
      currency?: string | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      valid_from?: number | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      valid_to?: number | null;
      has_validity_period?: boolean | null;
      show_validity_info?: boolean | null;
      is_active?: boolean | null;
      /** @description Categories to wich the discount to be applied */
      apply_to?: number[] | null;
    };
    UpdateEmailAutomationTriggerCommand: {
      /** Format: int64 */
      id?: number;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = AbandonedCart, 2 = CompletedOrder
       */
      type?: number;
      has_follow_up_email?: boolean | null;
      has_second_follow_up_email?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = DontLimit, 2 = LimitOncePerCustomer, 3 = LimitOncePerCustomerPerDay
       */
      frequency_type?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Active, 2 = Disabled
       */
      status?: number | null;
      is_assigned_to_stores?: boolean | null;
      is_draft?: boolean | null;
      trigger_platforms?:
        | components["schemas"]["EmailAutomationTriggerPlatformDto"][]
        | null;
      emails_settings?:
        | components["schemas"]["EmailAutomationEmailSettingsDto"][]
        | null;
    };
    UpdateEmailAutomationTriggerStatusCommand: {
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Active, 2 = Disabled
       */
      status?: number;
    };
    UpdateItemCommand: {
      /** Format: int64 */
      id?: number;
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = Item, 1 = Liter, 2 = Kg, 3 = Lbs, 4 = Meter, 5 = Inch
       */
      unit_type?: number | null;
      /**
       * Format: double
       * @description Price without VAT and discounts
       */
      original_price?: number | null;
      name?: string | null;
      currency?: string | null;
      sku?: string | null;
      /** Format: int32 */
      in_stock?: number;
      description?: string | null;
      image_guid?: string | null;
      /** Format: int64 */
      category_id?: number | null;
      /** Format: int64 */
      discount_id?: number | null;
      /** Format: double */
      vat?: number | null;
      /** Format: double */
      vat_value?: number | null;
      /** Format: int64 */
      outlet_id?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Physical, 2 = Viber
       */
      outlet_type?: number | null;
      multiple_prices?: boolean;
      multiple_languages?: boolean;
      is_stock_managed?: boolean | null;
      /** Format: int32 */
      stock_alert_number?: number | null;
      is_shippable?: boolean | null;
      barcode?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Draft, 2 = Pending, 3 = Active, 4 = Deleted, 5 = Rejected, 6 = ForRiskCheck, 7 = RequestInfrormation, 8 = ForAdittionalRiskCheck, 9 = ForCorrection
       */
      risk_status?: number | null;
      ris_status_description?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = IncompleteIncorrectDescription, 2 = UnrealisticPrice, 3 = InappropriateImages, 4 = MisleadingInformation, 5 = Other, 6 = Unallowed, 7 = NoLicenceProvided
       */
      risk_substatus?: number | null;
      /** Format: int64 */
      weight?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Kg, 2 = Lbs
       */
      weight_type?: number | null;
      multiple_pictures?: boolean | null;
      multiple_variations?: boolean | null;
      stores_prices_vary?: boolean | null;
      stores_quantities_vary?: boolean | null;
      stores_skus_vary?: boolean | null;
      store_barcodes_vary?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Physical, 2 = Service, 3 = Bundle
       */
      type?: number | null;
      is_overview_enabled?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Generic, 2 = Terminal, 3 = Warranty
       */
      product_type?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = Products, 1 = Services, 2 = Mixed
       */
      bundle_items_type?: number | null;
      /** @description When true it will detach this product from bundles */
      unlink_from_bundles?: boolean | null;
      /** @description Relevant when multiple_pictures = true */
      pictures?: components["schemas"]["ItemPictureDto"][] | null;
      /** @description Relevant when multiple_languages = true */
      languages?: components["schemas"]["ItemLanguageDto"][] | null;
      /** @description Relevant when multiple_prices = true */
      prices?: components["schemas"]["ItemPriceDto"][] | null;
      /** @description Relevant when multiple_variations = true */
      variations?: components["schemas"]["ItemVariationDto"][] | null;
      variation_types?: components["schemas"]["ItemVariationTypeDto"][] | null;
      pricings?: components["schemas"]["ItemPricingDto"][] | null;
      variations_pricings?:
        | components["schemas"]["ItemVariationPricingDto"][]
        | null;
      /** @description Relevant only when type = bundle */
      bundle_items?: components["schemas"]["BundleItemDto"][] | null;
      wallet_owner_first_name?: string | null;
      wallet_name?: string | null;
      recipient_email?: string | null;
      fin_institution?: string | null;
      recipient_language?: string | null;
    };
    UpdateItemLanguageCommand: {
      /** Format: int64 */
      id?: number;
      /** Format: int64 */
      item_id?: number;
      language?: string | null;
      name?: string | null;
      description?: string | null;
    };
    UpdateItemOverviewCommand: {
      /** Format: int64 */
      item_id?: number | null;
      /** Format: int64 */
      id?: number | null;
      language?: string | null;
      overview_text?: string | null;
      /** @description When true it overwrites previous default */
      is_default?: boolean | null;
    };
    UpdateItemPriceCommand: {
      /** Format: int64 */
      id?: number;
      /** Format: int64 */
      item_id?: number;
      /**
       * Format: double
       * @description Price without VAT and discounts
       */
      original_price?: number | null;
      currency?: string | null;
      /** Format: int32 */
      merchant_selected_discount_id?: number | null;
      /** Format: int32 */
      pricing_index?: number | null;
    };
    UpdateOrderCommand: {
      /** Format: int64 */
      order_id?: number;
      /** Format: int64 */
      sale_id?: number;
      /** Format: int32 */
      order_status?: number;
      delivery_has_tracking_link?: boolean | null;
      delivery_tracking_link?: string | null;
      should_send_email?: boolean | null;
      should_validate_flow?: boolean | null;
      cancellation_reason?: components["schemas"]["UpdateOrderCommandCancellationReasonDto"];
    };
    UpdateOrderCommandCancellationReasonDto: {
      reason?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = System, 2 = Buyer, 3 = Store, 4 = Delivery
       */
      group_type?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Auto, 2 = Manually
       */
      cancellation_type?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = MyPosSystemCancelled, 2 = NonMyPosSystemCancelled, 3 = MyPosBuyerCancelled, 4 = NonMyPosBuyerCancelled, 5 = MyPosBuyerRequestedByPhoneEmail, 6 = MyPosBuyerReturnedIn60Days, 7 = MyPosBuyerReturnedAfter60Days, 8 = MyPosBuyerNotABusiness, 9 = MyPosBuyerVerificationDeclined, 10 = MyPosBuyerRequestedVerificationTooSlow, 11 = MyPosStoreItemsOutOfStock, 12 = MyPosStoreDuplicateOnlineOrder, 13 = MyPosStoreDuplicateWithOfflineOrder, 14 = MyPosDeliveryUnsuccessfulOrDeclined, 15 = MyPosDeliveryTakinTooLongOrOther, 16 = NonMyPosBuyerRequestedByPhoneEmail, 17 = NonMyPosBuyerReturnedItems, 18 = NonMyPosStoreItemsOutOfStock, 19 = NonMyPosStoreDuplicateOnlineOrder, 20 = NonMyPosDeliveryUnsuccessfulOrDeclined, 21 = NonMyPosDeliveryTakinTooLongOrOther
       */
      reason_type?: number;
    };
    UpdateOrderDeliveryTrackingLinkCommand: {
      /** Format: int64 */
      order_id?: number;
      /** Format: int64 */
      sale_id?: number;
      delivery_has_tracking_link?: boolean | null;
      delivery_tracking_link?: string | null;
      should_send_email?: boolean | null;
    };
    UpdatePageSettingsFromMobileCommand: {
      /** Format: int64 */
      store_id?: number;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = BasicTheme, 2 = FashionTheme, 3 = HealthyStoreTheme, 4 = МyPos
       */
      template?: number;
      /** Format: int32 */
      default_product_view?: number | null;
      /** Format: int32 */
      menu_position?: number | null;
      /** Format: int32 */
      number_products_view?: number | null;
      /** Format: int32 */
      style?: number;
      logo_guid?: string | null;
      favicon_guid?: string | null;
      notification_bar_is_enabled?: boolean;
      notification_bar_text?: string | null;
      main_theme_color?: string | null;
      /** Format: int32 */
      buttons_style?: number;
      /** Format: int32 */
      font_family?: number;
      facebook?: string | null;
      instagram?: string | null;
      twitter?: string | null;
      country?: string | null;
      city?: string | null;
      zip?: string | null;
      address?: string | null;
      email?: string | null;
      mobile_number?: string | null;
      /** Format: int32 */
      services_default_sorting_type?: number | null;
      /** Format: int32 */
      products_default_sorting_type?: number | null;
      /** Format: int32 */
      number_of_services_on_row?: number | null;
      /** Format: int32 */
      max_services_per_category?: number | null;
      /** Format: int32 */
      max_products_per_category?: number | null;
      group_products_by_category?: boolean | null;
      group_services_by_category?: boolean | null;
      with_service_page?: boolean | null;
      contact_page_enabled?: boolean;
      contact_page_widgets?: components["schemas"]["WidgetDto"][] | null;
      product_page_widgets?: components["schemas"]["WidgetDto"][] | null;
      service_page_widgets?: components["schemas"]["WidgetDto"][] | null;
    };
    UpdatePagesSettingsCommand: {
      /** Format: int64 */
      store_id?: number;
      /** Format: int64 */
      settings_id?: number;
      settings?: string | null;
    };
    UpdatePromocodeCommand: {
      /** Format: int64 */
      id?: number;
      title?: string | null;
      code?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Active, 2 = Disabled
       */
      status?: number;
      description?: string | null;
      /** Format: int64 */
      campaign_id?: number | null;
      conditions?: components["schemas"]["PromocodeConditionDto"];
      incentive?: components["schemas"]["PromocodeIncentiveDto"];
      assigned_categories?:
        | components["schemas"]["PromocodeAssignedCategoryDto"][]
        | null;
      assigned_clients?:
        | components["schemas"]["PromocodeAssignedClientDto"][]
        | null;
      assigned_items?:
        | components["schemas"]["PromocodeAssignedItemDto"][]
        | null;
      assigned_platforms?:
        | components["schemas"]["PromocodeAssignedPlatformDto"][]
        | null;
      languages?: components["schemas"]["PromocodeLanguageDto"][] | null;
    };
    UpdatePromocodeStatusCommand: {
      /** Format: int64 */
      id?: number;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Active, 2 = Disabled
       */
      status?: number;
    };
    UpdateSaleArticleDetailCommand: {
      note?: string | null;
      article_hash?: string | null;
      article_parent_hash?: string | null;
    };
    UpdateSaleArticleInCartCommand: {
      device_type?: string | null;
      device_vendor?: string | null;
      browser_name?: string | null;
      browser_version?: string | null;
      os_name?: string | null;
      os_version?: string | null;
      /** Format: int64 */
      cart_id?: number | null;
      /** Format: int64 */
      store_id?: number;
      sale_article?: components["schemas"]["SaleArticleDto"];
    };
    UpdateStoreDesignSettingsCommand: {
      is_validation_only?: boolean;
      /** Format: int64 */
      store_id?: number;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = BasicTheme, 2 = FashionTheme, 3 = HealthyStoreTheme, 4 = МyPos
       */
      template?: number | null;
      /** Format: int32 */
      menu_position?: number | null;
      /** Format: int32 */
      button_style?: number | null;
      /** Format: int32 */
      font_family?: number | null;
      /** Format: int32 */
      default_product_view?: number | null;
      /** Format: int32 */
      number_products_view?: number | null;
      menu_color?: string | null;
      overlay_color?: string | null;
      headline_1?: string | null;
      headline_2?: string | null;
      facebook_page?: string | null;
      instagram_page?: string | null;
      twitter_page?: string | null;
      notifications_enabled?: boolean | null;
      notification_message?: string | null;
      logo_guid?: string | null;
      header_guid?: string | null;
      show_logo?: boolean | null;
      show_hero_img?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = None, 1 = DateAsc, 2 = DateDesc, 3 = PriceDesc, 4 = PriceAsc, 5 = NameAsc, 6 = PriceNoVatAsc, 7 = PriceNoVatDesc, 8 = Relevance, 9 = Custom
       */
      services_default_sorting_type?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = None, 1 = DateAsc, 2 = DateDesc, 3 = PriceDesc, 4 = PriceAsc, 5 = NameAsc, 6 = PriceNoVatAsc, 7 = PriceNoVatDesc, 8 = Relevance, 9 = Custom
       */
      products_default_sorting_type?: number | null;
      /** Format: int32 */
      number_of_services_on_row?: number | null;
      /** Format: int32 */
      max_services_per_category?: number | null;
      /** Format: int32 */
      max_products_per_category?: number | null;
      group_products_by_category?: boolean | null;
      group_services_by_category?: boolean | null;
    };
    UpdateStoreNotificationSettingsCommand: {
      /** Format: int64 */
      store_id?: number;
      store_url?: string | null;
      store_name?: string | null;
      customer_service_phone?: string | null;
      customer_service_email?: string | null;
    };
    UpdateStoreSettingsCommand: {
      is_validation_only?: boolean;
      /** Format: int64 */
      store_id?: number;
      /**
       * Format: int32
       * @description ENUM
       * @example 0 = Invalid, 1 = DontShow, 2 = ShowUnavailable, 3 = ShowAvailiable, 4 = Max
       */
      out_of_stock_type?: number | null;
      allow_delivery?: boolean | null;
      allow_pick_up?: boolean | null;
      working_hours_enabled?: boolean | null;
      out_of_working_hours_enabled?: boolean | null;
      time_zone?: string | null;
      store_name?: string | null;
      store_url?: string | null;
      customer_service_phone?: string | null;
      customer_service_email?: string | null;
      merchant_name?: string | null;
      merchant_language?: string | null;
      fin_institution?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = VatIncluded, 2 = VatExcluded, 3 = DontShowVat
       */
      vat_display_type?: number | null;
      allow_registration?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Email, 2 = SocialMedia, 3 = Both
       */
      registration_type?: number | null;
      allow_guest_checkout?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Generic, 2 = MyPos
       */
      store_type?: number | null;
      store_title?: string | null;
      working_hours?:
        | components["schemas"]["UpdateStoreSettingsStoreWorkingHoursDto"][]
        | null;
      order_statuses?:
        | components["schemas"]["UpdateStoreSettingsOrderStatusDto"][]
        | null;
      delivery_locations?:
        | components["schemas"]["UpdateStoreSettingsStoreDeliveryLocationDto"][]
        | null;
      languages?:
        | components["schemas"]["UpdateStoreSettingsStoreLanguageDto"][]
        | null;
      pick_up_locations?:
        | components["schemas"]["UpdateStoreSettingsStorePickUpLocationDto"][]
        | null;
      has_phone_call_type?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = FreeCall, 2 = CallToTheNationalFixedNetwork, 3 = CallToNationalMobileNetwork, 4 = Custom
       */
      phone_call_type?: number | null;
      phone_call_languages?:
        | components["schemas"]["UpdateStoreSettingsStorePhoneCallLanguagesDto"][]
        | null;
    };
    UpdateStoreSettingsDeliveryAreaDto: {
      /** Format: int64 */
      id?: number | null;
      area?: string | null;
    };
    UpdateStoreSettingsDeliveryLocationCustomDeliveryTypeDto: {
      /** Format: int64 */
      id?: number | null;
      name?: string | null;
      /** Format: int32 */
      delivery_days_from?: number | null;
      /** Format: int32 */
      delivery_days_to?: number | null;
      is_business_days?: boolean | null;
      /** Format: double */
      delivery_amount?: number | null;
    };
    UpdateStoreSettingsDeliveryLocationExcludedCategoryDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      category_id?: number;
      /** Format: int32 */
      quantity_from?: number;
      /** Format: int32 */
      quantity_to?: number;
      /** Format: double */
      delivery_fee_amount?: number;
    };
    UpdateStoreSettingsDeliveryLocationExcludedItemDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      item_id?: number;
      /** Format: int32 */
      quantity_from?: number;
      /** Format: int32 */
      quantity_to?: number;
      /** Format: double */
      delivery_fee_amount?: number;
    };
    UpdateStoreSettingsDeliveryLocationPriceRangeDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      weight_from?: number | null;
      /** Format: int64 */
      weight_to?: number | null;
      /** Format: double */
      order_price_from?: number | null;
      /** Format: double */
      order_price_to?: number | null;
      /** Format: double */
      delivery_price?: number | null;
    };
    UpdateStoreSettingsOrderStatusDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      store_id?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Pending, 2 = Confirmed, 3 = Completed, 4 = Cancelled, 5 = Shipped, 6 = ReadyForPickup
       */
      type?: number;
      enabled?: boolean | null;
    };
    UpdateStoreSettingsStoreDeliveryLocationDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      store_id?: number | null;
      city?: string | null;
      /** Format: int32 */
      time_from?: number | null;
      /** Format: int32 */
      time_to?: number | null;
      is_business_days?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Weight, 2 = SalePrice, 3 = DeliveryType
       */
      shipment_calculation_type?: number | null;
      currency?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Kg, 2 = Lbs
       */
      weight_type?: number | null;
      has_free_shipping_over_amount?: boolean | null;
      /** Format: double */
      free_shipping_over_amount?: number | null;
      exclude_fee_if_cart_contains?: boolean | null;
      delivery_areas?:
        | components["schemas"]["UpdateStoreSettingsDeliveryAreaDto"][]
        | null;
      price_ranges?:
        | components["schemas"]["UpdateStoreSettingsDeliveryLocationPriceRangeDto"][]
        | null;
      custom_delivery_types?:
        | components["schemas"]["UpdateStoreSettingsDeliveryLocationCustomDeliveryTypeDto"][]
        | null;
      excluded_categories?:
        | components["schemas"]["UpdateStoreSettingsDeliveryLocationExcludedCategoryDto"][]
        | null;
      excluded_items?:
        | components["schemas"]["UpdateStoreSettingsDeliveryLocationExcludedItemDto"][]
        | null;
    };
    UpdateStoreSettingsStoreLanguageDto: {
      /** Format: int64 */
      id?: number | null;
      language?: string | null;
    };
    UpdateStoreSettingsStorePhoneCallLanguagesDto: {
      /** Format: int64 */
      id?: number | null;
      language?: string | null;
      description?: string | null;
    };
    UpdateStoreSettingsStorePickUpLocationDto: {
      /** Format: int64 */
      id?: number | null;
      address?: string | null;
      city?: string | null;
      country?: string | null;
      zip?: string | null;
      is_custom_pick_up_time?: boolean | null;
      working_hours?:
        | components["schemas"]["UpdateStoreSettingsStorePickupWorkingHoursDto"][]
        | null;
    };
    UpdateStoreSettingsStorePickupWorkingHoursDto: {
      is_pick_up?: boolean | null;
      /** Format: int64 */
      id?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Monday, 2 = Tuesday, 3 = Wednesday, 4 = Thursday, 5 = Friday, 6 = Saturday, 7 = Sunday
       */
      week_day?: number | null;
      /** Format: int32 */
      from_hours?: number | null;
      /** Format: int32 */
      to_hours?: number | null;
      /** Format: int32 */
      from_minutes?: number | null;
      /** Format: int32 */
      to_minutes?: number | null;
    };
    UpdateStoreSettingsStoreWorkingHoursDto: {
      /** Format: int64 */
      id?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Monday, 2 = Tuesday, 3 = Wednesday, 4 = Thursday, 5 = Friday, 6 = Saturday, 7 = Sunday
       */
      week_day?: number | null;
      /** Format: int32 */
      from_hours?: number | null;
      /** Format: int32 */
      to_hours?: number | null;
      /** Format: int32 */
      from_minutes?: number | null;
      /** Format: int32 */
      to_minutes?: number | null;
    };
    UpdateTermsOfServiceCommand: {
      /** Format: int64 */
      store_id?: number;
      /** Format: int64 */
      terms_of_service_id?: number;
      html?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = TermsAndConditions, 2 = CookiePolicy, 3 = PrivacyPolicy, 4 = LegalNotice
       */
      type?: number | null;
      language?: string | null;
    };
    UpdateUpsellCommand: {
      /** Format: int64 */
      id?: number;
      title?: string | null;
      name?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = PreCart, 2 = InCart
       */
      type?: number | null;
      /** Format: int32 */
      position?: number | null;
      add_upsell_on_listing?: boolean | null;
      group_products_from_same_category?: boolean | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Published, 2 = NotPublished
       */
      status?: number | null;
      assigned_platforms?:
        | components["schemas"]["UpsellAssignedPlatformDto"][]
        | null;
      assigned_trigger_items?:
        | components["schemas"]["UpsellAssignedTriggerItemDto"][]
        | null;
      items_to_offer?: components["schemas"]["UpsellItemsToOfferDto"][] | null;
      languages?: components["schemas"]["UpsellLanguageDto"][] | null;
      assigned_trigger_categories?:
        | components["schemas"]["UpsellAssignedTriggerCategoryDto"][]
        | null;
    };
    UpdateUpsellStatusCommand: {
      /** Format: int64 */
      upsell_id?: number;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Published, 2 = NotPublished
       */
      status?: number;
    };
    UpsellAssignedPlatformDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      platform_id?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Physical, 2 = OnlineShop, 3 = Viber, 4 = Unassigned
       */
      platform_type?: number | null;
    };
    UpsellAssignedTriggerCategoryDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      category_id?: number | null;
    };
    UpsellAssignedTriggerItemDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      item_id?: number | null;
      /** Format: int64 */
      pricing_id?: number | null;
      variations?:
        | components["schemas"]["UpsellAssignedTriggerItemVariationDto"][]
        | null;
    };
    UpsellAssignedTriggerItemVariationDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      variation_id?: number | null;
      /** Format: int64 */
      variation_pricing_id?: number | null;
    };
    /** @enum {string} */
    UpsellBestSellingOrderByEnum: "ConversionRate" | "Revenue";
    UpsellDto: {
      /** Format: int64 */
      id?: number | null;
      title?: string | null;
      name?: string | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = PreCart, 2 = InCart
       */
      type?: number | null;
      /** Format: int32 */
      position?: number | null;
      add_upsell_on_listing?: boolean | null;
      group_products_from_same_category?: boolean | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      created_on?: number | null;
      /**
       * Format: int32
       * @description ENUM
       * @example 1 = Published, 2 = NotPublished
       */
      status?: number | null;
      /** Format: int64 */
      wallet_id?: number | null;
      assigned_platforms?:
        | components["schemas"]["UpsellAssignedPlatformDto"][]
        | null;
      assigned_trigger_items?:
        | components["schemas"]["UpsellAssignedTriggerItemDto"][]
        | null;
      items_to_offer?: components["schemas"]["UpsellItemsToOfferDto"][] | null;
      languages?: components["schemas"]["UpsellLanguageDto"][] | null;
      assigned_trigger_categories?:
        | components["schemas"]["UpsellAssignedTriggerCategoryDto"][]
        | null;
    };
    UpsellDtoPaginatedList: {
      items?: components["schemas"]["UpsellDto"][] | null;
      /** Format: int32 */
      pageIndex?: number;
      /** Format: int32 */
      totalPages?: number;
      /** Format: int32 */
      totalCount?: number;
      /** Format: int32 */
      pageSize?: number;
      hasPreviousPage?: boolean;
      hasNextPage?: boolean;
    };
    UpsellItemToOfferVariationDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      variation_id?: number | null;
      /** Format: int64 */
      variation_pricing_id?: number | null;
    };
    UpsellItemsToOfferDto: {
      /** Format: int64 */
      id?: number | null;
      /** Format: int64 */
      item_id?: number | null;
      /** Format: int64 */
      pricing_id?: number | null;
      is_selected?: boolean | null;
      /** Format: int32 */
      category_position?: number | null;
      /** Format: int64 */
      category_id?: number | null;
      /** Format: int32 */
      item_position?: number | null;
      variations?:
        | components["schemas"]["UpsellItemToOfferVariationDto"][]
        | null;
    };
    UpsellLanguageDto: {
      /** Format: int64 */
      id?: number | null;
      upsell_title?: string | null;
      language?: string | null;
    };
    UpsellReportChartDataDto: {
      /** Format: int64 */
      upsell_id?: number;
      /** Format: double */
      chart_amount?: number | null;
      /**
       * Format: int64
       * @description Unix timestamp in seconds
       */
      chart_date?: number | null;
      upsell_name?: string | null;
    };
    UpsellReportDto: {
      /** Format: double */
      conversion_rate?: number | null;
      /** Format: int32 */
      number_of_upsell_purchases?: number;
      /** Format: double */
      revenue?: number | null;
      best_performing_upsells?:
        | components["schemas"]["BestPerformingUpsellDto"][]
        | null;
      chart_data?: components["schemas"]["UpsellReportChartDataDto"][] | null;
    };
    ValidateItemsStockCommand: {
      sale_articles?: components["schemas"]["SaleArticleDto"][] | null;
    };
    ValidatePromocodeConditionsCommand: {
      code?: string | null;
      /** Format: int64 */
      store_id?: number | null;
      shipping_area?: string | null;
      /** Format: int64 */
      client_id?: number | null;
      items?: components["schemas"]["SaleArticleDto"][] | null;
    };
    ValidatePromocodeConditionsCommandResponseDto: {
      /** Format: int64 */
      id?: number | null;
      title?: string | null;
      code?: string | null;
      incentive?: components["schemas"]["PromocodeIncentiveDto"];
      languages?: components["schemas"]["PromocodeLanguageDto"][] | null;
    };
    ValidateReferralConditionsCommand: {
      /** Format: int64 */
      referral_id?: number;
      /** Format: int64 */
      store_id?: number;
      items?: components["schemas"]["SaleArticleDto"][] | null;
    };
    ValidationProblemDetails: {
      type?: string | null;
      title?: string | null;
      /** Format: int32 */
      status?: number | null;
      detail?: string | null;
      instance?: string | null;
      errors?: {
        [key: string]: string[];
      } | null;
      [key: string]: unknown;
    };
    VariationPriceDto: {
      /** Format: int64 */
      id?: number | null;
      is_deleted?: boolean;
      /** Format: int64 */
      item_id?: number | null;
      /** Format: int64 */
      platform_id?: number;
      /** Format: int32 */
      platform_type?: number;
      /**
       * Format: double
       * @description Price without VAT and discounts
       */
      original_price?: number | null;
      /**
       * Format: double
       * @description Price with VAT and discounts
       */
      final_price?: number | null;
      /** Format: int64 */
      merchant_selected_discount_id?: number | null;
      final_price_discount?: components["schemas"]["DiscountDto"];
      merchant_selected_discount?: components["schemas"]["DiscountDto"];
      currency?: string | null;
      /** Format: int64 */
      variation_id?: number | null;
      is_visible?: boolean | null;
      /** Format: int32 */
      pricing_index?: number | null;
      /**
       * Format: double
       * @description Price without VAT with discounts
       */
      final_price_no_vat?: number | null;
    };
    WidgetDto: {
      html?: string | null;
      component_name?: string | null;
      component_version?: string | null;
      component_id?: string | null;
      template?: string | null;
      is_active?: boolean;
      component_type?: string | null;
      /** Format: int32 */
      widget_type?: number;
      /** Format: int32 */
      order_position?: number;
      title?: string | null;
      description?: string | null;
      /** Format: int32 */
      text_alignment?: number;
      text_color?: string | null;
      has_banner_image?: boolean;
      banner_image_guid?: string | null;
      background_overlay_color?: string | null;
      /** Format: int32 */
      view_style?: number | null;
      /** Format: int32 */
      image_type?: number | null;
      /** Format: int32 */
      alignment?: number | null;
      with_images?: boolean | null;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
